{
    "body": "I am writing some tools that use spack to test/probe packages a slew of different ways (with various compilers, with various optimizations, with various warning flags, shared/static, compiling C code with c++ compiler, use clang static analyzer (or some other static analyzer), etc. \r\n\r\nSome of the aforementioned activites are just variations on invokation of `spack install <whatever>`. Others are more involved. Lets focus on the simple ones for now.\r\n\r\nSuppose I wanna probe a package's behavior with -Wall and then, separately, -Werror. From -Wall build, I wann count and collect the warnings. From -Werror, I wanna just test if the compile succeeded or not.\r\n\r\nWhat is the best way to effectively script this kind of thing up? I am thinking I would like to code everything in python and then maybe just use spack as a `module` that my python script loads and uses. However, I am not sure of that nor aware of any examples of using spack that way. Alternatively, and somewhat more conceptually simple for me, I can write shell script(s) that do this kind of thing.\r\n\r\nI am just wondering if there is a preferred/recommended way of doing this kind of thing?",
    "user": "markcmiller86",
    "url": "https://api.github.com/repos/spack/spack/issues/5100",
    "updated_at": "2019-12-10 10:20:55",
    "created_at": "2017-08-14 22:59:08",
    "closed_at": "2019-12-10 10:20:54",
    "state": "closed",
    "title": "Recommended way to invoke/use spack within larger \"scripts\"",
    "number": 5100,
    "milestone": null,
    "labels": [],
    "id": 250177304,
    "html_url": "https://github.com/spack/spack/issues/5100",
    "assignees": [
        "alalazo"
    ],
    "comments": 14
}