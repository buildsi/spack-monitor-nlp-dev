{
    "body": "Currently in installer.py, we have a bunch of try/except/finally, and because of this we have to insert callbacks for hooks (e.g., `on_install_failure`) in several places. It would be good to refactor this view so that we can call this hook in a common (single or much fewer instances of) area. From this discussion: https://github.com/spack/spack/pull/21930#discussion_r596474089\r\n\r\nfrom @tgamblin : \r\n\r\n> I'm worried in general about the shotgun mods to this file. I think there are too many concerns in installer.\r\n> Is it possible to raise a general type of exception for failures (i.e. wrap the exception if it's not a type you can catch all in one except block) and send the task failure someplace outside the core logic? I just think there is too much going on here and it'll become unmaintainable.\r\n",
    "user": "vsoch",
    "url": "https://api.github.com/repos/spack/spack/issues/22400",
    "updated_at": "2021-03-18 22:26:11",
    "created_at": "2021-03-18 22:26:11",
    "closed_at": "None",
    "state": "open",
    "title": "Refactor installer.py to have better structure for errors",
    "number": 22400,
    "milestone": null,
    "labels": [
        "feature"
    ],
    "id": 835322890,
    "html_url": "https://github.com/spack/spack/issues/22400",
    "assignees": [],
    "comments": 0
}