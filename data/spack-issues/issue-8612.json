{
    "body": "fixes #7967 \r\n\r\nThis PR gives Spack the ability to hook external commands. This is done adding a new keyword (`extensions`) to `config.yaml`, which contains a list of paths pointing to valid extensions.\r\n\r\n### Changelist\r\n\r\n- [x] Added support to hook external commands\r\n- [ ] Added support to `spack create`, so that it can create a stub structure for extensions\r\n- [ ] Added documentation on external commands\r\n\r\n### What is a valid extension?\r\nA valid extension is any path in your filesystem which respect a certain naming and layout for files:\r\n```console\r\n$ tree spack-scripting/\r\nspack-scripting/ # The top level directory must match the format 'spack-{extension_name}'\r\n\u251c\u2500\u2500 pytest.ini # Optional file if the extension ships its own tests\r\n\u251c\u2500\u2500 scripting # Folder that may contain modules that are needed for the extension commands\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 cmd # Folder containing extension commands\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 filter.py # A new command that will be available \r\n\u2514\u2500\u2500 tests # Tests for this extension\r\n    \u251c\u2500\u2500 conftest.py \r\n    \u2514\u2500\u2500 test_filter.py\r\n\u2514\u2500\u2500 templates # Templates that may be needed by the extension\r\n```\r\nBoth naming and layout are tentative at the moment, so comments to improve them are welcome.\r\n\r\n### Example\r\nTo try out a sample extension:\r\n1. Clone spack somewhere. \r\n2. Clone [this repository](https://github.com/alalazo/spack-scripting):\r\n```console\r\n$ pwd\r\n/home/user\r\n\r\n$ mkdir tmp && cd tmp\r\n$ git clone https://github.com/alalazo/spack-scripting.git\r\nCloning into 'spack-scripting'...\r\nremote: Counting objects: 11, done.\r\nremote: Compressing objects: 100% (7/7), done.\r\nremote: Total 11 (delta 0), reused 11 (delta 0), pack-reused 0\r\nReceiving objects: 100% (11/11), done.\r\n```\r\n3. Add the following line to `config.yaml`:\r\n```yaml\r\nconfig:\r\n  extensions:\r\n    -  /home/user/tmp/spack-scripting\r\n```\r\n4. To check that everything is hooked properly, try looking for the filter command:\r\n```console\r\n$ spack filter --help\r\nusage: spack filter [-h] [--installed | --not-installed]\r\n                    [--explicit | --implicit] [--output OUTPUT]\r\n                    ...\r\n\r\nfilter specs based on their properties\r\n\r\npositional arguments:\r\n  specs            specs to be filtered\r\n\r\noptional arguments:\r\n  -h, --help       show this help message and exit\r\n  --installed      select installed specs\r\n  --not-installed  select specs that are not yet installed\r\n  --explicit       select specs that were installed explicitly\r\n  --implicit       select specs that are not installed or were installed implicitly\r\n  --output OUTPUT  where to dump the result\r\n```\r\n5. You can also run the unit tests that are shipped with an extension:\r\n```console\r\n$ spack test --extension=scripting\r\n============================================================== test session starts ===============================================================\r\nplatform linux -- Python 3.6.5, pytest-3.2.5, py-1.4.34, pluggy-0.4.0\r\nrootdir: /home/mculpo/tmp/spack-scripting, inifile: pytest.ini\r\ncollected 5 items                                                                                                                                 \r\n\r\ntests/test_filter.py ...xx\r\n============================================================ short test summary info =============================================================\r\nXFAIL tests/test_filter.py::test_filtering_specs[flags3-specs3-expected3]\r\nXFAIL tests/test_filter.py::test_filtering_specs[flags4-specs4-expected4]\r\n\r\n=========================================================== slowest 20 test durations ============================================================\r\n4.82s setup    tests/test_filter.py::test_filtering_specs[flags0-specs0-expected0]\r\n0.20s teardown tests/test_filter.py::test_filtering_specs[flags4-specs4-expected4]\r\n0.17s call     tests/test_filter.py::test_filtering_specs[flags4-specs4-expected4]\r\n0.14s call     tests/test_filter.py::test_filtering_specs[flags2-specs2-expected2]\r\n0.13s call     tests/test_filter.py::test_filtering_specs[flags3-specs3-expected3]\r\n0.13s call     tests/test_filter.py::test_filtering_specs[flags1-specs1-expected1]\r\n0.11s call     tests/test_filter.py::test_filtering_specs[flags0-specs0-expected0]\r\n0.00s setup    tests/test_filter.py::test_filtering_specs[flags3-specs3-expected3]\r\n0.00s setup    tests/test_filter.py::test_filtering_specs[flags2-specs2-expected2]\r\n0.00s setup    tests/test_filter.py::test_filtering_specs[flags4-specs4-expected4]\r\n0.00s setup    tests/test_filter.py::test_filtering_specs[flags1-specs1-expected1]\r\n0.00s teardown tests/test_filter.py::test_filtering_specs[flags2-specs2-expected2]\r\n0.00s teardown tests/test_filter.py::test_filtering_specs[flags0-specs0-expected0]\r\n0.00s teardown tests/test_filter.py::test_filtering_specs[flags3-specs3-expected3]\r\n0.00s teardown tests/test_filter.py::test_filtering_specs[flags1-specs1-expected1]\r\n====================================================== 3 passed, 2 xfailed in 5.78 seconds =======================================================\r\n```",
    "user": "alalazo",
    "url": "https://api.github.com/repos/spack/spack/issues/8612",
    "updated_at": "2019-03-29 08:13:29",
    "created_at": "2018-06-29 14:00:35",
    "closed_at": "2019-03-28 23:56:37",
    "state": "closed",
    "title": "Spack can be extended with external commands",
    "number": 8612,
    "milestone": null,
    "labels": [
        "feature",
        "commands"
    ],
    "id": 337010391,
    "html_url": "https://github.com/spack/spack/pull/8612",
    "assignees": [
        "scheibelp"
    ],
    "comments": 10
}