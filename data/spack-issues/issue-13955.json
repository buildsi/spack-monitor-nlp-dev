{
    "body": "My colleague @ldamorim and I are currently trying to install packages that declare `extends('python')` and use an external, macOS Catalina Python 3.7.3 in `package.yaml`. \r\n\r\nSince this method tries to install into the python install directory, which in the case of a system-provided install does require root access and will fail. We wonder how workflows and good policies would look like for users that want to re-use their system-wide python.\r\n\r\nRegarding the [actual intentions](https://github.com/spack/spack/issues/5559#issuecomment-333598324) of `extends('python')` one could potentially achieve the same user-level functionality (auto-load an extension when the base package is loaded) without modifying the base package python but instead by setting environment variables in user-controlled paths, similar to `pip`'s `--user` option.\r\n\r\nAlternatively, being able to mark an external package in `packages.yaml` as \"read-only\" and discarding/warning on all `extends()` could be a possible hack to get going?\r\n\r\nAny opinions or recommendations?",
    "user": "ax3l",
    "url": "https://api.github.com/repos/spack/spack/issues/13955",
    "updated_at": "2022-01-07 21:13:02",
    "created_at": "2019-12-02 21:00:34",
    "closed_at": "2022-01-07 21:13:01",
    "state": "closed",
    "title": "Extends Python with External Python",
    "number": 13955,
    "milestone": null,
    "labels": [
        "question",
        "configuration",
        "python",
        "external-packages",
        "workflow"
    ],
    "id": 531535809,
    "html_url": "https://github.com/spack/spack/issues/13955",
    "assignees": [
        "adamjstewart"
    ],
    "comments": 6
}