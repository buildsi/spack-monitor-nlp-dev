{
    "body": "I am working on adding several tomography packages. While my group exclusively uses them via their python interfaces (and that's pretty common), about a quarter of the wider community is likely to use them via Matlab, C++, or IDL. Naming the package py- would normally make sense, but then it would seem to be Python-exclusive. What's the best practice for naming in such situations?\r\n\r\nLikewise, one of the packages astra-toolkit is very similar in name to astra. In naming packages - and options for variants - is there a best practice when there are similarities in name that just seem likely to trip up the concretizer. I'm thinking of the qmcpack spec when:\r\n\r\n depends_on('espresso@5.3.0+qmcpack~elpa', when='+mpi')\r\n\r\nand we went with to get around it:\r\n\r\n depends_on('espresso@5.3.0+qmcpackconv~elpa', when='+mpi')\r\n\r\nThanks,\r\nWilliam",
    "user": "wscullin",
    "url": "https://api.github.com/repos/spack/spack/issues/5206",
    "updated_at": "2017-09-05 19:55:18",
    "created_at": "2017-08-24 19:05:07",
    "closed_at": "2017-09-05 19:55:18",
    "state": "closed",
    "title": "Best practices when naming packages: multiple interfaces and namespace collisions",
    "number": 5206,
    "milestone": null,
    "labels": [
        "question"
    ],
    "id": 252699718,
    "html_url": "https://github.com/spack/spack/issues/5206",
    "assignees": [],
    "comments": 3
}