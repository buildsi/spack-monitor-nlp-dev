{
    "body": "From what I can tell, the current development model for Spack packages involves a package and in particular, that package's build interface (e.g. CMakeList.txt, configure.ac, Makefile, etc.), owned, developed and maintained over *there* and then a Spack *recipe* for building that package in Spack as a `package.py` file. So, its pretty easy for the two to fall out of sync. with each other. When it does, who is responsible for fixing that?\r\n\r\nIs it possible that package owners might, at some point, wanna maintain the Spack *recipe* themselves? Just as a package in Spack *knows* where to go to download the package source code, is it concievable a `package.py` file might know where to get updates of itself? So, the first thing it would do is download an up to date `package.py`. Of course, this feature could be off by default but it would allow package owners to maintain build recipes themselves and keep them up to date as the package build interface changes. ",
    "user": "markcmiller86",
    "url": "https://api.github.com/repos/spack/spack/issues/4594",
    "updated_at": "2017-08-25 01:30:10",
    "created_at": "2017-06-23 22:52:26",
    "closed_at": "2017-08-25 01:30:10",
    "state": "closed",
    "title": "Can package teams maintain package.py in their own repos?",
    "number": 4594,
    "milestone": null,
    "labels": [
        "question"
    ],
    "id": 238270880,
    "html_url": "https://github.com/spack/spack/issues/4594",
    "assignees": [],
    "comments": 2
}