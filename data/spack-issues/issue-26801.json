{
    "body": "Hi,\r\n\r\nYou may can tell if possible to build an app with a compiler but ALL its dependencies with different compiler with one directive?\r\n\r\nwhat i mean is that if i do for example:\r\n```\r\nspack install py-tensorflow@2.2.3 %gcc@7.5.0\r\n```\r\n\r\npy-tensorflow@2.2.3 and  all its dependencies get built with gcc 7.5.0,\r\nand if we want a specific dependency to be built with different compiler we need to specify it like:\r\n```\r\nspack install py-tensorflow@2.2.3 %gcc@7.5.0 ^python@3.7.5 %gcc@11.2.0\r\n```\r\nAs i'm using gcc@11.2.0 by default for all tools, we want dependencies to be solved\r\nwith the gcc@11.2.0 instead of trying to build everything also for gcc@7.5.0 ..\r\nof course we can repeat every dependency as the python example above but \r\nyou may tell if there is something more elegant which take everything into consideration.\r\n\r\ncurrently i'm combining, but it just take double the size,\r\nwe don't care about with which compiler the binaries being built,\r\nsave us lots of space and build time.\r\n```\r\nspack install py-tensorflow@2.2.3 cuda_arch=80 %gcc@7.5.0 target=x86_64 ^cuda@11.1.0 %gcc@11.2.0 ^python@3.7.5%gcc@11.2.0 ^nccl@2.8.4-1%gcc@7.5.0 cuda_arch=35,52,61,70,75,80,86 ^pkgconf@1.7.3%gcc@11.2.0 ^ncurses@6.2%gcc@11.2.0 ^libtool@2.4.6%gcc@11.2.0 ^cudnn@8.0.4.30-11.1-linux-x64%gcc@11.2.0 ^openblas@0.3.12%gcc@11.2.0 ^swig@4.0.2%gcc@11.2.0 ^openmpi@3.1.6%gcc@11.2.0\r\n```\r\n\r\n**spack version 0.16.2**\r\n\r\nplease advice,\r\nThanks a head.",
    "user": "idesk2596",
    "url": "https://api.github.com/repos/spack/spack/issues/26801",
    "updated_at": "2022-02-10 17:00:50",
    "created_at": "2021-10-18 16:48:07",
    "closed_at": "None",
    "state": "open",
    "title": "build all dependencies with different compiler",
    "number": 26801,
    "milestone": null,
    "labels": [],
    "id": 1029359352,
    "html_url": "https://github.com/spack/spack/issues/26801",
    "assignees": [],
    "comments": 1
}