{
    "body": "Pulled down a fresh copy of Spack and attempted to install emacs and was met with \"**Error: NameError: global name 'spec' is not defined**\":\r\n```\r\n==> Installing emacs\r\n==> ncurses is already installed in /home/vagrant/spack/opt/spack/linux-centos7-x86_64/gcc-4.8.5/ncurses-6.0-jfac4tqswyeppf5jphk2lxew7bpqx4z6\r\n==> Using cached archive: /home/vagrant/spack/var/spack/cache/emacs/emacs-25.1.tar.gz\r\n==> Staging archive: /home/vagrant/spack/var/spack/stage/emacs-25.1-k5preh7xr6tciuhbf2t42dj5ennepor5/emacs-25.1.tar.gz\r\n==> Created stage in /home/vagrant/spack/var/spack/stage/emacs-25.1-k5preh7xr6tciuhbf2t42dj5ennepor5\r\n==> Ran patch() for emacs\r\n==> Building emacs [AutotoolsPackage]\r\n==> Executing phase : 'autoreconf'\r\n==> Executing phase : 'configure'\r\n==> Error: NameError: global name 'spec' is not defined\r\n/home/vagrant/spack/var/spack/repos/builtin/packages/emacs/package.py:52, in configure_args:\r\n     50       def configure_args(self):\r\n     51           args = []\r\n  >> 52           toolkit = spec.variants['toolkit'].value\r\n     53           if '+X' in spec:\r\n     54               if toolkit not in ('gtk', 'athena'):\r\n     55                   raise InstallError(\"toolkit must be in (gtk, athena), not %s\" %\r\n     56                                      toolkit)\r\n     57               args = [\r\n     58                   '--with-x',\r\n     59                   '--with-x-toolkit={0}'.format(toolkit)\r\n     60               ]\r\n     61           else:\r\n     62               args = ['--without-x']\r\n     63\r\n     64           return args\r\n\r\nSee build log for details:\r\n  /tmp/vagrant/spack-stage/spack-stage-dWYAqz/emacs-25.1/spack-build.out\r\n```\r\n\r\nAfter a quick search of open issues, I was not able to locate a reference to this.  I did find a similar issue in #2113.\r\n\r\nAfter reading that, it seems there is some conflicting preferences...or at least that's how I read it...on when to use passing `spec` to the `configure_args()` function vs `self.spec` and not passing `spec` to said function.\r\n\r\nI opted for defining `spec` as `self.spec`.",
    "user": "TheQueasle",
    "url": "https://api.github.com/repos/spack/spack/issues/2868",
    "updated_at": "2017-01-19 14:26:40",
    "created_at": "2017-01-18 22:21:00",
    "closed_at": "2017-01-19 14:26:40",
    "state": "closed",
    "title": "Adding some fixes to packages that use `configure_args` function without setting spec set or directly referencing it",
    "number": 2868,
    "milestone": null,
    "labels": [
        "bug",
        "build-environment",
        "autotools"
    ],
    "id": 201709141,
    "html_url": "https://github.com/spack/spack/pull/2868",
    "assignees": [],
    "comments": 5
}