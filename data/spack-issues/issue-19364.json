{
    "body": "Add support for `spack external find` for packages that don't have an associated binary executables, using environment variables as hints where appropriate or perhaps [CMake package files](https://cmake.org/cmake/help/latest/command/find_package.html#search-procedure).\r\n\r\n### Rationale\r\n\r\nThere are data-only packages such as `geant4-data` that are useful to have preinstalled as a collection; and other packages (such as a few internal ones in use at ORNL) that can't be downloaded and thus *have* to be installed as externally found packages. The current mechanism for `spack external find` only looks for executables. Most nuclear (and HEP) codes that use external data files have an option for looking up data paths with an environment variable (although some assume that the only data you would ever need is for their application so they choose names like `$DATA` and `$DATAPATH`, but some [geant4] are better and scope their variables like `$G4ENDL`). Currently I have to add these to the `packages.yaml` by hand.\r\n\r\n### Description\r\n\r\nPackages that don't have executables should support `spack external find` via another mechanism, whether it's based on environment variables or some other more generic approach besides executable paths.\r\n\r\n(I'd be happy to help contribute to this feature, but I want to coordinate as discussed in slack.)",
    "user": "sethrj",
    "url": "https://api.github.com/repos/spack/spack/issues/19364",
    "updated_at": "2020-10-20 10:22:47",
    "created_at": "2020-10-19 13:04:43",
    "closed_at": "None",
    "state": "open",
    "title": "`spack external find` for non-executables ",
    "number": 19364,
    "milestone": null,
    "labels": [
        "feature",
        "external-packages"
    ],
    "id": 724590942,
    "html_url": "https://github.com/spack/spack/issues/19364",
    "assignees": [
        "scheibelp"
    ],
    "comments": 2
}