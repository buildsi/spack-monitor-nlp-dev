{
    "body": "<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `spack find` to list all the installed packages and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n1. Change a clang spec name in a `compilers.yaml` to use an alias, e.g., `clang@9.0.0` to `clang@beta2019.11.14`\r\n2. Attempt to build a C++11 (or greater) project with that compiler\r\n\r\n### Error Message\r\n\r\n```\r\n==> [2020-08-17-10:42:39.147654] Error: UnsupportedCompilerFlag: clang (< 3.3) does not support the C++11 standard (as compiler.cxx11_flag).\r\n    If you think it should, please edit the compiler.clang subclass to implement the cxx11_flag property and submit a pull request or issue.\r\n\r\nspack/var/spack/repos/builtin/packages/superlu-dist/package.py:89, in flag_handler:\r\n         86    def flag_handler(self, name, flags):\r\n         87        flags = list(flags)\r\n         88        if name == 'cxxflags':\r\n  >>     89            flags.append(self.compiler.cxx11_flag)\r\n         90        if name == 'cflags' and '%pgi' not in self.spec:\r\n         91            flags.append('-std=c99')\r\n         92        return (None, None, flags)\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"spack/lib/spack/spack/build_environment.py\", line 845, in child_process\r\n    setup_package(pkg, dirty=dirty)\r\n  File \"spack/lib/spack/spack/build_environment.py\", line 720, in setup_package\r\n    set_compiler_environment_variables(pkg, build_env)\r\n  File \"spack/lib/spack/spack/build_environment.py\", line 273, in set_compiler_environment_variables\r\n    injf, envf, bsf = handler(pkg, flag, spec.compiler_flags[flag])\r\n  File \"spack/var/spack/repos/builtin/packages/superlu-dist/package.py\", line 90, in flag_handler\r\n    if name == 'cflags' and '%pgi' not in self.spec:\r\n  File \"spack/lib/spack/spack/compilers/clang.py\", line 95, in cxx11_flag\r\n    self, \"the C++11 standard\", \"cxx11_flag\", \"< 3.3\"\r\nspack.compiler.UnsupportedCompilerFlag: clang (< 3.3) does not support the C++11 standard (as compiler.cxx11_flag).\r\n    If you think it should, please edit the compiler.clang subclass to implement the cxx11_flag property and submit a pull request or issue.\r\n==> [2020-08-17-10:42:39.148077] Flagging superlu-dist as failed: UnsupportedCompilerFlag: clang (< 3.3) does not support the C++11 standard (as compiler.cxx11_flag).\r\n\r\n```\r\n\r\n### Information on your system\r\n\r\n<!-- Please include the output of `spack debug report` -->\r\n* **Spack:** 0.15.4\r\n* **Python:** 3.7.2\r\n* **Platform:** linux-rhel7-power9le\r\n<!-- If you have any relevant configuration detail (custom `packages.yaml` or `modules.yaml`, etc.) you can add that here as well. -->\r\n\r\n### Additional information\r\n\r\n<!-- These boxes can be checked by replacing [ ] with [x] or by clicking them after submitting the issue. -->\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [x] I have run the failing commands in debug mode and reported the output\r\n\r\nCurrently the cxx11 flag logic for clang (and gcc) checks against `self.version`, which in the case of an aliased compiler name will not match the \"real\" version of the compiler.  Possibly the condition could be changed to something like the following:\r\n```py\r\nif ver(self.get_real_version()) < ver('3.3'):\r\n    raise UnsupportedCompilerFlag\r\n```\r\nThis uses the self-reported compiler version instead of what the user has named a given compiler in their `compilers.yaml` file.\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack! -->\r\n",
    "user": "joshessman-llnl",
    "url": "https://api.github.com/repos/spack/spack/issues/18111",
    "updated_at": "2020-08-20 04:56:07",
    "created_at": "2020-08-17 17:47:02",
    "closed_at": "2020-08-20 04:56:07",
    "state": "closed",
    "title": "Language version flag checks do not work for non-standard compiler spec names",
    "number": 18111,
    "milestone": null,
    "labels": [
        "bug",
        "impact-low"
    ],
    "id": 680413451,
    "html_url": "https://github.com/spack/spack/issues/18111",
    "assignees": [
        "becker33"
    ],
    "comments": 1
}