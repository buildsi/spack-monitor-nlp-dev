{
    "body": "* it is no longer absolutely required that\r\n`~/.spack` be used as the user-level config\r\nscope path---it can now be customized\r\nto any arbitrary system path\r\n\r\n* `~/.spack` remains the default for backward\r\ncompatibility, but a custom value may\r\nbe provided in `etc/spack/defaults/config.yaml`\r\n\r\n* to accomplish this, it was necessary to\r\ngenerate a second `Configuration` instance containing\r\nonly the default scope, so that this scope\r\ncould be parsed for the `user_path` setting\r\nwhen populating the true `Configuration`\r\nscope\r\n\r\nFixes #12892\r\nFixes #13057\r\nCloses #7433\r\n\r\ncc @junghans @AndrewGaspar @alalazo\r\n\r\n### Notes\r\n\r\n- the diff makes it look more complicated than it really is because of the shifting around of functions in the config scope code\r\n- if the core team thinks this might work, I could use some guidance on unit tests---for now, I've been able to change the new `user_path` variable value and my repos and mirror lists get cleared, and if I add new ones then the new `user_path` starts getting populated with config files, which is a good sign, I think",
    "user": "tylerjereddy",
    "url": "https://api.github.com/repos/spack/spack/issues/13139",
    "updated_at": "2020-08-23 03:27:34",
    "created_at": "2019-10-10 23:13:50",
    "closed_at": "None",
    "state": "open",
    "title": "WIP, ENH: remove ~/.spack requirement",
    "number": 13139,
    "milestone": null,
    "labels": [
        "feature"
    ],
    "id": 505555961,
    "html_url": "https://github.com/spack/spack/pull/13139",
    "assignees": [],
    "comments": 12
}