{
    "body": "What does it (should it) mean to compute the `full_hash()` of a concretized spec of an external package like `opengl` or `openglu`, which are both system providers of virtual packages?  I'm getting a stack trace that doesn't seem to state the true problem.\r\n\r\n## Expected Result\r\n\r\nI would expect/hope for either an exception stating that the `full_hash` cannot be computed for this kind of package, or else perhaps it should work and actually compute the hash.  I'm actually unsure of what the expected behavior should be.\r\n\r\n## Actual Result\r\n\r\nThere are two different cases for what actually happens, depending on whether you have an entry in your local `packages.yaml` or not.  Let's consider the `opengl` case for the time being, though I verified that `openglu` has the same issue.\r\n\r\n### Case 1: You have an entry in `packages.yaml`\r\n\r\nMine looks like this:\r\n\r\n```\r\npackages:\r\n  opengl:\r\n    paths:\r\n      opengl@4.5.0: /opt/opengl\r\n    buildable: False\r\n```\r\n\r\nThen I do:\r\n\r\n```\r\n$ spack python\r\nSpack version 0.11.2\r\nPython 2.7.12, Linux x86_64\r\n>>> from spack.spec import Spec\r\n>>> s1 = Spec('opengl')\r\n>>> s1.concretize()\r\n>>> s1.full_hash()\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/data/scott/projects/spack/lib/spack/spack/spec.py\", line 1442, in full_hash\r\n    package_hash = self.package.content_hash()\r\n  File \"/data/scott/projects/spack/lib/spack/spack/package.py\", line 1084, in content_hash\r\n    source_id = fs.for_package_version(self, self.version).source_id()\r\n  File \"/data/scott/projects/spack/lib/spack/spack/fetch_strategy.py\", line 1051, in for_package_version\r\n    return _extrapolate(pkg, version)\r\n  File \"/data/scott/projects/spack/lib/spack/spack/fetch_strategy.py\", line 1022, in _extrapolate\r\n    return URLFetchStrategy(pkg.url_for_version(version))\r\nExtrapolationError: Can't extrapolate a URL for version 4.5.0 because package opengl defines no URLs\r\n```\r\n\r\n### Case 2: You don't have an entry in `packages.yaml`\r\n\r\nWhen I removed my  `packages.yaml` and tried again, the problem was a little different:\r\n\r\n```\r\n$ spack python\r\nSpack version 0.11.2\r\nPython 2.7.12, Linux x86_64\r\n>>> from spack.spec import Spec\r\n>>> s1 = Spec('opengl')\r\n>>> s1.concretize()\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/data/scott/projects/spack/lib/spack/spack/spec.py\", line 1847, in concretize\r\n    self._concretize_helper())\r\n  File \"/data/scott/projects/spack/lib/spack/spack/spec.py\", line 1690, in _concretize_helper\r\n    concretizer.concretize_version(self),\r\n  File \"/data/scott/projects/spack/lib/spack/spack/concretize.py\", line 216, in concretize_version\r\n    raise NoValidVersionError(spec)\r\nNoValidVersionError: There are no valid versions for opengl that match ':'\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\nHopefully the information above is enough to reproduce the issue, but please let me know if more is needed.\r\n\r\n## Information on your system\r\n\r\n```\r\n$ uname -a\r\nLinux beast 4.4.0-131-generic #157-Ubuntu SMP Thu Jul 12 15:51:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n",
    "user": "scottwittenburg",
    "url": "https://api.github.com/repos/spack/spack/issues/8929",
    "updated_at": "2018-08-10 15:44:11",
    "created_at": "2018-08-09 18:58:49",
    "closed_at": "None",
    "state": "open",
    "title": "Computing full_hash() of external package fails",
    "number": 8929,
    "milestone": null,
    "labels": [
        "hashes"
    ],
    "id": 349249840,
    "html_url": "https://github.com/spack/spack/issues/8929",
    "assignees": [],
    "comments": 3
}