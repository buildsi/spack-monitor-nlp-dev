{
    "body": "The packages in view are very much like the set of dependencies of a package, except that that package itself doesn't install anything. To ensure that the packages that form a view are consistent, one can begin with describing a set of dependencies, and then let Spack's concretization algorithm resolve them to decide which packages should be part of a view.\n\nThis will ensure that all packages in a view are consistent with each other, and can be combined with each other at will. No packages will be missing since Spack adds necessary dependencies automatically. The dependency resolution and concretization mechanism exists already, and there is a priori no reason why the view-conflict-resolution algorithm should use a different set of rules than the concretization algorithm.\n\nCurrently, views are managed by manually adding and removing packages. That is a bit tedious and brittle. Having a `view.yaml` file that lists the dependencies might be preferable in the long term. For example, I want to be able to create very similar views on all the HPC systems I am using.\n\n(Unsurprisingly, I am currently using a private phantom package for this that uses many `depends_on` statements.)\n",
    "user": "eschnett",
    "url": "https://api.github.com/repos/spack/spack/issues/1260",
    "updated_at": "2018-04-13 09:00:33",
    "created_at": "2016-07-15 17:28:00",
    "closed_at": "2018-04-13 08:59:26",
    "state": "closed",
    "title": "Implement views based on phantom packages",
    "number": 1260,
    "milestone": null,
    "labels": [],
    "id": 165838172,
    "html_url": "https://github.com/spack/spack/issues/1260",
    "assignees": [],
    "comments": 1
}