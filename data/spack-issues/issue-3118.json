{
    "body": "I was trying to debug an issue for someone, but wasn't able to build libdwarf on macOS. It looks like it is trying to build .so instead of .dylib. Anyone see this before?:\r\n```\r\n/Users/Adam/spack/lib/spack/env/clang/clang  -g -O2 -I. -I. -fPIC    -shared dwarf_abbrev.o dwarf_alloc.o dwarf_arange.o dwarf_die_deliv.o dwarf_elf_access.o dwarf_error.o dwarf_form.o dwarf_frame.o dwarf_frame2.o dwarf_frame3.o dwarf_funcs.o dwarf_gdbindex.o dwarf_global.o dwarf_harmless.o dwarf_init_finish.o dwarf_leb.o dwarf_line.o dwarf_loc.o dwarf_macro.o dwarf_macro5.o dwarf_original_elf_init.o dwarf_pubtypes.o dwarf_query.o dwarf_ranges.o dwarf_string.o dwarf_tied.o dwarf_tsearchhash.o dwarf_types.o dwarf_util.o dwarf_vars.o dwarf_weaks.o dwarf_xu_index.o dwarf_print_lines.o malloc_check.o pro_alloc.o pro_arange.o pro_die.o pro_encode_nm.o pro_error.o pro_expr.o pro_finish.o pro_forms.o pro_funcs.o pro_frame.o pro_init.o pro_line.o pro_reloc.o pro_reloc_stream.o pro_reloc_symbolic.o pro_pubnames.o pro_section.o pro_types.o pro_vars.o pro_macinfo.o pro_weaks.o  dwarf_names.o -lz -o libdwarf.so\r\nUndefined symbols for architecture x86_64:\r\n  \"_elf32_getehdr\", referenced from:\r\n      _dwarf_elf_object_access_init in dwarf_elf_access.o\r\n  \"_elf32_getshdr\", referenced from:\r\n      __dwarf_get_elf_flags_func in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n  \"_elf64_getehdr\", referenced from:\r\n      _dwarf_elf_object_access_init in dwarf_elf_access.o\r\n  \"_elf64_getshdr\", referenced from:\r\n      __dwarf_get_elf_flags_func in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n  \"_elf_begin\", referenced from:\r\n      _dwarf_init in dwarf_original_elf_init.o\r\n  \"_elf_end\", referenced from:\r\n      _dwarf_elf_object_access_finish in dwarf_elf_access.o\r\n  \"_elf_getdata\", referenced from:\r\n      _dwarf_elf_object_access_load_section in dwarf_elf_access.o\r\n      _dwarf_elf_object_relocate_a_section in dwarf_elf_access.o\r\n  \"_elf_getident\", referenced from:\r\n      _dwarf_elf_object_access_init in dwarf_elf_access.o\r\n  \"_elf_getscn\", referenced from:\r\n      __dwarf_get_elf_flags_func in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_load_section in dwarf_elf_access.o\r\n      _dwarf_elf_object_relocate_a_section in dwarf_elf_access.o\r\n  \"_elf_strptr\", referenced from:\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n  \"_elf_version\", referenced from:\r\n      _dwarf_init in dwarf_original_elf_init.o\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake: *** [libdwarf.so] Error 1\r\n```",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/3118",
    "updated_at": "2019-09-15 02:38:41",
    "created_at": "2017-02-10 14:21:50",
    "closed_at": "None",
    "state": "open",
    "title": "Unable to build libdwarf on macOS",
    "number": 3118,
    "milestone": null,
    "labels": [
        "macOS",
        "build-error"
    ],
    "id": 206807721,
    "html_url": "https://github.com/spack/spack/issues/3118",
    "assignees": [],
    "comments": 2
}