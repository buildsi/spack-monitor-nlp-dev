{
    "body": "Just of curiosity. Shouldn't CMakes built with any compiler be functionally compatible with each other?\r\n\r\n```\r\nspack find\r\n==> 70 installed packages.\r\n-- linux-scientific6-x86_64 / clang@5.0.0 -----------------------\r\nncurses@6.0  openssl@1.0.2n  pkgconf@1.3.10  zlib@1.2.11\r\n\r\n-- linux-scientific6-x86_64 / gcc@6.3.0 -------------------------\r\nbinutils@2.28  cmake@3.10.0      help2man@1.47.4       libxml2@2.9.4  m4@1.4.18       pcre@8.40         py-lit@0.5.0        py-setuptools@35.0.2  readline@7.0   tar@1.29\r\nbison@3.0.4    flex@2.6.4        libedit@3.1-20170329  llvm@5.0.0     ncurses@6.0     pkgconf@1.3.10    py-packaging@16.8   py-six@1.10.0         sqlite@3.21.0  xz@5.2.3\r\nbzip2@1.0.6    gettext@0.19.8.1  libsigsegv@2.11       llvm@5.0.0     openssl@1.0.2n  py-appdirs@1.4.3  py-pyparsing@2.2.0  python@2.7.14         swig@3.0.12    zlib@1.2.11\r\n\r\n-- linux-scientific6-x86_64 / gcc@7.2.0 -------------------------\r\nautoconf@2.69    byobu@5.123   cuda@9.1.85  gcc@6.3.0  gettext@0.19.8.1  isl@0.18         libiconv@1.15    libxml2@2.9.4  mpfr@3.1.5      pcre@8.40       readline@7.0     tmux@2.6\r\nautomake@1.15.1  bzip2@1.0.6   curl@7.56.0  gcc@7.2.0  git@2.15.1        libbsd@0.8.6     libsigsegv@2.11  m4@1.4.18      ncurses@6.0     perl@5.24.1     singularity@2.4  xz@5.2.3\r\nboost@1.65.1     cmake@3.10.0  expat@2.2.2  gdbm@1.13  gmp@6.1.2         libevent@2.0.21  libtool@2.4.6    mpc@1.0.3      openssl@1.0.2n  pkgconf@1.3.10  tar@1.29         zlib@1.2.11\r\n```\r\n\r\nWhen I try to build `flang` (or `llvm`) with `%clang` it insists on building the cmake again. Isn't it pointless? It is annoying for me, because cmake build with `%clang` fails, but it is another problem #6844\r\n\r\n```\r\n$ spack install flang %clang\r\n==> pkgconf is already installed in /cfs/fs2/home/users/aryczkowski/spack/opt/spack/linux-scientific6-x86_64/clang-5.0.0/pkgconf-1.3.10-fcxdnuov4aogtninhxoamsblizm5mwhj\r\n==> ncurses is already installed in /cfs/fs2/home/users/aryczkowski/spack/opt/spack/linux-scientific6-x86_64/clang-5.0.0/ncurses-6.0-mwxach4untjdimghcamz4z5syvclqdhd\r\n==> zlib is already installed in /cfs/fs2/home/users/aryczkowski/spack/opt/spack/linux-scientific6-x86_64/clang-5.0.0/zlib-1.2.11-opchzu5eh2q7blzifwx4qxaddbiuieko\r\n==> openssl is already installed in /cfs/fs2/home/users/aryczkowski/spack/opt/spack/linux-scientific6-x86_64/clang-5.0.0/openssl-1.0.2n-f3jconyrtrinad7d2kwcbbkfo2mjpukb\r\n==> Installing cmake\r\n==> Using cached archive: /cfs/fs2/home/users/aryczkowski/spack/var/spack/cache/cmake/cmake-3.10.0.tar.gz\r\n==> Staging archive: /cfs/fs2/home/users/aryczkowski/spack/var/spack/stage/cmake-3.10.0-diivf5j2gfbmjgizxahlpspa3adpwg7j/cmake-3.10.0.tar.gz\r\n==> Created stage in /cfs/fs2/home/users/aryczkowski/spack/var/spack/stage/cmake-3.10.0-diivf5j2gfbmjgizxahlpspa3adpwg7j\r\n==> No patches needed for cmake\r\n==> Building cmake [Package]\r\n==> Executing phase: 'bootstrap'\r\n```",
    "user": "adamryczkowski",
    "url": "https://api.github.com/repos/spack/spack/issues/6845",
    "updated_at": "2018-04-20 08:58:53",
    "created_at": "2018-01-07 07:31:02",
    "closed_at": "2018-04-20 08:58:53",
    "state": "closed",
    "title": "Why does LLVM built with CLang insist on only using cmake also built with CLang?",
    "number": 6845,
    "milestone": null,
    "labels": [
        "duplicate",
        "concretization"
    ],
    "id": 286550858,
    "html_url": "https://github.com/spack/spack/issues/6845",
    "assignees": [],
    "comments": 2
}