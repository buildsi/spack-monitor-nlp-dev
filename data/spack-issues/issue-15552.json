{
    "body": "Are there any best practices for using Spack to build software in environments that deploy high-load compute tasks to non-local nodes? This is a very common workflow for developers at LLNL as our supercomputers have separate node partitions for interactive and compute jobs, and I imagine this working environment is similar for other sites with scientific computing resources.\r\n\r\nIdeally, I'd like to launch Spack from an interactive node and then have the high-load tasks (e.g. anything that needs a subprocess like `configure`, `make`, etc.) deployed to a compute node. My primary motivator for this cross-node workflow is to maintain the helpful color-coded reporting that comes with a purely interactive environment (this color-coding is lost when executing purely compute runs) while delegating the majority of the heavy lifting to the compute nodes. That being said, the urgency of my need is relatively low, but I'm still curious if anyone has gone through the effort of enabling this more nuanced behavior (or, even better, if Spack somehow supports it natively)!\r\n\r\nThanks in advance for any help or advice you may be able to provide!",
    "user": "xjrc",
    "url": "https://api.github.com/repos/spack/spack/issues/15552",
    "updated_at": "2020-03-24 23:03:47",
    "created_at": "2020-03-18 18:59:54",
    "closed_at": "2020-03-24 23:03:47",
    "state": "closed",
    "title": "Best Practices for Building in Remote Compute Environment?",
    "number": 15552,
    "milestone": null,
    "labels": [
        "question",
        "build"
    ],
    "id": 583939848,
    "html_url": "https://github.com/spack/spack/issues/15552",
    "assignees": [
        "scheibelp"
    ],
    "comments": 4
}