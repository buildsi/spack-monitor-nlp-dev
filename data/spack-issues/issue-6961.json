{
    "body": "### Summary\r\n\r\nThe build_type variant turns on CMAKE_BUILD_TYPE, which sets optimization flags. Those flags are set after the user-specified CMAKE_C_FLAGS and equivalents. This leads to user flags being rejected under default configurations.\r\n\r\n### Proposal\r\n\r\nChange the default for the `build_type` variant to `\"\"`. This is consistent with CMake defaults outside of Spack, and will allow users to specify compiler flags manually without being overridden by CMake. CMake build types can still be specified using the `build_type` variant.\r\n\r\n### Positive effects\r\n\r\n- CMake packages will by default respect compiler optimization flags passed by the user.\r\n- CMake packages will now behave by default as they would outside of Spack by default.\r\n\r\n### Potential negatives\r\n\r\n- The default build is now less optimized\r\n- Packages that have set a different default build type in their CMakeLists.txt file will need to override the build_type variant in their package.py file to change the default. (This is actually already true, it just now also applies to packages with default RelWithDebInfo, which was the previous Spack default).\r\n\r\n### Technical scope\r\n\r\nVery small. I have created a PR to change this. #6970 ",
    "user": "becker33",
    "url": "https://api.github.com/repos/spack/spack/issues/6961",
    "updated_at": "2018-04-20 09:04:42",
    "created_at": "2018-01-17 00:27:03",
    "closed_at": "None",
    "state": "open",
    "title": "Problems with cmake build_type variant",
    "number": 6961,
    "milestone": null,
    "labels": [
        "defaults",
        "proposal",
        "variants",
        "cmake"
    ],
    "id": 289102332,
    "html_url": "https://github.com/spack/spack/issues/6961",
    "assignees": [
        "alalazo"
    ],
    "comments": 2
}