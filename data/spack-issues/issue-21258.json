{
    "body": "Sometimes we need to patch a file that is a dependency for some other automatically generated file that comes in a release tarball. As a result, `make` tries to regenerate the dependent file using additional tools (e.g. `help2man`), which would not be needed otherwise. In some cases, it's preferable to avoid that (e.g. see #21255). A way to do that is to save the modification timestamps before patching and restoring them afterwards. This PR introduces a context wrapper that does that.\r\n\r\nIn the aforementioned PR #21255, the following code:\r\n```python\r\nmtime = os.path.getmtime(patched_file)\r\nfilter_file('^#! @PERL@ -w', '#! /usr/bin/env perl', patched_file)\r\nos.utime(patched_file, (os.path.getatime(patched_file), mtime))\r\n```\r\ncould be replaced with:\r\n```python\r\nwith keep_modification_time(patched_file):\r\n    filter_file('^#! @PERL@ -w', '#! /usr/bin/env perl', patched_file)\r\n```\r\n",
    "user": "skosukhin",
    "url": "https://api.github.com/repos/spack/spack/issues/21258",
    "updated_at": "2021-01-27 19:41:13",
    "created_at": "2021-01-25 16:25:59",
    "closed_at": "2021-01-27 19:41:08",
    "state": "closed",
    "title": "add a context wrapper for mtime preservation",
    "number": 21258,
    "milestone": null,
    "labels": [],
    "id": 793526468,
    "html_url": "https://github.com/spack/spack/pull/21258",
    "assignees": [
        "scheibelp"
    ],
    "comments": 1
}