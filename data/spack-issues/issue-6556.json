{
    "body": "Spack sets `CMAKE_PREFIX_PATH`. Unfortunately, it's not always enough to make sure that the version of the library from spec is used. Usually, this happens because many cmake scripts search for a list of filenames in a list of paths and the priority is given to the names, i.e. if the first name in the list was not found in `CMAKE_PREFIX_PATH`, cmake will continue to look for that name in the system directories. For example, `FindPythonInterp.cmake` fails to locate Python3 that is installed with Spack because there is no `python` symlink to the executable in the `<prefix>/bin` directory. Another example is `FindBoost.cmake`, which uses a list of version-dependent filenames, and if the version in the spec is older than the version in the system directories, the latter will be used.\r\n\r\nThe idea is to add a method to `PackageBase`, which would provide a dependent `CMakePackage` with flags that would help cmake to pick the right version of the library.",
    "user": "skosukhin",
    "url": "https://api.github.com/repos/spack/spack/issues/6556",
    "updated_at": "2017-12-07 15:07:10",
    "created_at": "2017-12-02 19:17:19",
    "closed_at": "2017-12-07 13:56:47",
    "state": "closed",
    "title": "Force CMake to pick libraries installed with Spack.",
    "number": 6556,
    "milestone": null,
    "labels": [],
    "id": 278709693,
    "html_url": "https://github.com/spack/spack/pull/6556",
    "assignees": [],
    "comments": 2
}