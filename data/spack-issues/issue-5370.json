{
    "body": "When building a package, how can I determine the `spec` or `prefix.lib` of the compiler in my current package `spec`?\r\n\r\nI tried the docs and looking through packages, but could not find any.\r\n\r\nThe used compiler seem not be part of `self.spec.traverse` and I try to get it's prefix library path at some point.\r\nPseudocode: `self.spec['cxx'].prefix.lib`\r\n\r\nI happened to come into that problem after building a clang 4.0.1 version and building an OpenMP program that is then failing on finding clang's `libomp.so`, so I add it to `setup_environment`.\r\n\r\nrelated to #5101 \r\n\r\n\r\nupdate: work-around found\r\n```python\r\n        cxx_bin = os.path.dirname(self.compiler.cxx)\r\n        cxx_prefix = join_path(cxx_bin, '..')\r\n        cxx_lib = join_path(cxx_prefix, 'lib')\r\n        run_env.prepend_path('LD_LIBRARY_PATH', cxx_lib)\r\n```",
    "user": "ax3l",
    "url": "https://api.github.com/repos/spack/spack/issues/5370",
    "updated_at": "2017-09-15 12:09:15",
    "created_at": "2017-09-15 12:01:17",
    "closed_at": "2017-09-15 12:09:15",
    "state": "closed",
    "title": "Prefix.lib of the Compiler of a Spec",
    "number": 5370,
    "milestone": null,
    "labels": [
        "question"
    ],
    "id": 258016544,
    "html_url": "https://github.com/spack/spack/issues/5370",
    "assignees": [],
    "comments": 0
}