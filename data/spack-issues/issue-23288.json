{
    "body": "fixes #20005 \r\n\r\nThe function we coded in Spack to load Python modules with arbitrary names from a file seem to have issues with local imports. For loading hooks though it is unnecessary to use such functions, since we don't care to bind a custom name to a module nor we have to load it from an unknown location.\r\n\r\nThis PR thus modifies `spack.hook` in the following ways:\r\n- [x] Use `__import__` instead of `spack.util.imp.load_source`\r\n- [x] Sync module docstring with all the hooks we have\r\n- [x] Avoid using memoization in a module function\r\n- [x] Marked with a leading underscore all the names that are supposed to stay local\r\n",
    "user": "alalazo",
    "url": "https://api.github.com/repos/spack/spack/issues/23288",
    "updated_at": "2021-04-28 04:33:48",
    "created_at": "2021-04-27 17:37:42",
    "closed_at": "2021-04-27 23:55:08",
    "state": "closed",
    "title": "Import hooks using Python's built-in machinery",
    "number": 23288,
    "milestone": null,
    "labels": [
        "refactoring",
        "imports"
    ],
    "id": 869085486,
    "html_url": "https://github.com/spack/spack/pull/23288",
    "assignees": [],
    "comments": 6
}