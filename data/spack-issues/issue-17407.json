{
    "body": "We have a Spack installation on our NFSv4 cluster. When a user tries to activate an environment, sometimes it fails with a PermissionError as Spack tries acquire a read-only lock on the .spack-env/transaction_lock file.\r\n\r\n### Steps to reproduce the issue\r\n1. Log in to a compute node under a different user than the owner of the .spack-env directory.\r\n\r\n2. Try to activate an environment:\r\n```console\r\n$ spack env activate gromacs_patterson\r\n==> Error: [Errno 13] Permission denied: '/opt/spack/var/spack/environments/gromacs_patterson/.spack-env'\r\n```\r\n\r\n3. See if the directory is already there\r\n```console\r\n$ ls /opt/spack/var/spack/environments/gromacs_patterson\r\nspack.lock  spack.yaml  spack.yaml~\r\n```\r\n\r\n4. Try to activate once more: success!\r\n```console\r\n$ spack env activate gromacs_patterson\r\n```\r\n\r\n\r\n### Error Message\r\n\r\n```console\r\n$ spack -d env activate gromacs_patterson\r\n==> [2020-07-07-16:05:28.170359, 27289] Imported env from built-in commands\r\n==> [2020-07-07-16:05:28.172212, 27289] Imported env from built-in commands\r\n==> [2020-07-07-16:05:28.172850, 27289] Reading config file /opt/spack/etc/spack/defaults/config.yaml\r\n==> [2020-07-07-16:05:28.182003, 27289] Reading config file /opt/spack/etc/spack/config.yaml\r\n==> [2020-07-07-16:05:28.182706, 27289] READ LOCK: /opt/spack/var/spack/environments/gromacs_patterson/.spack-env/transaction_lock[0:0] [Acquiring] \r\nTraceback (most recent call last):\r\n  File \"/opt/spack/bin/spack\", line 64, in <module>\r\n    sys.exit(spack.main.main())\r\n  File \"/opt/spack/lib/spack/spack/main.py\", line 761, in main\r\n    return _invoke_command(command, parser, args, unknown)\r\n  File \"/opt/spack/lib/spack/spack/main.py\", line 489, in _invoke_command\r\n    return_val = command(parser, args)\r\n  File \"/opt/spack/lib/spack/spack/cmd/env.py\", line 428, in env\r\n    action(args)\r\n  File \"/opt/spack/lib/spack/spack/cmd/env.py\", line 112, in env_activate\r\n    active_env = ev.get_env(namedtuple('args', ['env'])(env),\r\n  File \"/opt/spack/lib/spack/spack/environment.py\", line 319, in get_env\r\n    return read(env)\r\n  File \"/opt/spack/lib/spack/spack/environment.py\", line 373, in read\r\n    return Environment(root(name))\r\n  File \"/opt/spack/lib/spack/spack/environment.py\", line 582, in __init__\r\n    with lk.ReadTransaction(self.txlock):\r\n  File \"/opt/spack/lib/spack/llnl/util/lock.py\", line 576, in __enter__\r\n    if self._enter() and self._acquire_fn:\r\n  File \"/opt/spack/lib/spack/llnl/util/lock.py\", line 603, in _enter\r\n    return self._lock.acquire_read(self._timeout)\r\n  File \"/opt/spack/lib/spack/llnl/util/lock.py\", line 304, in acquire_read\r\n    wait_time, nattempts = self._lock(fcntl.LOCK_SH, timeout=timeout)\r\n  File \"/opt/spack/lib/spack/spack/util/lock.py\", line 31, in _lock\r\n    return super(Lock, self)._lock(op, timeout)\r\n  File \"/opt/spack/lib/spack/llnl/util/lock.py\", line 154, in _lock\r\n    parent = self._ensure_parent_directory()\r\n  File \"/opt/spack/lib/spack/llnl/util/lock.py\", line 240, in _ensure_parent_directory\r\n    os.makedirs(parent)\r\n  File \"/usr/lib/python3.8/os.py\", line 223, in makedirs\r\n    mkdir(name, mode)\r\nPermissionError: [Errno 13] Permission denied: '/opt/spack/var/spack/environments/gromacs_patterson/.spack-env'\r\n```\r\n\r\n### Information on your system\r\n\r\n```console\r\n$ spack debug report\r\n* **Spack:** 0.15.0-38-be1009db6\r\n* **Python:** 3.8.3\r\n* **Platform:** linux-archrolling-skylake\r\n```\r\n\r\n### Additional information\r\n\r\nThis only happens on compute nodes where the Spack folder is shared using NFS4. I suspect the attribute caching mechanism of NFS to be the culprit. \r\n\r\n```python\r\n>>> import os\r\n>>> os.makedirs('/opt/spack/var/spack/environments/gromacs_patterson/.spack-env')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.8/os.py\", line 223, in makedirs\r\n    mkdir(name, mode)\r\nPermissionError: [Errno 13] Permission denied: '/opt/spack/var/spack/environments/gromacs_patterson/.spack-env'\r\n>>> os.path.isdir('/opt/spack/var/spack/environments/gromacs_patterson/.spack-env')\r\nTrue\r\n>>> os.makedirs('/opt/spack/var/spack/environments/gromacs_patterson/.spack-env')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.8/os.py\", line 223, in makedirs\r\n    mkdir(name, mode)\r\nFileExistsError: [Errno 17] File exists: '/opt/spack/var/spack/environments/gromacs_patterson/.spack-env'\r\n```\r\n\r\nAs demonstrated above, if the user does not have write permission for the root directory of the environment, ```os.makedirs()``` fails with PermissionError before actually checking if the `.spack_env` subdirectory exists. However, if its existence is checked beforehand, `os.makedirs()` raises the FileExistsError, which is already handled in the `_ensure_parent_directory()` method of the `Lock` class in the `llnl.util.lock` module.\r\n\r\nAlthough it goes against the Pythonic wisdom of \"Better ask for forgiveness than permission\", it might solve the problem to insert a \r\n```python\r\nos.path.is_dir(parent)\r\n```\r\ncheck at the beginning of the above mentioned method.\r\n\r\nThe other, non-Spack solution would be to make the attribute caching of NFS4 more aggressive. However, this negatively affects the performance of the network file system.\r\n\r\nThank you in advance,\r\n\r\nAndras\r\n\r\n<!-- These boxes can be checked by replacing [ ] with [x] or by clicking them after submitting the issue. -->\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [x] I have run the failing commands in debug mode and reported the output\r\n\r\n",
    "user": "awacha",
    "url": "https://api.github.com/repos/spack/spack/issues/17407",
    "updated_at": "2021-02-02 16:48:16",
    "created_at": "2020-07-07 14:49:18",
    "closed_at": "None",
    "state": "open",
    "title": "Permission error when activating environment by a different user",
    "number": 17407,
    "milestone": null,
    "labels": [
        "bug",
        "locking",
        "environments",
        "triage"
    ],
    "id": 652387010,
    "html_url": "https://github.com/spack/spack/issues/17407",
    "assignees": [],
    "comments": 3
}