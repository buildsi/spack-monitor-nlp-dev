{
    "body": "Consider defining the default package version, using \"version\" in packages.yaml.\r\nThis setting is discarded when 'path' entries are also added without including a matching  version.\r\n\r\n### Explanation\r\n\r\nConsider the following use case (which apparently can't be met):\r\n - There is a system Python which shall be used if the version is the one desired (e.g.: 2.7.5)\r\n - By default software should build on top of a newer (e.g.: 2.7.15)\r\n\r\nIt seems that it could be specified by adding to packages.yaml the following definitions:\r\n```\r\npython:\r\n    paths:\r\n        python@2.7.5: /usr\r\n    version: [2.7.15]\r\n```\r\nHowever this doesn't work, i.e. spack will still use python@2.7.5 by default.\r\n\r\nIs it the expected behavior?\r\n\r\n",
    "user": "ferdonline",
    "url": "https://api.github.com/repos/spack/spack/issues/9309",
    "updated_at": "2020-01-15 08:11:32",
    "created_at": "2018-09-21 13:08:12",
    "closed_at": "None",
    "state": "open",
    "title": "packages.py version not respected depending on path setting",
    "number": 9309,
    "milestone": null,
    "labels": [
        "question",
        "external-packages",
        "versions"
    ],
    "id": 362608040,
    "html_url": "https://github.com/spack/spack/issues/9309",
    "assignees": [],
    "comments": 2
}