{
    "body": "Fixes #59 on the Windows Issue Board. \r\n\r\nSolves two issues:\r\n\r\nPosix locks can be arbitrarily promoted/demoted by any handle from the same process. This is not true in Windows. Solves the issue by first unlocking the file lock (if necessary) before taking the promotion.\r\n\r\nMultiple instances of the `spack.Lock` type take the same lock one after the other are acceptable in Posix locks, but not Windows. Implement a flyweight pattern to serve one lock instance per lock path per process on Windows. This allows all calls to share the same fd handle. The Lock interface should only differ by virtue of calling the factory instead of Lock directly.",
    "user": "johnwparent",
    "url": "https://api.github.com/repos/spack/spack/issues/25189",
    "updated_at": "2021-08-03 21:33:48",
    "created_at": "2021-08-02 17:32:07",
    "closed_at": "2021-08-03 21:32:21",
    "state": "closed",
    "title": "Windows lock timeout",
    "number": 25189,
    "milestone": null,
    "labels": [
        "locking",
        "tests",
        "environments",
        "utilities",
        "stage",
        "windows"
    ],
    "id": 958363537,
    "html_url": "https://github.com/spack/spack/pull/25189",
    "assignees": [],
    "comments": 3
}