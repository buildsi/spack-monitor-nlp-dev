{
    "body": "I was wondering, while provisioning a docker image, if `spack bootstrap /` is actually something being considered as good practice / possible workflow. I could imagine so.\r\n\r\nBecause currently it fails complaining that there already files in `/` instead of adding its own :-)\r\n\r\nAlso it looks like bootstrap just downloads the source yet again which makes the quick-start quite long (git clone, ~~export path,~~ bootstrap, export path).\r\nDo you plan to provide a simple all-in-one bootstrap script (e.g. as in [yt](http://yt-project.org/#getyt) or [anaconda](https://www.continuum.io/downloads)) to get users kick-started?\r\n\r\n### Structured Tasks (Bugs) Hidden in This Thread\r\n\r\n- [ ] `spack bootstrap /` (now: `spack clone /`) should not fail but install spack alongside what is already available in all its glory\r\n- [ ] it seems that `spack clone <path>` is broken if not executed inside a git repo\r\n- we should write a page in the workflow section for provisioning a docker image -> #4480\r\n- we could provide a `curl https://... | bash -` script to bootstrap spack into a prefix with a one-liner (yeah, security, I know, I know; let's add a sha256 check in the pipe)",
    "user": "ax3l",
    "url": "https://api.github.com/repos/spack/spack/issues/4062",
    "updated_at": "2019-12-06 07:20:25",
    "created_at": "2017-05-01 15:11:16",
    "closed_at": "None",
    "state": "open",
    "title": "Spack Clone to `/` (Docker)",
    "number": 4062,
    "milestone": null,
    "labels": [
        "bug",
        "UI",
        "environments"
    ],
    "id": 225451654,
    "html_url": "https://github.com/spack/spack/issues/4062",
    "assignees": [],
    "comments": 15
}