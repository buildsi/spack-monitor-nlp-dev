{
    "body": "I have a VERY simple tarball that contains the following subdirs: `bin`, `data`, `lib`. Everything is compiled and required links are included in `lib`. I \"just\" need to move these dirs to the corresponding `prefix.bin`, `prefix.data`, `prefix.lib` locations.\r\n\r\nHere is my `install` def:\r\n\r\n```python\r\n    def install(self, spec, prefix):\r\n        mkdir(prefix.lib)\r\n        mkdir(prefix.bin)\r\n        mkdir(prefix.data)\r\n\r\n        install(\"lib\", prefix)\r\n        install(\"bin\", prefix)\r\n        install(\"data\", prefix)\r\n```\r\n\r\nI am being told that `install` fails bc they are dirs. Is there any way to copy the hundreds of files and subdirectories to `prefix` without a line for each file?",
    "user": "xguse",
    "url": "https://api.github.com/repos/spack/spack/issues/11802",
    "updated_at": "2019-06-21 03:09:28",
    "created_at": "2019-06-20 21:20:41",
    "closed_at": "2019-06-21 03:09:27",
    "state": "closed",
    "title": "In Package.install: can I `install` whole directories rather than individual files?",
    "number": 11802,
    "milestone": null,
    "labels": [
        "build-error"
    ],
    "id": 458888428,
    "html_url": "https://github.com/spack/spack/issues/11802",
    "assignees": [],
    "comments": 2
}