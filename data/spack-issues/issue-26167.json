{
    "body": "Spack cannot update the buildcache index of the main develop binary mirror (so far E4S only) because some old specs cannot be spliced.  The result of this is that pipelines are generating hundreds of unnecessary jobs for the E4S stacks (both on `ppc64le` and `x86_64` since they share a mirror), causing really long delays of 15 hrs or longer per pipeline.\r\n\r\nHere's a summary of the problem, but see further down for an actual reproducer, because the following will only work if you have the proper S3 access credentials set, and then takes about an hour.\r\n\r\n```console\r\nspack -d buildcache update-index --mirror-url s3://spack-binaries-develop/e4s\r\n...\r\n==> [2021-09-21-16:31:02.595843]   hdf5/zc7lv7h -> 26\r\n==> [2021-09-21-16:31:02.595931]     needs the following deps spliced:\r\n==> [2021-09-21-16:31:02.595975]       mpich/pvaxhhe\r\n==> [2021-09-21-16:31:02.748345] Warning: Encountered problem pushing package index to s3://spack-binaries-develop/e4s/build_cache: Couldn't find patch for package builtin.hdf5 with sha256: dd9491bbe833b13929cb14b52137f7f44a539b4bfc89fc31e6e50a36e3e1b171\r\n==> [2021-09-21-16:31:02.765412] \r\nTraceback (most recent call last):\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/binary_distribution.py\", line 800, in generate_package_index\r\n    s = s.splice(true_dep, True)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 4401, in splice\r\n    _ = dep.full_hash()\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1577, in full_hash\r\n    return self._cached_hash(ht.full_hash, length)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1540, in _cached_hash\r\n    hash_string = self._spec_hash(hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1519, in _spec_hash\r\n    node_dict = self.to_node_dict(hash=hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1677, in to_node_dict\r\n    package_hash = self.package_hash()\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1548, in package_hash\r\n    return self._cached_hash(ht.package_hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1540, in _cached_hash\r\n    hash_string = self._spec_hash(hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1518, in _spec_hash\r\n    return hash.override(self)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/hash_types.py\", line 55, in <lambda>\r\n    override=lambda s: s.package.content_hash())\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/package.py\", line 1546, in content_hash\r\n    for p in self.spec.patches)\r\n  File \"/Users/scott/projects/spack/lib/spack/llnl/util/lang.py\", line 190, in _memoized_function\r\n    func.cache[args] = func(*args)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 3402, in patches\r\n    patch = index.patch_for_package(sha256, self.package)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/patch.py\", line 349, in patch_for_package\r\n    % (pkg.fullname, sha256))\r\nspack.patch.NoSuchPatchError: Couldn't find patch for package builtin.hdf5 with sha256: dd9491bbe833b13929cb14b52137f7f44a539b4bfc89fc31e6e50a36e3e1b171\r\n```\r\n\r\nAfter spack fetches all the yaml/json specs from the mirror, it iterates though them in order of fewest dependencies first (i.e. starting at the leaves) attempting to splice older specs whose dependencies may have been replaced with newer versions where the DAG hash didn't change, but the full hash did.  For each old spec that needs to be spliced, it needs to recompute the hash, and this is not possible for some specs if, e.g., it used to have a patch which no longer exists. \r\n\r\n### Steps to reproduce\r\n\r\nAttached are two spec files (old yaml format) which can be used to illustrate the problem:\r\n\r\n[linux-ubuntu18.04-ppc64le-gcc-7.5.0-gmp-6.1.2-n3pjbqd4n77ogmtkdxmmfj6rhsi4cglv.spec.yaml.txt](https://github.com/spack/spack/files/7212445/linux-ubuntu18.04-ppc64le-gcc-7.5.0-gmp-6.1.2-n3pjbqd4n77ogmtkdxmmfj6rhsi4cglv.spec.yaml.txt)\r\n[linux-ubuntu18.04-ppc64le-gcc-7.5.0-mpfr-3.1.6-rdbuvka45i2lrt7jgnszbxfkoais5yj7.spec.yaml.txt](https://github.com/spack/spack/files/7212446/linux-ubuntu18.04-ppc64le-gcc-7.5.0-mpfr-3.1.6-rdbuvka45i2lrt7jgnszbxfkoais5yj7.spec.yaml.txt)\r\n\r\nThe process of updating the buiildcache index results in changing one of the files, so keep a second copy handy to replace if you plan to run the reproducer multiple times.\r\n\r\nPut the files into a directory, e.g. `/work/mirror/build_cache/`, then run:\r\n\r\n```\r\nspack -d buildcache update-index --mirror-url file:///work/mirror\r\n```\r\n\r\nThe command should fail something like this:\r\n\r\n```\r\n==> [2021-09-22-10:34:07.450279] Imported buildcache from built-in commands\r\n==> [2021-09-22-10:34:07.457335] Imported buildcache from built-in commands\r\n==> [2021-09-22-10:34:07.458285] Reading config file /Users/scott/projects/spack/etc/spack/defaults/mirrors.yaml\r\n==> [2021-09-22-10:34:07.462654] Retrieving spec descriptor files from file:///Users/scott/Documents/spack/more_index_hash_work/mirror/build_cache to build index\r\n==> [2021-09-22-10:34:07.462869] fetching file:///Users/scott/Documents/spack/more_index_hash_work/mirror/build_cache/linux-ubuntu18.04-ppc64le-gcc-7.5.0-mpfr-3.1.6-rdbuvka45i2lrt7jgnszbxfkoais5yj7.spec.yaml\r\n==> [2021-09-22-10:34:07.463595] Reading config file /Users/scott/projects/spack/etc/spack/defaults/config.yaml\r\n==> [2021-09-22-10:34:07.521472] fetching file:///Users/scott/Documents/spack/more_index_hash_work/mirror/build_cache/linux-ubuntu18.04-ppc64le-gcc-7.5.0-gmp-6.1.2-n3pjbqd4n77ogmtkdxmmfj6rhsi4cglv.spec.yaml\r\n==> [2021-09-22-10:34:07.709696] DATABASE LOCK TIMEOUT: 3s\r\n==> [2021-09-22-10:34:07.709785] PACKAGE LOCK TIMEOUT: No timeout\r\n==> [2021-09-22-10:34:07.709865] Specs sorted by number of dependencies:\r\n==> [2021-09-22-10:34:07.709934]   mpfr/rdbuvka -> 1\r\n==> [2021-09-22-10:34:07.710177] Reading config file /Users/scott/projects/spack/etc/spack/defaults/repos.yaml\r\n==> [2021-09-22-10:34:07.787508]     needs the following deps spliced:\r\n==> [2021-09-22-10:34:07.787687]       gmp/n3pjbqd\r\n==> [2021-09-22-10:34:09.623378] Warning: Encountered problem pushing package index to file:///Users/scott/Documents/spack/more_index_hash_work/mirror/build_cache: Couldn't find patch for package builtin.mpfr with sha256: 66a5d58364113a21405fc53f4a48f4e8\r\n==> [2021-09-22-10:34:09.633572] \r\nTraceback (most recent call last):\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/binary_distribution.py\", line 800, in generate_package_index\r\n    s = s.splice(true_dep, True)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 4401, in splice\r\n    _ = dep.full_hash()\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1577, in full_hash\r\n    return self._cached_hash(ht.full_hash, length)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1540, in _cached_hash\r\n    hash_string = self._spec_hash(hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1519, in _spec_hash\r\n    node_dict = self.to_node_dict(hash=hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1677, in to_node_dict\r\n    package_hash = self.package_hash()\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1548, in package_hash\r\n    return self._cached_hash(ht.package_hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1540, in _cached_hash\r\n    hash_string = self._spec_hash(hash)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 1518, in _spec_hash\r\n    return hash.override(self)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/hash_types.py\", line 55, in <lambda>\r\n    override=lambda s: s.package.content_hash())\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/package.py\", line 1546, in content_hash\r\n    for p in self.spec.patches)\r\n  File \"/Users/scott/projects/spack/lib/spack/llnl/util/lang.py\", line 190, in _memoized_function\r\n    func.cache[args] = func(*args)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/spec.py\", line 3402, in patches\r\n    patch = index.patch_for_package(sha256, self.package)\r\n  File \"/Users/scott/projects/spack/lib/spack/spack/patch.py\", line 349, in patch_for_package\r\n    % (pkg.fullname, sha256))\r\nspack.patch.NoSuchPatchError: Couldn't find patch for package builtin.mpfr with sha256: 66a5d58364113a21405fc53f4a48f4e8\r\n```\r\n\r\nI have started working on a fix for this problem in #25708 but it is currently stuck on the following problem: Once we successfully splice the spec (essentially by avoiding computing the package hash and instead putting `None` for it), the spliced spec now has a new DAG hash (build provenenance is included in the DAG hash).  The question is should we lie and write the spliced spec to the old hash?  Or should we write it to the new hash, which might mean that we no longer see it as a build cache hit and are forced to rebuild it from source?  Or should we change how we check if specs are up to date and start tracing down through build specs looking for a full hash match?\r\n\r\n\r\n### Error message\r\n\r\nError message included with command, above.\r\n\r\n### Information on your system\r\n\r\nThis can happen on any platform since there's no arch/platform/os requirement for running `spack buildcache update-index` against an arbitrary mirror.  But the version of spack could be important, as with old enough spack, the patch mentioned in the second error output above might actually exist.\r\n\r\n```\r\n$ spack debug report\r\n* **Spack:** 0.16.2-4343-c3cb863b82\r\n* **Python:** 3.7.9\r\n* **Platform:** darwin-catalina-skylake\r\n* **Concretizer:** clingo\r\n```\r\n\r\n### General information\r\n\r\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [X] I have searched the issues of this repo and believe this is not a duplicate\r\n- [X] I have run the failing commands in debug mode and reported the output",
    "user": "scottwittenburg",
    "url": "https://api.github.com/repos/spack/spack/issues/26167",
    "updated_at": "2021-09-24 17:27:19",
    "created_at": "2021-09-22 16:46:16",
    "closed_at": "None",
    "state": "open",
    "title": "Spack fails to splice old specs with missing patches",
    "number": 26167,
    "milestone": null,
    "labels": [
        "bug",
        "impact-high",
        "buildcache",
        "pipelines"
    ],
    "id": 1004509023,
    "html_url": "https://github.com/spack/spack/issues/26167",
    "assignees": [
        "alalazo"
    ],
    "comments": 8
}