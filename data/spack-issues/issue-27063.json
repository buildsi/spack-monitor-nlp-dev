{
    "body": "### Steps to reproduce\n\nThere are probably other ways to reproduce this.  One way is to use Spack on a system on which the stock version of libtool is 2.4.2 (like Centos 7) and try to `spack install` an autoconf-based package that does not define it's own explicit `autoreconf` step in package.py.\r\n\r\nThe following output shows an example of such a scenario on the Bebop system at ANL:\r\n\r\n```\r\n[carns@beboplogin1 spack (develop)]$ cat /etc/os-release \r\nNAME=\"CentOS Linux\"\r\nVERSION=\"7 (Core)\"\r\nID=\"centos\"\r\nID_LIKE=\"rhel fedora\"\r\nVERSION_ID=\"7\"\r\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\r\nANSI_COLOR=\"0;31\"\r\nCPE_NAME=\"cpe:/o:centos:centos:7\"\r\nHOME_URL=\"https://www.centos.org/\"\r\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\r\n\r\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\r\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\r\nREDHAT_SUPPORT_PRODUCT=\"centos\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\r\n\r\n[carns@beboplogin1 spack (develop)]$ libtool --version\r\nlibtool (GNU libtool) 2.4.2\r\nWritten by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\r\n\r\nCopyright (C) 2011 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n[carns@beboplogin1 spack (develop)]$ \r\n[carns@beboplogin1 spack (develop)]$ spack spec -I usbutils\r\nInput spec\r\n--------------------------------\r\n -   usbutils\r\n\r\nConcretized\r\n--------------------------------\r\n -   usbutils@012%gcc@10.2.0 arch=linux-centos7-broadwell\r\n -       ^autoconf@2.69%gcc@10.2.0 patches=7793209b33013dc0f81208718c68440c5aae80e7a1c4b8d336e382525af791a7 arch=linux-centos7-broadwell\r\n -       ^automake@1.13.4%gcc@10.2.0 arch=linux-centos7-broadwell\r\n[+]      ^libtool@2.4.6%gcc@10.2.0 arch=linux-centos7-broadwell\r\n -           ^m4@1.4.16%gcc@10.2.0+sigsegv arch=linux-centos7-broadwell\r\n[+]      ^libusb@1.0.22%gcc@10.2.0 arch=linux-centos7-broadwell\r\n```\r\nThe `usbutils` package is just being used as an example here because it is a relatively simple autoconf package with few dependencies.  It isn't directly related to the bug.\r\n\r\nNote in the above output that the system has libtool 2.4.2, but Spack has provided it's own libtool 2.4.6 that is (correctly) marked as a dependency for usbutils.\r\n\r\nIf I then try `spack install usbutils`, it fails during the configure step with the following, amongst a lot of other extraneous output:\r\n```\r\n     248    libtool: Version mismatch error.  This is libtool 2.4.6, but the\r\n     249    libtool: definition of this LT_INIT comes from libtool 2.4.2.\r\n     250    libtool: You should recreate aclocal.m4 with macros from libtool 2.\r\n            4.6\r\n     251    libtool: and run autoconf again.\r\n```\r\nThis indicates that 2.4.2 (the system libtool) was used to generate the configure scripts, but that 2.4.6 (the spack libtool) was used at configure time.\r\n\r\nLooking closer at the `usbutils/package.py` file, you can see that it does not explicitly define an autoreconf step, which is to be expected because usbutils doesn't require any non-standard steps at this phase.\r\n\r\nIf I modify the package.py to include this at the end, however:\r\n\r\n```\r\n    def autoreconf(self, spec, prefix):\r\n        sh = which('sh')\r\n        sh('-c', 'autoreconf -fi')\r\n```\r\n... then the package configures and installs just fine.  It appears that spack is using a different libtool when executing it's own predefined autoreconf routine vs. when it executes the autoreconf routine defined by the package.  The bug is in the former case; I don't believe that the system libtool should be used there.\r\n\r\nThe workaround is to define an explicit autoreconf step in package.py, even if it is not otherwise needed.  We have done so for packages that our team maintains in external repo so that we can proceed with CI tests on systems that exhibit this problem, but it will still affect packages provided upstream in Spack's builtin repo.\n\n### Error message\n\n```\r\n$ spack install usbutils\r\n...\r\n     233    libtool: Version mismatch error.  This is libtool 2.4.6, but the\r\n     234    libtool: definition of this LT_INIT comes from libtool 2.4.2.\r\n     235    libtool: You should recreate aclocal.m4 with macros from libtool 2.\r\n            4.6\r\n     236    libtool: and run autoconf again.\r\n```\n\n### Information on your system\n\n```\r\n[carns@beboplogin1 spack (develop)]$ spack debug report\r\n* **Spack:** 0.16.3-5066-8ca3a0f\r\n* **Python:** 2.7.5\r\n* **Platform:** linux-centos7-broadwell\r\n* **Concretizer:** clingo\r\n```\r\n(I don't believe that the problem is confined to Centos7, it just happens to exhibit the libtool usage mismatch in a catastrophic way for some packages)\n\n### General information\n\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\n- [X] I have searched the issues of this repo and believe this is not a duplicate\n- [X] I have run the failing commands in debug mode and reported the output",
    "user": "carns",
    "url": "https://api.github.com/repos/spack/spack/issues/27063",
    "updated_at": "2021-10-29 14:29:55",
    "created_at": "2021-10-29 14:29:55",
    "closed_at": "None",
    "state": "open",
    "title": "default autoreconf routine uses system libtool instead of Spack-provided libtool",
    "number": 27063,
    "milestone": null,
    "labels": [
        "bug",
        "triage"
    ],
    "id": 1039629420,
    "html_url": "https://github.com/spack/spack/issues/27063",
    "assignees": [],
    "comments": 0
}