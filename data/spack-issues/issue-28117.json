{
    "body": "Spack compiler wrapper support implemented on Windows.\r\nThis is accomplished by leveraging Spack's extant `sh` compiler wrappers alongside Git on Window's implementation of the sh.\r\n- Spack now prepends all compiler wrapper environment/CL settings with a call to a users Git sh. \r\n- Sets up Git sh environment to properly handle Spack calls.\r\n- Adds compiler wrappers for the MSVC compiler.\r\n- Remove calls in MSVC overriding Spack set env variables for CC, CXX, FC, and F77.\r\n\r\nAdd portable compiler wrapper env:\r\n- Compiler wrappers/commands can now be experimented with, sourced, and executed from the stage and install directories.\r\n- Compiler wrapper and associated env files are bundled as metadata in a folder named `env` in the stage directory and under the metadata directory in the install path.\r\n- Support for shutil's `follow_symlinks` added to install/copy commands in `llnl.util.filesystem` .\r\n- Portable environments interactable with `spack env`.\r\n- Awareness of the new 'env' directory and its contents exposed to relevant Spack internal FS representations.\r\n\r\n\r\nA note:\r\n\r\n\r\nGit Bash/sh is a documented pre requisite of Spack on Windows, and by default comes bundled along side an installation of Git on Windows.",
    "user": "johnwparent",
    "url": "https://api.github.com/repos/spack/spack/issues/28117",
    "updated_at": "2022-03-11 16:54:29",
    "created_at": "2021-12-21 18:51:00",
    "closed_at": "None",
    "state": "open",
    "title": "Windows Support: Compiler Wrappers + Portable Compiler env",
    "number": 28117,
    "milestone": null,
    "labels": [
        "compilers",
        "build-environment",
        "utilities",
        "stage",
        "windows"
    ],
    "id": 1086116767,
    "html_url": "https://github.com/spack/spack/pull/28117",
    "assignees": [
        "scheibelp"
    ],
    "comments": 0
}