{
    "body": "Partly resolves #8957\r\n\r\nIf you have an external package, and you want to add some identifier as a \r\nversion suffix, say `pkg@x.y.z-identifier`, then Spack considers this to \r\nsatisfy `pkg@x.y.z`:\r\n\r\n```python\r\nspack.spec.Spec('pkg@x.y.z-identifier').satisfies(spack.spec.Spec('pkg@x.y.z'))  # True\r\n```\r\n\r\nSo whenever a package specifies\r\n\r\n```python\r\nconflicts('^pkg@x.y.z')\r\n```\r\n\r\nyou would expect this to conflict with the external package.\r\n\r\nSurprisingly this is not the case, because the concretizer believes it should\r\ninterpret `x.y.z` as an exact version, not as the closed-open range `[x.y.z,\r\nx.y.z+1)`.\r\n\r\nThe rational for this is to support packages with versions `1.0`, `1.0.1`,\r\n`1.0.2`, et cetera. However, the fact that some packages have poor choices for\r\nversioning doesn't mean that all other packages have to be treated badly.\r\nInstead, our ranges support differentiating between `1.0` and `1.0.1`:\r\n\r\n```python\r\ndepends_on('poorly_versioned_package@1.0:1.0.0')  # depends on 1.0, not 1.0.1\r\nconflicts('^poorly_versioned_package@:1.0.0')  # conflicts with 1.0, not with 1.0.1\r\n```\r\n\r\nso the only thing that has to be done is to be careful when specifying conflicts and\r\ndependencies on these type of packages.\r\n\r\nRight now the situation is the opposite: packages that do proper semver versioning\r\nand want to specify a conflict on `x.y.z` may need to write\r\n\r\n```python\r\nconflicts('^properly_versioned_package@1.2.3:1.2.3.0')   # so that it also conflicts with 1.2.3-external-system-version\r\n```\r\n\r\nwhich is not great. No longer so after this PR.\r\n\r\n---\r\n\r\nA similar issue for compilers could also be fixed, but is more challenging, because of compiler bootstrapping",
    "user": "haampie",
    "url": "https://api.github.com/repos/spack/spack/issues/26165",
    "updated_at": "2021-09-30 12:40:37",
    "created_at": "2021-09-22 15:44:40",
    "closed_at": "None",
    "state": "open",
    "title": "Make the concretizer consider package versions as ranges consistently",
    "number": 26165,
    "milestone": null,
    "labels": [
        "new-version",
        "dependencies",
        "tests",
        "conflicts",
        "new-variant"
    ],
    "id": 1004451303,
    "html_url": "https://github.com/spack/spack/pull/26165",
    "assignees": [],
    "comments": 0
}