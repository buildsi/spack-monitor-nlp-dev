{
    "body": "### Steps to reproduce the issue\r\n\r\n```console\r\n$ ml load googletest\r\n$ echo $DYLD_LIBRARY_PATH\r\n\r\n$ echo $DYLD_FALLBACK_LIBRARY_PATH\r\n\r\n$ echo $LD_LIBRARY_PATH\r\n/Users/oxberry1/spack/opt/spack/darwin-sierra-x86_64/clang-9.0.0-apple/googletest-1.8.0-mnxlvco6lhjzrkedmusu7mdqghewmf2b/lib\r\n```\r\n\r\n### Error Message\r\n\r\nSee above; setting `LD_LIBRARY_PATH` does not affect linking via `dyld`, the macOS system linker.\r\n\r\n### Workaround\r\n\r\n```console\r\n$ export DYLD_LIBRARY_PATH=$LD_LIBRARY_PATH\r\n$ # Do whatever it is you want to do\r\n$ unset DYLD_LIBRARY_PATH\r\n```\r\n\r\nNote, however, that this workaround sort of defeats the purpose of using `lmod` to manage paths in environment variables -- it would be better if some sort of `dyld`-aware path functionality were build into the module files generated by spack.\r\n\r\n### Information on your system\r\n\r\nI'm running macOS 10.12.6. I don't think `packages.yaml` or `compilers.yaml` are particularly relevant for this issue, except perhaps that I'm building packages with an XCode-provided compiler (in my case, `clang@9.0.0-apple`).",
    "user": "goxberry",
    "url": "https://api.github.com/repos/spack/spack/issues/9066",
    "updated_at": "2018-08-23 13:39:44",
    "created_at": "2018-08-22 03:19:43",
    "closed_at": "2018-08-23 13:39:44",
    "state": "closed",
    "title": "On Darwin, lmod sets LD_LIBRARY_PATH, but neither DYLD_LIBRARY_PATH nor DYLD_FALLBACK_LIBRARY_PATH",
    "number": 9066,
    "milestone": null,
    "labels": [
        "modules",
        "defaults"
    ],
    "id": 352788273,
    "html_url": "https://github.com/spack/spack/issues/9066",
    "assignees": [
        "alalazo"
    ],
    "comments": 0
}