{
    "body": "Our code optionally links against the Simmetrix SimModSuite closed-source libraries that support parallel unstructured mesh operations.  Simmetrix provides a set of tarballs (one per logical component) with headers and libraries, and an MPI wrapper layer that gets compiled on the destination system (to support the user's MPI).  Is there a clean way to create a spack package that downloads/locates the tarballs, unpacks them, and compiles the MPI wrapper layer?  Any example packages for developing such a package would be appreciated.\r\n\r\nAt this point, my specific concerns are:\r\n\r\n0. Is this a good use case for spack?\r\n1. Accessing the tarballs - The tarballs are available in a password protected portion of a website.  I use `wget` with the `--user=` and `--password=` arguments to download them.  Does spack support this? Alternatively, can spack be told where to find local copies of the tarballs?\r\n2. Unpacking multiple tarballs in a single package - There is one tarball per logical component.  Does spack support this?  If not, could each tarball need to be broken out into a separate package and a meta package defined for the set?\r\n\r\nThank-you,\r\nCameron",
    "user": "cwsmith",
    "url": "https://api.github.com/repos/spack/spack/issues/8587",
    "updated_at": "2018-07-05 20:33:44",
    "created_at": "2018-06-27 14:45:07",
    "closed_at": "2018-07-05 20:33:44",
    "state": "closed",
    "title": "creating a spack package for closed-source software",
    "number": 8587,
    "milestone": null,
    "labels": [
        "question",
        "new-package"
    ],
    "id": 336261446,
    "html_url": "https://github.com/spack/spack/issues/8587",
    "assignees": [],
    "comments": 3
}