{
    "body": "### Steps to reproduce the issue\r\n\r\n<!-- Fill in the exact spec you are trying to build and the relevant part of the error message -->\r\n```console\r\n# mine is an external install but irrelevant\r\n$ spack install cuda@11.1.0\r\n\r\n$ spack install llvm@11.0.0 build_type=Release +clang~code_signing+cuda cuda_arch=61 +gold+internal+unwind~ipo+libcxx+lld+lldb~mlir~omp_debug~omp_tsan+polly+python~shared_libs~split_dwarf\r\n```\r\n\r\n### Discussion\r\n\r\nhttps://github.com/spack/spack/blob/527a81b469cf3df12e4b8c3bcd8609b2d55db2f3/var/spack/repos/builtin/packages/llvm/package.py#L524-L526\r\n\r\n**Important note**: I'm using CUDA 11.1 which they aren't ready for yet (10.2 latest \"supported\").\r\n\r\nRefs:\r\n\r\n- [Options for `NVPTX device RTL`](https://github.com/llvm/llvm-project/tree/llvmorg-11.0.0/openmp#options-for-nvptx-device-rtl)\r\n- [D47394](https://reviews.llvm.org/D47394)\r\n    - [Static only](https://stackoverflow.com/questions/35897002/cuda-nvcc-building-chain-of-libraries)?\r\n\r\nFailure message something like (sorry, lost the logs in rebuild):\r\n\r\n```\r\n-- Performing Test LIBOMPTARGET_NVPTX_CUDA_COMPILER_SUPPORTS_FLAGS_REQUIRED\r\n-- Performing Test LIBOMPTARGET_NVPTX_CUDA_COMPILER_SUPPORTS_FLAGS_REQUIRED - Failed\r\n```\r\n\r\nThis one is quite entrenched, mostly posting issue so if other users hit this they know that they just need to edit the package and set this to false:\r\n\r\n```diff\r\n@@ -521,8 +539,11 @@ def post_install(self):\r\n                     \"-DCMAKE_INSTALL_PREFIX:PATH={0}\".format(spec.prefix),\r\n                 ]\r\n                 cmake_args.extend(self.cmake_args())\r\n+                # NOTE: line numbers wrong!!! i have other patches, look in post_install\r\n                 cmake_args.append(\r\n-                    \"-DLIBOMPTARGET_NVPTX_ENABLE_BCLIB:BOOL=TRUE\"\r\n+                    \"-DLIBOMPTARGET_NVPTX_ENABLE_BCLIB:BOOL=FALSE\"\r\n                 )\r\n```\r\n\r\nIt's possible that using `sm_35` could cause this for me in [their detection code (see `FIXME`)](https://github.com/llvm/llvm-project/blob/llvmorg-11.0.0/openmp/libomptarget/cmake/Modules/LibomptargetNVPTXBitcodeLibrary.cmake), but more likely it's because I'm using CUDA 11.1 and the provided `libdevice.bc` is unusable for them.  We're having electrical issues and had to shut down the rigs I usually test build issues on so I can't do additional testing right now (need to finish tooling up this one...).  This build error raises a couple of questions:\r\n\r\n1. Should `LIBOMPTARGET_NVPTX_ENABLE_BCLIB` be disabled if `+shared`?\r\n2. It doesn't look like there's a way to disable openmp nvptx target, should there be?  (Couldn't see an obvious way to disable it in their cmake options either).  Some kind of `variant(\"omp_nvptx\", ...)`?\r\n3. Hypothesis: would not have this error using CUDA 10.2.  Should LLVM package start tracking officially supported versions and possibly disable this automatically instead of (2)?\r\n    - Other than this build error and possibly switching off `LIBOMPTARGET_NVPTX_ENABLE_BCLIB`, newer CUDA is usually not an issue.  It just means you use an additional flag to squash some warnings, and you won't get any optimizations for the newer CUDA toolkit.  But presumably CUDA 11 and all the new goodies is making this specific component very difficult for them.\r\n    - Theoretically, since we're in `post_install`, we could with a small amount of effort actually run [`LibomptargetNVPTXBitcodeLibrary.cmake`](https://github.com/llvm/llvm-project/blob/llvmorg-11.0.0/openmp/libomptarget/cmake/Modules/LibomptargetNVPTXBitcodeLibrary.cmake) to see if it can actually be used.\r\n    - If this is done, what to do about `llvm@master`?\r\n\r\nAgain, only really posting to raise awareness of issue and temporary solution.  I will not be able to keep up with the discussion.\r\n\r\nCC:\r\n- LLVM maintainers: @trws @naromero77\r\n- CUDA maintainers: @ax3l @Rombur ",
    "user": "svenevs",
    "url": "https://api.github.com/repos/spack/spack/issues/19879",
    "updated_at": "2020-11-30 22:46:04",
    "created_at": "2020-11-12 14:22:48",
    "closed_at": "None",
    "state": "open",
    "title": "Installation issue: llvm +cuda openmp and nvptx should probably be conditional",
    "number": 19879,
    "milestone": null,
    "labels": [
        "build-error",
        "cuda"
    ],
    "id": 741641720,
    "html_url": "https://github.com/spack/spack/issues/19879",
    "assignees": [],
    "comments": 3
}