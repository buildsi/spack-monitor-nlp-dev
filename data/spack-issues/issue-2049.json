{
    "body": "I'd like to be able to create a Spack package, e.g. _my-stuff_, that does nothing on its own but depends on all of the various things, specified as I want them, so that when I `spack install my-stuff` it pulls in _emacs_ and _R_ and ....\n\nI'm currently doing something like [Erik Schnetter put forth](https://groups.google.com/forum/#!topic/spack/h_UtM17jV7Y).\n\nI imagine I could create a fake tarball (or a tarball with a bit of documentation) but then I'd have to bump it's version every time I change the list of dependencies and keep the package.py and tarball in sync.\n\nOr I could probably override the definitions of Package's `fetch` and `install` so that they didn't do anything interesting, but a quick glance shows me more going on around there than I expected.\n",
    "user": "hartzell",
    "url": "https://api.github.com/repos/spack/spack/issues/2049",
    "updated_at": "2016-10-27 22:17:51",
    "created_at": "2016-10-18 23:07:58",
    "closed_at": "2016-10-24 15:49:19",
    "state": "closed",
    "title": "Is there any concept like a \"virtual\" or \"meta\" package (e.g. Perl's Task:: distributions)?",
    "number": 2049,
    "milestone": null,
    "labels": [],
    "id": 183826154,
    "html_url": "https://github.com/spack/spack/issues/2049",
    "assignees": [],
    "comments": 18
}