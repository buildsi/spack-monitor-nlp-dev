{
    "body": "Modifications :\n- [x] added a class decorator to easily create composite over an interface or a series of methods\n- [x] `spack/package.py` : moved complexity from `do_stage` and `do_fetch` to `stage` and `fetch` property\n- [x] simplified logic in `mirror.py` (stage and fetcher creation is left to pkg)\n- [x] fix the two unit tests that are failing due to the changes in `stage.py` and `fetch_strategy.py`\n- [x] unit tests for composite class decorator\n- [x] the `resource` directive can now use all available fetchers\n- [x] `llvm` can now build the latest `trunk` (`llvm@develop`) as an example of the capability above\n\nAny comment on the code is more than welcome!\n\n@tgamblin : the API of `Stage` and `FetchStrategy` needs to be modified further to avoid exposing the items in the composite after its construction (for instance I would like to avoid the `for` loop in `mirror.py` and the conditional used to construct `name` and `archive_path`). I start a PR early to receive comments on this and see if the changes here fit with what you have in mind for this part of the code. \n",
    "user": "alalazo",
    "url": "https://api.github.com/repos/spack/spack/issues/298",
    "updated_at": "2016-02-19 16:52:09",
    "created_at": "2016-01-02 16:15:00",
    "closed_at": "2016-02-19 07:13:12",
    "state": "closed",
    "title": "refactoring proposal : composite for Stage and FetchStrategy ",
    "number": 298,
    "milestone": null,
    "labels": [],
    "id": 124597505,
    "html_url": "https://github.com/spack/spack/pull/298",
    "assignees": [],
    "comments": 9
}