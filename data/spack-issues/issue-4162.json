{
    "body": "Warning: I know next to nothing about openmpi...\r\n\r\nI've been asked to help out on a cluster that has problems.\r\n\r\nI thought I'd start out by building some tools.  Anything interesting that I try to do (even fetching) dies as follows:\r\n\r\n```\r\n[me@blah spack]$ ./bin/spack fetch gcc@5.4.0\r\n==> Error: Command exited with status 1:\r\n'/usr/bin/ibv_devices'\r\n[me@blah spack]$ /usr/bin/ibv_devices\r\nFailed to get IB devices list: Function not implemented\r\n[me@blah spack]$\r\n```\r\n\r\nI tracked it down to the OpenMPI package evaluating the code in `_verbs_dir()`, which involves executing `/usr/bin/ibv_devices` if it exists.\r\n\r\nI made this uber-simple hack to disable that bit and I'm now able to do basic stuff (haven't tried anything fancier yet...\r\n\r\n```diff\r\ndiff --git a/var/spack/repos/builtin/packages/openmpi/package.py b/var/spack/repos/builtin/packages/openmpi/package.py\r\nindex 2761df5..6f13ce3 100644\r\n--- a/var/spack/repos/builtin/packages/openmpi/package.py\r\n+++ b/var/spack/repos/builtin/packages/openmpi/package.py\r\n@@ -32,6 +32,7 @@ def _verbs_dir():\r\n     \"\"\"Try to find the directory where the OpenFabrics verbs package is\r\n     installed. Return None if not found.\r\n     \"\"\"\r\n+    return None\r\n     try:\r\n         # Try to locate Verbs by looking for a utility in the path\r\n         ibv_devices = which(\"ibv_devices\")\r\n```\r\n\r\nThis slightly more principled fix also seems to work.\r\n\r\n```diff\r\ndiff --git a/var/spack/repos/builtin/packages/openmpi/package.py b/var/spack/repos/builtin/packages/openmpi/package.py\r\nindex 2761df5..a97584f 100644\r\n--- a/var/spack/repos/builtin/packages/openmpi/package.py\r\n+++ b/var/spack/repos/builtin/packages/openmpi/package.py\r\n@@ -48,6 +48,8 @@ def _verbs_dir():\r\n         return path\r\n     except TypeError:\r\n         return None\r\n+    except ProcessError:\r\n+        return None\r\n\r\n\r\n class Openmpi(AutotoolsPackage):\r\n```\r\n\r\nGranted, this cluster is SNAFU/FUBAR/..., but should the openmpi package be more robust in the face of this sort of thing?  Is, perhaps, my second solution worthy of a PR?\r\n",
    "user": "hartzell",
    "url": "https://api.github.com/repos/spack/spack/issues/4162",
    "updated_at": "2017-05-09 23:00:35",
    "created_at": "2017-05-08 23:23:28",
    "closed_at": "2017-05-09 23:00:35",
    "state": "closed",
    "title": "Spack won't let me build *anything* if openmpi is mis-configured",
    "number": 4162,
    "milestone": null,
    "labels": [],
    "id": 227203402,
    "html_url": "https://github.com/spack/spack/issues/4162",
    "assignees": [],
    "comments": 2
}