{
    "body": "I'm trying to install PyTorch without CUDA support. With a fresh clone of Spack and no `packages.yaml`, I see:\r\n```console\r\n$ spack solve py-torch\r\n==> Best of 9 considered solutions.\r\n==> Optimization Criteria:\r\n  Priority  Criterion                                 Value\r\n  1         deprecated versions used                      0\r\n  2         version weight                                0\r\n  3         number of non-default variants (roots)        1\r\n  4         multi-valued variants                        -1\r\n  5         preferred providers for roots                 0\r\n  6         number of non-default variants (non-roots)    1\r\n  7         preferred providers (non-roots)             130\r\n  8         compiler mismatches                           0\r\n  9         version badness                              60\r\n  10        count of non-root multi-valued variants      -5\r\n  11        non-preferred compilers                       0\r\n  12        target mismatches                             0\r\n  13        non-preferred targets                         0\r\n\r\npy-torch@1.9.0%gcc@9.3.0+caffe2+cuda+cudnn+distributed+fbgemm+gloo+kineto+magma~metal+mkldnn+mpi+nccl+nnpack+numa+numpy+onnx_ml+openmp+qnnpack~rocm+tensorpipe+valgrind+xnnpack cuda_arch=35 patches=e37afffe45cf7594c22050109942370e49983ad772d12ebccf508377dc9dcfc9 arch=linux-ubuntu20.04-skylake\r\n```\r\nAs you can see, Spack has chosen to assign a random value to `cuda_arch` instead of disabling `+cuda`. With the following `packages.yaml`, Spack still tries to install `py-torch+cuda`:\r\n```yaml\r\npackages:\r\n  py-torch:\r\n    variants: ~cuda\r\n```\r\n```console\r\n$ spack solve py-torch\r\n==> Best of 8 considered solutions.\r\n==> Optimization Criteria:\r\n  Priority  Criterion                                 Value\r\n  1         deprecated versions used                      0\r\n  2         version weight                                0\r\n  3         number of non-default variants (roots)        2\r\n  4         multi-valued variants                        -1\r\n  5         preferred providers for roots                 0\r\n  6         number of non-default variants (non-roots)    1\r\n  7         preferred providers (non-roots)             130\r\n  8         compiler mismatches                           0\r\n  9         version badness                              60\r\n  10        count of non-root multi-valued variants      -5\r\n  11        non-preferred compilers                       0\r\n  12        target mismatches                             0\r\n  13        non-preferred targets                         0\r\n\r\npy-torch@1.9.0%gcc@9.3.0+caffe2+cuda+cudnn+distributed+fbgemm+gloo+kineto+magma~metal+mkldnn+mpi+nccl+nnpack+numa+numpy+onnx_ml+openmp+qnnpack~rocm+tensorpipe+valgrind+xnnpack cuda_arch=53 patches=e37afffe45cf7594c22050109942370e49983ad772d12ebccf508377dc9dcfc9 arch=linux-ubuntu20.04-skylake\r\n```\r\nI believe this is because dependencies like `magma`/`cudnn`/`nccl` also depend on CUDA. If I explicitly disable cuda from the command line, it works:\r\n```console\r\n$ spack solve py-torch~cuda\r\n==> Best of 9 considered solutions.\r\n==> Optimization Criteria:\r\n  Priority  Criterion                                 Value\r\n  1         deprecated versions used                      0\r\n  2         version weight                                0\r\n  3         number of non-default variants (roots)        2\r\n  4         multi-valued variants                        -1\r\n  5         preferred providers for roots                 0\r\n  6         number of non-default variants (non-roots)    1\r\n  7         preferred providers (non-roots)             130\r\n  8         compiler mismatches                           0\r\n  9         version badness                              60\r\n  10        count of non-root multi-valued variants      -5\r\n  11        non-preferred compilers                       0\r\n  12        target mismatches                             0\r\n  13        non-preferred targets                         0\r\n\r\npy-torch@1.9.0%gcc@9.3.0+caffe2~cuda~cudnn+distributed+fbgemm+gloo+kineto+magma~metal+mkldnn+mpi+nccl+nnpack+numa+numpy+onnx_ml+openmp+qnnpack+rocm+tensorpipe+valgrind+xnnpack cuda_arch=none patches=e37afffe45cf7594c22050109942370e49983ad772d12ebccf508377dc9dcfc9 arch=linux-ubuntu20.04-skylake\r\n```\r\nAlso, if I use:\r\n```yaml\r\npackages:\r\n  all:\r\n    variants: ~cuda\r\n```\r\nIt works:\r\n```console\r\n$ spack solve py-torch\r\n==> Best of 9 considered solutions.\r\n==> Optimization Criteria:\r\n  Priority  Criterion                                 Value\r\n  1         deprecated versions used                      0\r\n  2         version weight                                0\r\n  3         number of non-default variants (roots)        2\r\n  4         multi-valued variants                        -1\r\n  5         preferred providers for roots                 0\r\n  6         number of non-default variants (non-roots)    2\r\n  7         preferred providers (non-roots)             130\r\n  8         compiler mismatches                           0\r\n  9         version badness                              60\r\n  10        count of non-root multi-valued variants      -4\r\n  11        non-preferred compilers                       0\r\n  12        target mismatches                             0\r\n  13        non-preferred targets                         0\r\n\r\npy-torch@1.9.0%gcc@9.3.0+caffe2~cuda~cudnn+distributed+fbgemm+gloo+kineto+magma~metal+mkldnn+mpi~nccl+nnpack+numa+numpy+onnx_ml+openmp+qnnpack~rocm+tensorpipe+valgrind+xnnpack cuda_arch=none patches=e37afffe45cf7594c22050109942370e49983ad772d12ebccf508377dc9dcfc9 arch=linux-ubuntu20.04-skylake\r\n```\r\n\r\n### Information on your system\r\n\r\n* **Spack:** 0.8.17-20938-ea2d4b05bc\r\n* **Python:** 3.8.10\r\n* **Platform:** linux-ubuntu20.04-skylake\r\n* **Concretizer:** original\r\n\r\n### Additional information\r\n\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [x] I have run the failing commands in debug mode and reported the output",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/24754",
    "updated_at": "2022-01-06 14:31:49",
    "created_at": "2021-07-07 15:30:47",
    "closed_at": "None",
    "state": "open",
    "title": "Clingo overriding packages.yaml variant preferences",
    "number": 24754,
    "milestone": null,
    "labels": [
        "bug",
        "concretization",
        "workaround",
        "impact-low",
        "concretizer-use-case"
    ],
    "id": 939014370,
    "html_url": "https://github.com/spack/spack/issues/24754",
    "assignees": [
        "alalazo"
    ],
    "comments": 12
}