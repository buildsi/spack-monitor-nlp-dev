{
    "body": "I was hoping to avoid listing:\r\n```\r\n- match: ['llvm os=amzn2', 'paraview os=amzn2']\r\n   # ... override instance type tag ...\r\n- match: ['os=amzn2']\r\n   # ... override image ... \r\n- match: ['llvm os=ubuntu1804', 'paraview os=ubuntu1804']\r\n   # ... override instance type tag ... \r\n- match: ['os=ubuntu18.04']\r\n   # ... override image ...\r\n```\r\nand compress it to:\r\n```\r\n- match: ['llvm', 'paraview']\r\n   # ... override instance type ... \r\n- match: ['os=amzn2']\r\n- match: ['os=ubuntu18.04']\r\n```\r\nwhere the first match overrides the instance type AND one of the later matches would override the build image. This as a way to compress the runner mappings logic\r\n\r\n(beyond 2 build images the current mapping syntax gets super inefficient)\r\n\r\nI'd like to assign a spec to build on two different OSes, and certain specs to be tagged uniquely. Mappings give us an opportunity to override runner-attributes from the defaults in .gitlab-ci.yml. I'm suggesting the possibility of multiple mappings overriding runner-attributes fields in order of the match list. I'd like to avoid writing out a separate match block for every combination of runner image and runner tags. For example, if I have 5 different runner images and three unique tag situations, then it is the difference between 8 match blocks or 15. It seems more scalable to me, but maybe I missed something",
    "user": "bollig",
    "url": "https://api.github.com/repos/spack/spack/issues/21427",
    "updated_at": "2021-02-01 18:10:24",
    "created_at": "2021-02-01 18:05:50",
    "closed_at": "None",
    "state": "open",
    "title": "[gitlab-ci:mappings] Allow multiple matches for runner-attributes",
    "number": 21427,
    "milestone": null,
    "labels": [
        "feature",
        "pipelines"
    ],
    "id": 798586605,
    "html_url": "https://github.com/spack/spack/issues/21427",
    "assignees": [],
    "comments": 0
}