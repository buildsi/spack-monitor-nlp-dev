{
    "body": "Adding new package fsl. Got kind of hacky in `setup_environment` to make `self.stage.source_path` have a value if a new stage is created or `spack clean` has been run. I found that `FSLDIR` was being set to `None` when these conditions are true, because `spack_env` is set before the stage is created. What I did forces the stage to be created so that there is a value for `self.stage.source_path`. **Please** let me know if there is a better way of doing this that I am unaware of! \ud83d\ude04 \r\n\r\nI can confirm that, with installation using this `package.py` I created, this package's GUI components are all working correctly when connected to an X11-forwarding server.\r\n\r\nIn `setup_environment`, the `run_env` being set are all from `fsl.sh`. The reason I did not source the file at runtime like I did at build-time is because when I did try this, incorrect paths were set during installation, and when trying to execute the program it was looking for files in the stage path used during installation. Using `run_env.set` seems to have overridden whatever was set during the build process and the program now executes successfully.",
    "user": "akthoma",
    "url": "https://api.github.com/repos/spack/spack/issues/5605",
    "updated_at": "2017-11-21 14:56:55",
    "created_at": "2017-10-04 20:15:35",
    "closed_at": "2017-10-05 18:57:57",
    "state": "closed",
    "title": "fsl: new package",
    "number": 5605,
    "milestone": null,
    "labels": [],
    "id": 262916265,
    "html_url": "https://github.com/spack/spack/pull/5605",
    "assignees": [],
    "comments": 1
}