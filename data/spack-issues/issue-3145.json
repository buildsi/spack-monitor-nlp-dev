{
    "body": "I know that one can set compiler flags either in `compilers.yaml` or on the command line `spack install foo cppflags=\"-march=native\"`. Additionally, I saw some packages add/specify developer-recommended flags during configure stage (don't recall which, though). \r\n\r\nI am trying to figure out what is the best way to use non-default flags for a single package only (manually i would do that with `DCMAKE_CXX_FLAGS=\"-march=native\"` during `cmake` config). I could achieve that with\r\n```\r\nspack install --only dependents foo\r\nspack install foo cppflags=\"-march=native\"\r\n```\r\nBut that's not ideal. It is also not easy to extend to the case when custom flags have to be added to some dependencies of the DAG.\r\n\r\nKeeping this in mind, I think it would be useful to be able to specify extra per-package flags in `packages.yaml`:\r\n```\r\npackages:\r\n  foo:\r\n    cppflags: \r\n       gcc: -march=native\r\n       clang: -march=native -ffp-contract=fast\r\n```\r\nAny thoughts?\r\n\r\np.s. One can of course always hard-code extra developer's recommended flags in `package.py`.",
    "user": "davydden",
    "url": "https://api.github.com/repos/spack/spack/issues/3145",
    "updated_at": "2019-12-05 17:22:01",
    "created_at": "2017-02-15 08:20:11",
    "closed_at": "2019-12-05 17:22:01",
    "state": "closed",
    "title": "per-package setting of compiler flags",
    "number": 3145,
    "milestone": null,
    "labels": [
        "feature",
        "discussion"
    ],
    "id": 207735668,
    "html_url": "https://github.com/spack/spack/issues/3145",
    "assignees": [],
    "comments": 11
}