{
    "body": "### Steps to reproduce\n\nI've found that if I build packages in an environment with a padded install root that ends with a separator and then populate a build cache and attempt to install the cached package into a second - unpadded - environment, the RPATH and text-path relocation operations fail because this trailing character is not stripped from the old padded prefix, and so when the old prefix is replaced by the new prefix via a regex, a separating character is lost and an invalid path is produced.\r\n\r\nProviding exact instructions to reproduce is difficult, since it will depend on the number of characters in your install root. For me, the following combination in the padded environment spack.yaml produces the issue:\r\n\r\n```\r\n    install_tree:\r\n      root: /glade/scratch/vanderwb/spack/test/build/opt\r\n      padded_length: 126\r\n```\r\n\r\nMeanwhile, for this particular install root, if I use a padded_length of 128 characters it works. See below for the implications.\r\n\r\nI found at least two ways to fix the problem, but they basically boil down to rstrip'ing the os.path.sep character from the padded root, as is done for the user-provided root. I could provide a PR for how I've fixed it in our Spack clone, but I'm not sure where it would be best to put the fix. To me, the most logical place is in the parse_install_tree method, but in my testing this does not resolve the problem for already-created cached binary packages. It may be more robust to rstrip the `old_layout_root` variable in the relocate_package method.\n\n### Error message\n\nThere is no specific error message, but when using the debug flag and installing a package (`spack -d install hdf+shared`), a message is provided that demonstrates the trailing-slash issue.\r\n\r\nFor the 128-character (working) example:\r\n```\r\n==> [2021-12-28-22:55:31.203264] Relocating package from\r\n  /glade/scratch/vanderwb/spack/test/build/opt/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__ to /glade/scratch/vanderwb/spack/test/pub/opt.\r\n```\r\n\r\nAnd from the 126-character (failing) example:\r\n```\r\n==> [2021-12-28-23:30:11.173922] Relocating package from\r\n  /glade/scratch/vanderwb/spack/test/build/opt/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/ to /glade/scratch/vanderwb/spack/test/pub/opt.\r\n```\r\n\r\nFinally, if we compare the RPATH's of a relocated library in the second environment, the missing slash problem is obvious.\r\n\r\n128-character:\r\n```\r\n$ readelf -d opt/hdf/4.2.15/gcc/4.8.5/kx64zky/lib/libdf.so | grep RPATH | tr ':' '\\n' | grep openssl\r\n/glade/scratch/vanderwb/spack/test/pub/opt/openssl/1.1.1l/gcc/4.8.5/jwr4s44/lib\r\n```\r\n126-character:\r\n```\r\n$ readelf -d opt/hdf/4.2.15/gcc/4.8.5/kx64zky/lib/libdf.so | grep RPATH | tr ':' '\\n' | grep openssl\r\n/glade/scratch/vanderwb/spack/test/pub/optopenssl/1.1.1l/gcc/4.8.5/jwr4s44/lib\r\n/glade/scratch/vanderwb/spack/test/pub/opt/openssl/1.1.1l/gcc/4.8.5/jwr4s44/lib\r\n```\r\n\r\nI'm not entirely sure why it gets duplicated in the second case, but that does allow it to \"work\" for libraries. However, the same issue exists for text replacements and this does indeed break things (e.g., the Lmod initialization scripts).\n\n### Information on your system\n\n* **Spack:** 0.17.1-665-9d5ce49\r\n* **Python:** 3.7.9\r\n* **Platform:** linux-centos7-cascadelake\r\n* **Concretizer:** clingo\n\n### General information\n\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\n- [X] I have searched the issues of this repo and believe this is not a duplicate\n- [X] I have run the failing commands in debug mode and reported the output",
    "user": "vanderwb",
    "url": "https://api.github.com/repos/spack/spack/issues/28170",
    "updated_at": "2021-12-29 07:10:12",
    "created_at": "2021-12-29 07:10:12",
    "closed_at": "None",
    "state": "open",
    "title": "Padded install root with trailing os.path.sep doesn't relocate properly",
    "number": 28170,
    "milestone": null,
    "labels": [
        "bug",
        "triage"
    ],
    "id": 1090316090,
    "html_url": "https://github.com/spack/spack/issues/28170",
    "assignees": [],
    "comments": 0
}