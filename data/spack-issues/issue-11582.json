{
    "body": "Some compilers (eg Intel) require modules to load.  Traditionally, they can only be used by loading the required modules and then using `spack --dirty`.  Apparently, there's another way to use them, an \"rpath trick.\"  See below.  This needs to be added to the documentation.\r\n\r\nOn Wed, May 29, 2019 at 11:44 AM 'Kenneth Moreland' via Spack <spack@googlegroups.com> wrote:\r\nBili,\r\n\r\nThanks for the tip. The setting of extra_rpaths seems to do the trick. As a reference for anyone else who runs into this, here is the relevant  state of my compilers.yaml file:\r\n\r\n```\r\ncompilers:\r\n- compiler:\r\n    environment: {}\r\n    extra_rpaths:\r\n    - /opt/intel/compilers_and_libraries_2018.2.199/linux/compiler/lib/intel64_lin\r\n    flags: {}\r\n    modules:\r\n    - intel/18.0.2\r\n    operating_system: centos7\r\n    paths:\r\n      cc: /opt/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc\r\n      cxx: /opt/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc\r\n      f77: /opt/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort\r\n      fc: /opt/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort\r\n    spec: intel@18.0.2\r\n    target: x86_64\r\n```\r\n\r\nI also agree with Fabricio that it would be helpful if Spack automatically added these rpaths to compilers that it finds.\r\n\r\n-Ken\r\n\r\nOn Wednesday, May 29, 2019 at 6:46:57 AM UTC-6, Fabricio Cannini wrote:\r\nI'd second the extra_rpath trick.\r\nI've had similar problems with externally installed gcc and fixed it the same way.\r\n\r\nI'd go further and suggest that \"spack compiler find\" should set this option by default for all externally installed compilers. <wink wink nudge>\r\n\r\n[ ]'s\r\n\r\n\r\nEm qua, 29 de mai de 2019 02:33, Bili Dong <qobi...@gmail.com> escreveu:\r\nHi Ken,\r\n\r\nI just reproduced this issue on Stampede2 and found this extra_rpath trick to be the solution. You'll need to reinstall python with the new compilers.yaml and the issue shall go away.\r\n\r\nBest,\r\nBili\r\n\r\nOn Tuesday, May 28, 2019 at 9:21:50 PM UTC-7, Kenneth Moreland wrote:\r\nI am in the process of trying to compile some code on Stampede2 through Spack with the Intel compiler. For the most part I have my settings working to compile with the Intel compiler. However, one of the (deep) dependencies is using some Python utilities, and when Spack tries to install the py-setuptools package, it fails to run the internally compiled python with the following error.\r\n\r\n==> Installing py-setuptools\r\n==> Searching for binary cache of py-setuptools\r\n==> Warning: No Spack mirrors are currently configured\r\n==> No binary for py-setuptools found: installing from source\r\n/home1/06485/kmorel/spack/opt/spack/linux-centos7-x86_64/intel-18.0.2/python-2.7.16-3nshxebi6ftvii7inidep7d6ox6gre2d/bin/python2.7: error while loading shared libraries: libimf.so: cannot open shared object file: No such file or directory\r\n==> Error: ProcessError: Command exited with status 127:\r\n    '/home1/06485/kmorel/spack/opt/spack/linux-centos7-x86_64/intel-18.0.2/python-2.7.16-3nshxebi6ftvii7inidep7d6ox6gre2d/bin/python2.7' '-c' 'from distutils.sysconfig import get_config_var; print get_config_var('\"'\"'LIBDIR'\"'\"')'\r\n\r\nIt looks like the python2.7 compiled with the Intel compiler cannot be run when installing the py-setuptools package although it seems to work when I run it from the command line.\r\n\r\nWhat I think is happening is that executables compiled with the Intel compiler still need the Intel compiler module loaded. (If I unload the module in my shell and try to run python again from the command line, I get the same error.) For most packages this is not an issue since most require some form of a compiler and will load the Intel compiler module. But py-setuptools (presumably) does not use any compiler and so does not load a module.\r\n\r\nSo, I think the problem would be solved if all packages loaded the Intel compiler package/module regardless of whether it was compiling anything. Is there any way to set the Spack configuration to always do that?\r\n\r\n-Ken\r\n-- \r\nYou received this message because you are subscribed to the Google Groups \"Spack\" group.\r\nTo unsubscribe from this group and stop receiving emails from it, send an email to sp...@googlegroups.com.\r\nTo post to this group, send email to sp...@googlegroups.com.\r\nVisit this group at https://groups.google.com/group/spack.\r\nTo view this discussion on the web visit https://groups.google.com/d/msgid/spack/2e82c5ac-b102-48d3-9fa9-29e1268aebb7%40googlegroups.com.\r\nFor more options, visit https://groups.google.com/d/optout.\r\n\r\nEm qua, 29 de mai de 2019 02:33, Bili Dong <qobi...@gmail.com> escreveu:\r\nHi Ken,\r\n\r\nI just reproduced this issue on Stampede2 and found this extra_rpath trick to be the solution. You'll need to reinstall python with the new compilers.yaml and the issue shall go away.\r\n\r\nBest,\r\nBili\r\n\r\nOn Tuesday, May 28, 2019 at 9:21:50 PM UTC-7, Kenneth Moreland wrote:\r\nI am in the process of trying to compile some code on Stampede2 through Spack with the Intel compiler. For the most part I have my settings working to compile with the Intel compiler. However, one of the (deep) dependencies is using some Python utilities, and when Spack tries to install the py-setuptools package, it fails to run the internally compiled python with the following error.\r\n\r\n==> Installing py-setuptools\r\n==> Searching for binary cache of py-setuptools\r\n==> Warning: No Spack mirrors are currently configured\r\n==> No binary for py-setuptools found: installing from source\r\n/home1/06485/kmorel/spack/opt/spack/linux-centos7-x86_64/intel-18.0.2/python-2.7.16-3nshxebi6ftvii7inidep7d6ox6gre2d/bin/python2.7: error while loading shared libraries: libimf.so: cannot open shared object file: No such file or directory\r\n==> Error: ProcessError: Command exited with status 127:\r\n    '/home1/06485/kmorel/spack/opt/spack/linux-centos7-x86_64/intel-18.0.2/python-2.7.16-3nshxebi6ftvii7inidep7d6ox6gre2d/bin/python2.7' '-c' 'from distutils.sysconfig import get_config_var; print get_config_var('\"'\"'LIBDIR'\"'\"')'\r\n\r\nIt looks like the python2.7 compiled with the Intel compiler cannot be run when installing the py-setuptools package although it seems to work when I run it from the command line.\r\n\r\nWhat I think is happening is that executables compiled with the Intel compiler still need the Intel compiler module loaded. (If I unload the module in my shell and try to run python again from the command line, I get the same error.) For most packages this is not an issue since most require some form of a compiler and will load the Intel compiler module. But py-setuptools (presumably) does not use any compiler and so does not load a module.\r\n\r\nSo, I think the problem would be solved if all packages loaded the Intel compiler package/module regardless of whether it was compiling anything. Is there any way to set the Spack configuration to always do that?\r\n\r\n-Ken\r\n-- \r\nYou received this message because you are subscribed to the Google Groups \"Spack\" group.\r\nTo unsubscribe from this group and stop receiving emails from it, send an email to sp...@googlegroups.com.\r\nTo post to this group, send email to sp...@googlegroups.com.\r\nVisit this group at https://groups.google.com/group/spack.\r\nTo view this discussion on the web visit https://groups.google.com/d/msgid/spack/2e82c5ac-b102-48d3-9fa9-29e1268aebb7%40googlegroups.com.\r\nFor more options, visit https://groups.google.com/d/optout.\r\n-- \r\nYou received this message because you are subscribed to the Google Groups \"Spack\" group.\r\nTo unsubscribe from this group and stop receiving emails from it, send an email to spack+unsubscribe@googlegroups.com.\r\nTo post to this group, send email to spack@googlegroups.com.\r\nVisit this group at https://groups.google.com/group/spack.\r\nTo view this discussion on the web visit https://groups.google.com/d/msgid/spack/34941e20-9999-4158-a69e-9617442c8eb0%40googlegroups.com.\r\nFor more options, visit https://groups.google.com/d/optout.",
    "user": "citibeth",
    "url": "https://api.github.com/repos/spack/spack/issues/11582",
    "updated_at": "2021-08-27 11:34:36",
    "created_at": "2019-05-29 16:53:15",
    "closed_at": "None",
    "state": "open",
    "title": "Document Use of Compilers Requiring Modules",
    "number": 11582,
    "milestone": null,
    "labels": [
        "documentation",
        "rpath",
        "intel"
    ],
    "id": 449917142,
    "html_url": "https://github.com/spack/spack/issues/11582",
    "assignees": [],
    "comments": 35
}