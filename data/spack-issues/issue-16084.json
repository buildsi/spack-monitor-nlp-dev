{
    "body": "### Steps to reproduce the issue\r\n\r\n- To reproduce this issue you need to be on macOS.\r\n- Then after this, you need to create an environment, with the intention of replacing Homebrew/Anaconda, [reference](https://spack.readthedocs.io/en/latest/workflows.html)\r\n- After that active any env, lets say for example, my env is named Neo, and here is the configuration:\r\n\r\n```\r\n# This is a Spack Environment file.\r\n#\r\n# It describes a set of packages to be installed, along with\r\n# configuration settings.\r\n# This is a Spack Environment file.\r\n#\r\n# It describes a set of packages to be installed, along with\r\n# configuration settings.\r\nspack:\r\n  # add package specs to the `specs` list\r\n  specs: [bash, coreutils]\r\n  view: /opt/neo\r\n  config: {}\r\n  mirrors: {}\r\n  modules:\r\n    enable: []\r\n  packages: {}\r\n  repos: []\r\n  upstreams: {}\r\n  definitions: []\r\n  concretization: together\r\n```\r\n\r\n- Now you need to run software, that you had installed in your Mac/Darwin machine, and it isn't installed by Spack, for example here I use `code` command line tool from visual studio code and otool, and we get an error message:\r\n\r\n```dyld: Symbol not found: _iconv\r\n  Referenced from: /usr/lib/libarchive.2.dylib\r\n  Expected in: /opt/neo/lib/libiconv.2.dylib\r\n in /usr/lib/libarchive.2.dylib\r\n/usr/local/bin/code: line 10: 26217 Abort trap: 6           ELECTRON_RUN_AS_NODE=1 \"$ELECTRON\" \"$CLI\" \"$@\"\r\n```\r\n\r\n- As we see here is using /opt/neo to search for libiconv, the same happens, in for example otool.\r\n```spack \u276f otool -L code                                                                                                                        develop\r\n/opt/local/libexec/llvm-9.0/bin/llvm-objdump: dyld: lazy symbol binding failed: Symbol not found: _setupterm\r\n  Referenced from: /opt/local/libexec/llvm-9.0/bin/../lib/libLLVM.dylib\r\n  Expected in: /opt/neo/lib/libncurses.6.dylib\r\n\r\ndyld: Symbol not found: _setupterm\r\n  Referenced from: /opt/local/libexec/llvm-9.0/bin/../lib/libLLVM.dylib\r\n  Expected in: /opt/neo/lib/libncurses.6.dylib\r\n\r\nStack dump:\r\n0.\tProgram arguments: /opt/local/libexec/llvm-9.0/bin/llvm-objdump -macho -dylibs-used -non-verbose code\r\n0  libLLVM.dylib            0x0000000107aace68 llvm::sys::PrintStackTrace(llvm::raw_ostream&) + 40\r\n1  libLLVM.dylib            0x0000000107aad262 SignalHandler(int) + 188\r\n2  libsystem_platform.dylib 0x00007fff708f55fd _sigtramp + 29\r\n3  libsystem_platform.dylib 0x000000011701b590 _sigtramp + 18446603343308677040\r\n4  libsystem_platform.dylib 0x000000011701a54f _sigtramp + 18446603343308672879\r\n5  libsystem_platform.dylib 0x0000000117017bd2 _sigtramp + 18446603343308662258\r\n6  libsystem_platform.dylib 0x0000000116f9fb01 _sigtramp + 18446603343308170529\r\n7  libdyld.dylib            0x00007fff706fb692 dyld_stub_binder + 282\r\n8  libLLVM.dylib            0x000000010a61b6e0 _dyld_private + 0\r\n9  libLLVM.dylib            0x0000000107a8dd20 llvm::WithColor::WithColor(llvm::raw_ostream&, llvm::HighlightColor, bool) + 54\r\n```\r\n\r\nHowever, there is a workaround for this issue:\r\n- First of all I dumped my environment variables using the `env` command, and this is the part that was particularly suspicious:\r\n\r\n```\r\nLIBRARY_PATH=/opt/neo/lib64:/opt/neo/lib:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib64:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib\r\nCPATH=/opt/neo/include:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/include\r\nPKG_CONFIG_PATH=/opt/neo/lib64/pkgconfig:/opt/neo/lib/pkgconfig:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib64/pkgconfig:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib/pkgconfig\r\nDYLD_LIBRARY_PATH=/opt/neo/lib64:/opt/neo/lib:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib64:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib\r\nLD_LIBRARY_PATH=/opt/neo/lib64:/opt/neo/lib:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib64:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib\r\nACLOCAL_PATH=/opt/neo/share/aclocal:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/share/aclocal\r\nMANPATH=/opt/neo/share/man:/opt/neo/man:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/share/man:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/man\r\nSPACK_LD_LIBRARY_PATH=/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib64:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib\r\nSPACK_DYLD_LIBRARY_PATH=/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib64:/Users/dsmc/spack/var/spack/environments/neo/.spack-env/view/lib\r\nSPACK_ENV=/Users/dsmc/spack/var/spack/environments/neo\r\n_=/usr/bin/env\r\n```\r\n\r\n-So I had an idea, I know that on Darwin the environment variable `DYLD_LIBRARY_PATH` tells Darwin where to search for libraries, so what I did, I unset this environment variable with the following command:\r\n\r\n`unset DYLD_LIBRARY_PATH`\r\n\r\n-This made everything work as expect, I think the issue is that this is getting set in some part of the modules, I tried running some Spack installed programs, and they worked fine (Since these programs are linked properly), so unsetting doesn't cause an issue.\r\n### Information on your system\r\n\r\n```\r\nProductName:\tMac OS X\r\nProductVersion:\t10.15.4\r\nBuildVersion:\t19E287\r\n```\r\n\r\n```\r\nspack \u276f uname -a                                                                                                                             develop\r\nDarwin epicMac 19.4.0 Darwin Kernel Version 19.4.0: Wed Mar  4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64 x86_64\r\n```\r\n\r\n\r\n### Additional information\r\n\r\n<!-- These boxes can be checked by replacing [ ] with [x] or by clicking them after submitting the issue. -->\r\n- [ x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [ x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [ ] I have run the failing commands in debug mode and reported the output\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack! -->\r\n",
    "user": "DiegoMagdaleno",
    "url": "https://api.github.com/repos/spack/spack/issues/16084",
    "updated_at": "2020-04-17 00:23:35",
    "created_at": "2020-04-16 02:13:15",
    "closed_at": "2020-04-17 00:23:35",
    "state": "closed",
    "title": "Spack breaks some software when we are inside an environment",
    "number": 16084,
    "milestone": null,
    "labels": [
        "bug",
        "triage"
    ],
    "id": 600696661,
    "html_url": "https://github.com/spack/spack/issues/16084",
    "assignees": [],
    "comments": 1
}