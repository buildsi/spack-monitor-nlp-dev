{
    "body": "With abstract and multi-value variants \"other.satisfies(self)\" cannot any longer be a perfect check for whether it is possible to \"self.constrain(other)\". @alalazo recognized this and created `Variant.compatible` methods for the classes that derive from `AbstractVariant`.\r\n\r\nThis PR fixes `AbstractVariant.satisfies` to properly implement satisfaction, rather than compatibility. This requires adding a method to the `Spec` class that checks for compatibility between two specs, as satisfiability no longer works to check for ability to constrain one spec by another.\r\n\r\nThis in turn fixes a bug in SpecList matrix exclusion for non-boolean variants.\r\n\r\nFixes #16841 ",
    "user": "becker33",
    "url": "https://api.github.com/repos/spack/spack/issues/16853",
    "updated_at": "2020-08-19 22:50:16",
    "created_at": "2020-05-28 22:03:32",
    "closed_at": "2020-06-02 09:02:29",
    "state": "closed",
    "title": "AbstractVariant: fix satisfaction check ",
    "number": 16853,
    "milestone": null,
    "labels": [
        "specs",
        "variants"
    ],
    "id": 626845164,
    "html_url": "https://github.com/spack/spack/pull/16853",
    "assignees": [
        "scheibelp"
    ],
    "comments": 1
}