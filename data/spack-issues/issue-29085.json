{
    "body": "### Summary\n\nExternal detection should have a way to express whether a given external provides the \"build\", \"link\" or \"run\" components of a given package.\n\n### Rationale\n\nAs of now, an external is either present or not, and is assumed to work for build, link or run dependencies.  At the same time the detection logic looks for executables, and usually does not check for libraries or headers.  This can cause problems with packages that are frequently installed in a base system with their executables but without their development dependencies.  For example, `gettext` could have the eponymous utility installed but not the headers.  An even more common example might be `ncurses`.\r\n\r\nBecause of this, package external detection has to either produce configurations that are broken when used as link or run dependencies (what most currently do) or ensure that the external can be used safely for all three, thus making binary installs of say `python` unusable unless `python-dev` is also installed.\n\n### Description\n\n_No response_\n\n### Additional information\n\n_No response_\n\n### General information\n\n- [X] I have run `spack --version` and reported the version of Spack\n- [X] I have searched the issues of this repo and believe this is not a duplicate",
    "user": "trws",
    "url": "https://api.github.com/repos/spack/spack/issues/29085",
    "updated_at": "2022-02-18 22:53:58",
    "created_at": "2022-02-18 22:53:58",
    "closed_at": "None",
    "state": "open",
    "title": "express what kind of dependency can be provided by an external",
    "number": 29085,
    "milestone": null,
    "labels": [
        "feature"
    ],
    "id": 1143896424,
    "html_url": "https://github.com/spack/spack/issues/29085",
    "assignees": [],
    "comments": 0
}