{
    "body": "`py-pil` does not currently build with Python3.  This PR encodes that fact into the `py-pil` package, turning a build error into a an error during the `spack spec` phase.\n\n`py-pil` and `py-pillow` both implement the `pil` virtual package.  If one is using Python3 (for example, one specified `python@3:` in `packages.yaml`), then Spack should figure out that `py-pil` is not going to work and use `py-pillow` instead.  It does not do that.  Instead, it gives an error message during `spack spec`.  I consider this a bug, but not high priority:\n\n```\n$ spack spec py-basemap\n==> Error: Invalid spec: 'python@3.5.2%gcc@5.3.0~tk~ucs4 arch=linux-SuSE11-x86_64'. Package python requires version :2.8, but spec asked for 3.5.2\n```\n\nStepping back... why do we include `py-pil` in the Spack repo anyway?  `py-pillow` seems to be more current, and I can't see any reason to prever `py-pil` over it.  Can we at least set `py-pillow` to be the default `pil` provider?\n",
    "user": "citibeth",
    "url": "https://api.github.com/repos/spack/spack/issues/1868",
    "updated_at": "2016-09-28 20:51:42",
    "created_at": "2016-09-28 14:20:18",
    "closed_at": "2016-09-28 20:51:42",
    "state": "closed",
    "title": "py-pil: Protect against building with Python3.",
    "number": 1868,
    "milestone": null,
    "labels": [],
    "id": 179786926,
    "html_url": "https://github.com/spack/spack/pull/1868",
    "assignees": [],
    "comments": 2
}