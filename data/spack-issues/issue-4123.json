{
    "body": "If there are two packages of the same name present in two repositories, it seems that spack looks up the variants of the package in the repository with the highest priority, even if a namespace is explicitly given.\r\n\r\nSteps to reproduce:\r\n1) $mkdir $TESTDIR\r\n2) $cd $TESTDIR\r\n3) $git clone https://github.com/LLNL/spack.git\r\n4) $mkdir repo2\r\n\r\n5) $echo repo: >> repo2/repo.yaml\r\n6) $echo \"  namespace: repo2\" >> repo2/repo.yaml\r\n7) $mkdir repo2/packages\r\n8) $cp -r $TESTDIR/spack/var/spack/repos/builtin/packages/mpich repo2/packages\r\n\r\n9) add \"  - $TESTDIR/repo2\" to $TESTDIR/spack/etc/spack/defaults/repos.yaml above the builtin\r\n10) remove all variant(...) function calls from $TESTDIR/repo2/packages/mpich/package.py\r\n\r\n11) $./spack/bin/spack install builtin.mpich\r\n\r\nThis fails, and the used flags are '--enable-shared' '--with-pm=no' '--with-pmi=no' '--disable-romio' '--without-ibverbs' which indicates, that none of the variants of mpich are used. But a str(spec) at the beginning of configure_args(self) returns a string with +hydra+pmi etc, indicating that the variants are actually configured, but probably \\_\\_contains\\_\\_ is returning False instead of True. My guess is that the variants are actually compared to the package in the wrong repository (which would have precedence if no namespace was specified)",
    "user": "gronerl",
    "url": "https://api.github.com/repos/spack/spack/issues/4123",
    "updated_at": "2018-04-17 19:08:20",
    "created_at": "2017-05-04 16:59:19",
    "closed_at": "None",
    "state": "open",
    "title": "Spec::__contains__ seems to look up specs for packages from wrong namespace.",
    "number": 4123,
    "milestone": null,
    "labels": [
        "bug"
    ],
    "id": 226345811,
    "html_url": "https://github.com/spack/spack/issues/4123",
    "assignees": [
        "alalazo"
    ],
    "comments": 0
}