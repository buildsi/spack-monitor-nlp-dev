{
    "body": "### Steps to reproduce the issue\r\n\r\n**Note**: I'm not interested in jumping back down the rabbit hole on intel.  It's quite possible that the invalid components list is restricted to 2019.0.  I'm raising the issue to show a seemingly valid patch (but impossible for me to confirm given the second problem), and explain to anybody who may find this how to at least bypass it.\r\n\r\nAKA: nbd to me if this gets closed / labelled #wontfix...I'm certainly not going to fix it.  I wish intel would stop changing everything on us.\r\n\r\n### 1. Initial install fails due to lack of double quotes\r\n\r\n```\r\n==> [2019-03-21-05:03:00.327941] './install.sh' '--silent' 'silent.cfg'\r\n--------------------------------------------------------------------------------                                                                             \r\nPlease select at least one component before you continue.\r\n--------------------------------------------------------------------------------                                                                             \r\n```\r\n> [From OSX docs](https://software.intel.com/en-us/articles/silent-installation-guide-for-intel-parallel-studio-xe-composer-edition-for-os-x), but still relevant\r\n>\r\n> `COMPONENTS=<pattern>` allows the user to specify which components to install.  The components vary by compiler version and package.  **The components should be enclosed in double-quotes and semi-colon separated.**\r\n\r\nThis patch should be valid and works for me insofar as getting past this first one.\r\n\r\n```diff\r\n--- a/lib/spack/spack/build_systems/intel.py\r\n+++ b/lib/spack/spack/build_systems/intel.py\r\n@@ -1129,7 +1129,9 @@ class IntelPackage(PackageBase):\r\n \r\n         # NB: .cfg files generated with the \"--duplicate filename\" option have\r\n         # the COMPONENTS string begin with a separator - do not worry about it.\r\n-        components_joined = ';'.join(self._filtered_components)\r\n+        # COMPONENTS should be specified in double quotes, but no other args in\r\n+        # silent.cfg should have them.\r\n+        components_joined = '\"{0}\"'.format(';'.join(self._filtered_components))\r\n         nonrpm_db_dir = os.path.join(prefix, 'nonrpm-db')\r\n \r\n         config_draft = {\r\n```\r\n\r\n### 2. Spack generates an invalid component list\r\n\r\nPutting them in double quotes, the installer will then produce unrecognized components.\r\n\r\n```console\r\nsven:~/Desktop/spack (fixes/from_sourcing_file)> cat /home/sven/Desktop/spack/var/spack/stage/intel-parallel-studio-cluster.2019.0-ibtu6qtngp3oon2jnt7krtb6wxto7ank/parallel_studio_xe_2019_cluster_edition/spack-build.out\r\n...\r\n==> [2019-03-21-05:09:25.478496] './install.sh' '--silent' 'silent.cfg'\r\nCOMPONENTS parameter in silent configuration file contains invalid values:\r\n\r\n\"intel-mkl-cluster__x86_64;intel-gdb-cdt-source__noarch\"\r\n--------------------------------------------------------------------------------\r\nsven:~/Desktop/spack (fixes/from_sourcing_file)> /home/sven/Desktop/spack/var/spack/stage/intel-parallel-studio-cluster.2019.0-ibtu6qtngp3oon2jnt7krtb6wxto7ank/parallel_studio_xe_2019_cluster_edition/install.sh --list_components | grep mkl-cluster\r\nintel-mkl-cluster-c__noarch, version: 2019.0\r\nintel-mkl-cluster-f__noarch, version: 2019.0\r\n```\r\n\r\nSo I'm actually just setting `components_joined = 'ALL'` to subdue it.  And setting all relevant variants to on.  As in this is my `packages.yaml` here:\r\n\r\n```yaml\r\npackages:\r\n  intel-parallel-studio:\r\n    version: [cluster.2019.0]\r\n    variants: +advisor+clck+daal+gdb~ilp64+inspector+ipp+itac+mkl+mpi~newdtags+rpath+shared+tbb threads=none +vtune\r\n```\r\n\r\nSince for ALL it's going to try and install everything, even though e.g., this isn't a cluster.  (NOTE: the same issue if I turn off the variants that are invalid for my computer, leading me to believe this issue is likely specific to the 2019 versions).\r\n\r\nHowever, what we do see here is that maybe spack should be trying to populate the potential component list by querying `install.sh --list_components`.  That would require some parsing (e.g., keep lines that have `version:` in them, then split on `,`).  But then we'd have to be able to actually map things back to the spack variants...which doesn't sound very fun.\r\n\r\n### Platform and user environment\r\n\r\nPlease report your OS here:\r\n```commandline\r\n$ uname -a \r\nLinux pandora 4.18.16-300.fc29.x86_64 #1 SMP Sat Oct 20 23:24:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n# $ lsb_release -d\r\n# Description:\tUbuntu 18.04.1 LTS\r\n$ rpm -E %fedora\r\n29\r\n``` ",
    "user": "svenevs",
    "url": "https://api.github.com/repos/spack/spack/issues/10958",
    "updated_at": "2020-03-10 21:58:48",
    "created_at": "2019-03-21 12:33:00",
    "closed_at": "None",
    "state": "open",
    "title": "Installation issue: intel-parallel-studio@cluster.2019.0 invalid COMPONENTS in silent.cfg",
    "number": 10958,
    "milestone": null,
    "labels": [
        "build-error",
        "intel"
    ],
    "id": 423706610,
    "html_url": "https://github.com/spack/spack/issues/10958",
    "assignees": [],
    "comments": 3
}