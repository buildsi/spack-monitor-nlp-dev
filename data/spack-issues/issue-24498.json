{
    "body": "I believe this to be a bug, rather than behavior just not matching my expectations.\r\n\r\nWhen a package has variants, and you have multiple externals defined to match those variants - spack is having troubles picking the correct external - if the full variants list isnt specified.\r\nThis means it will pick an external for concretization which does not match the spec asked for.\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\nLets define a simple dummy package ext-spec, with one variant (debug default false):\r\n\r\n```python\r\nfrom spack import *\r\n\r\n\r\nclass ExtSpec(Package):\r\n    \"\"\"FIXME: Put a proper description of your package here.\"\"\"\r\n\r\n    # FIXME: Add a proper url for your package's homepage here.\r\n    homepage = \"https://www.example.com\"\r\n    url      = \"ext-spec\"\r\n\r\n    # FIXME: Add proper versions and checksums here.\r\n    version('1.2.3')\r\n\r\n    variant('debug', default=False, description='debug build')\r\n\r\n    def install(self, spec, prefix):\r\n        # FIXME: Unknown build system\r\n        make()\r\n        make('install')\r\n```\r\n\r\nNow we can spec the package with the variant:\r\n\r\n```console\r\n$ spack spec ext-spec\r\nInput spec\r\n--------------------------------\r\next-spec\r\n\r\nConcretized\r\n--------------------------------\r\next-spec@1.2.3%gcc@10.3.0~debug arch=linux-amzn2-graviton2\r\n\r\n$ spack spec ext-spec+debug\r\nInput spec\r\n--------------------------------\r\next-spec+debug\r\n\r\nConcretized\r\n--------------------------------\r\next-spec@1.2.3%gcc@10.3.0+debug arch=linux-amzn2-graviton2\r\n```\r\n\r\nGreat, those concretized specs look perfect.\r\n\r\nNow lets define an externals for the package, with two installs - default and with debug enabled:\r\n\r\n```yaml\r\npackages:\r\n    ext-spec:\r\n        externals:\r\n        - spec: ext-spec\r\n          prefix: /software/ext-spec/\r\n        - spec: ext-spec+debug\r\n          prefix: /software/ext-spec_debug/\r\n```\r\n\r\nNow we can repeat our spec queries:\r\n\r\n```console\r\n$ spack spec ext-spec\r\nInput spec\r\n--------------------------------\r\next-spec\r\n\r\nConcretized\r\n--------------------------------\r\next-spec@1.2.3%gcc@10.3.0~debug arch=linux-amzn2-graviton2\r\n\r\n$ spack spec ext-spec+debug\r\nInput spec\r\n--------------------------------\r\next-spec+debug\r\n\r\nConcretized\r\n--------------------------------\r\next-spec@1.2.3%gcc@10.3.0~debug arch=linux-amzn2-graviton2\r\n```\r\n\r\nSo even though we have asked for `ext-spec+debug` it is concretizing to `ext-spec~debug`, even though we have an external defined for that exact spec.\r\n\r\nI believe this is because the externals selection is too permissive, and taking the 'default' spec and accepting that. \r\nWe can correct this behavior by formalizing the spec of the 'default' install:\r\n\r\n```yaml\r\npackages:\r\n    ext-spec:\r\n        externals:\r\n        - spec: ext-spec~debug\r\n          prefix: /software/ext-spec/\r\n        - spec: ext-spec+debug\r\n          prefix: /software/ext-spec_debug/\r\n\r\n```\r\n\r\nNow our spec concretize correctly:\r\n\r\n```console\r\n$ spack spec ext-spec\r\nInput spec\r\n--------------------------------\r\next-spec\r\n\r\nConcretized\r\n--------------------------------\r\next-spec@1.2.3%gcc@10.3.0~debug arch=linux-amzn2-graviton2\r\n\r\n$ spack spec ext-spec+debug\r\nInput spec\r\n--------------------------------\r\next-spec+debug\r\n\r\nConcretized\r\n--------------------------------\r\next-spec@1.2.3%gcc@10.3.0+debug arch=linux-amzn2-graviton2\r\n```\r\n\r\nNote: This format is 'reproduced' from the [externals example](https://spack.readthedocs.io/en/latest/build_settings.html#external-packages)\r\n\r\n\r\n\r\n### Information on your system\r\n\r\n```console\r\n$ spack debug report\r\n* **Spack:** 0.16.2-3221-8e249c03de\r\n* **Python:** 3.7.10\r\n* **Platform:** linux-amzn2-graviton2\r\n* **Concretizer:** original\r\n\r\n```\r\n\r\nDebug output, just in case. \r\n\r\n```console\r\n$ spack --debug spec ext-spec+debug\r\n==> [2021-06-24-10:04:18.498824] Imported spec from built-in commands\r\n==> [2021-06-24-10:04:18.499689] Imported spec from built-in commands\r\nInput spec\r\n--------------------------------\r\next-spec+debug\r\n\r\nConcretized\r\n--------------------------------\r\n==> [2021-06-24-10:04:18.501474] Reading config file /software/spack/etc/spack/defaults/config.yaml\r\n==> [2021-06-24-10:04:18.524815] Reading config file /software/spack/etc/spack/config.yaml\r\n==> [2021-06-24-10:04:18.528468] Reading config file /software/spack/etc/spack/defaults/repos.yaml\r\n==> [2021-06-24-10:04:18.540288] Reading config file /software/spack/etc/spack/defaults/packages.yaml\r\n==> [2021-06-24-10:04:18.573902] Reading config file /software/spack/etc/spack/packages.yaml\r\n==> [2021-06-24-10:04:18.585097] Reading config file /home/ec2-user/.spack/packages.yaml\r\n==> [2021-06-24-10:04:18.590828] Reading config file /software/spack/etc/spack/compilers.yaml\r\n==> [2021-06-24-10:04:18.615132] DATABASE LOCK TIMEOUT: 3s\r\n==> [2021-06-24-10:04:18.615196] PACKAGE LOCK TIMEOUT: No timeout\r\next-spec@1.2.3%gcc@10.3.0~debug arch=linux-amzn2-graviton2\r\n```\r\n\r\n\r\n### Additional information\r\n\r\n<!-- These boxes can be checked by replacing [ ] with [x] or by clicking them after submitting the issue. -->\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [x] I have run the failing commands in debug mode and reported the output\r\n\r\n",
    "user": "OliverPerks",
    "url": "https://api.github.com/repos/spack/spack/issues/24498",
    "updated_at": "2021-06-28 08:30:49",
    "created_at": "2021-06-24 10:06:51",
    "closed_at": "None",
    "state": "open",
    "title": "Issue with permissive spec in externals definition with variants",
    "number": 24498,
    "milestone": null,
    "labels": [
        "bug",
        "concretization",
        "triage"
    ],
    "id": 929065195,
    "html_url": "https://github.com/spack/spack/issues/24498",
    "assignees": [
        "alalazo"
    ],
    "comments": 1
}