{
    "body": "Fixes #2946.\r\nFixes #2947.\r\nFixes #3176.\r\nFixes #3554.\r\n\r\nI plan on overhauling Spack's URL parsing so that we more often correctly guess the name and version of a package from its URL. In order to do this, I need an accurate baseline of URLs that I can try to match with regexes. The goal of this PR is to ensure that every URL in Spack:\r\n\r\n1. Is a \"real\" URL for a download tarball, not just the URL of the homepage\r\n\r\nA lot of packages look like:\r\n```python\r\nhomepage = \"https://github.com/google/cityhash\"\r\nurl      = \"https://github.com/google/cityhash\"\r\n```\r\nThis is a \"fake\" URL. It cannot be used to download the package. In fact, it can't be used for anything, so I removed it.\r\n\r\n2. Is for a version that exists in the Spack package, not a random version\r\n\r\nFor example, autotools has a URL:\r\n```python\r\nurl      = 'http://ftp.gnu.org/gnu/automake/automake-1.14.tar.gz'\r\n```\r\nbut that version isn't in the package. There is no way to ensure that `1.14` is being correctly parsed as a version number unless that version is in the package.\r\n\r\n3. Can theoretically be parsed to find the name and version of the package\r\n\r\nSome URLs are not versioned, like:\r\n```python\r\nurl      = \"ftp://ftp.pmel.noaa.gov/ferret/pub/source/fer_source.tar.gz\"\r\n```\r\nUse a versioned URL where possible:\r\n```python\r\nurl      = \"ftp://ftp.pmel.noaa.gov/ferret/pub/source/fer_source.v696.tar.gz\"\r\n```\r\nAlso, some URLs contain a commit tag instead of a version number:\r\n```python\r\nversion('1.9.5.1.1', 'd035e4bc704d136db79b43ab371b27d2',\r\n        url='https://www.github.com/jswhit/pyproj/tarball/0be612cc9f972e38b50a90c946a9b353e2ab140f')\r\n```\r\nThis is a valid URL, but there is no way we could possibly extract the version number from that. Spack has support for checking out a particular commit, so use it:\r\n```python\r\nversion('1.9.5.1.1', git='https://www.github.com/jswhit/pyproj.git',\r\n        commit='0be612cc9f972e38b50a90c946a9b353e2ab140f')\r\n```\r\nHow much of a difference does this make? Before this PR, our performance was:\r\n```\r\n$ spack url test\r\n==> Generating a summary of URL parsing in Spack...\r\n\r\n    Total URLs found:          1171\r\n    Names correctly parsed:    1050/1171 (89.67%)\r\n    Versions correctly parsed: 1074/1171 (91.72%)\r\n```\r\nOf course, this isn't accurate due to all of the fake URLs. After this PR, we can see that our real performance is:\r\n```\r\n$ spack url test\r\n==> Generating a summary of URL parsing in Spack...\r\n\r\n    Total URLs found:          1151\r\n    Names correctly parsed:    1038/1151 (90.18%)\r\n    Versions correctly parsed: 1089/1151 (94.61%)\r\n```\r\nMuch better.\r\n\r\n@citibeth You may want to check this out. A couple of these packages are yours, so I want to make sure you're okay with the changes. I made sure that all of the packages I've modified can still be fetched and that the checksum in the package is correct.",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/2972",
    "updated_at": "2018-03-21 18:43:13",
    "created_at": "2017-01-31 20:22:35",
    "closed_at": "2017-04-03 22:34:17",
    "state": "closed",
    "title": "Overhaul Spack's URL parsing",
    "number": 2972,
    "milestone": "v0.11.0",
    "labels": [
        "url-parsing"
    ],
    "id": 204413179,
    "html_url": "https://github.com/spack/spack/pull/2972",
    "assignees": [],
    "comments": 54
}