{
    "body": "One question I forgot to ask at SC16 is, how to handle `depends_on` of C++ header-only libraries.\r\n\r\nA C++ header-only library can, e.g., introduce a dependency to `boost` (can again be header only but additionally also link-time). Currently, `depends_on(type=...)` \"build\" does not forward the include paths:\r\n  *made available during the project\u2019s build. The package will be added to PATH, the compiler include paths[...]. Other projects which depend on this one **will not have these modified** [...]* ([ref](http://spack.readthedocs.io/en/latest/packaging_guide.html#dependency-specs))\r\n\r\nbut the problem is, that a header-only library's build time does nothing and it's install only copies it's files.\r\n\r\nThe type  \"link\" only adds the libraries (but not the includes). The last available option \"run\" does not apply here.\r\n\r\nHow to handle such libraries without forcing the user of those to look up all sub (sub-sub, sub-sub-sub) dependencies? Do we need a new \"depends_on\" type?",
    "user": "ax3l",
    "url": "https://api.github.com/repos/spack/spack/issues/2378",
    "updated_at": "2021-11-18 19:05:31",
    "created_at": "2016-11-22 09:13:00",
    "closed_at": "2021-11-18 19:05:31",
    "state": "closed",
    "title": "C++ Header-Only Libraries: Dependencies",
    "number": 2378,
    "milestone": null,
    "labels": [
        "dependencies",
        "modules"
    ],
    "id": 190943902,
    "html_url": "https://github.com/spack/spack/issues/2378",
    "assignees": [
        "alalazo"
    ],
    "comments": 10
}