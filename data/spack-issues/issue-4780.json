{
    "body": "I need to build packages for a handful of bioinformatics tools that all share the annoying property of including local copies of well known tools (e.g. `bamtools`) in their source tree and installing them alongside their own tool.\r\n\r\nI can make this work, but I'm going to end up with `.../opt/.../bamtools-.../bin/bamtools` and `.../opt/.../package_x-.../bin/bamtools` in my tree.\r\n\r\nI'm \"fine\" with this, as long as people can't load both modules.\r\n\r\nI can't figure out how to prevent this.  Searching for \"conficts\" keeps leading me to build-time conflict handling, which isn't what I'm looking for.",
    "user": "hartzell",
    "url": "https://api.github.com/repos/spack/spack/issues/4780",
    "updated_at": "2017-07-17 17:41:25",
    "created_at": "2017-07-15 01:11:50",
    "closed_at": "None",
    "state": "open",
    "title": "Can a package to construct a (lua) modulefile that conflicts with another package?",
    "number": 4780,
    "milestone": null,
    "labels": [
        "modules"
    ],
    "id": 243143608,
    "html_url": "https://github.com/spack/spack/issues/4780",
    "assignees": [
        "alalazo"
    ],
    "comments": 1
}