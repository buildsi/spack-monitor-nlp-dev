{
    "body": "### Steps to reproduce\r\n\r\nGiven:\r\n1. Two system compilers with specs `gcc@10.2.0-myidentifier` and `gcc@10.3.0-myidentifier`\r\n2. A package `x` depending on `y`, where `x` conflicts with `gcc@10.3.0`, and also conflicts with `y@2.0.0`\r\n3. And a system version of `y` with the spec `y@2.0.0-myidentifier`\r\n\r\n```spack spec x``` concretizes to\r\n\r\n```\r\nx@1.0.0%gcc@10.3.0-myflag arch=linux-ubuntu20.04-zen2\r\n    ^y@2.0.0-flag%gcc@10.3.0-myflag arch=linux-ubuntu20.04-zen2\r\n```\r\n\r\nnot satisfying either of the constraints, which is a bug, because the concrete output spec satisfies the specs of the conflicts:\r\n\r\n```python\r\n>>> x = spack.spec.Spec('x')\r\n>>> x.concretize()\r\n>>> x\r\nx@1.0.0%gcc@10.3.0-myflag arch=linux-ubuntu20.04-zen2 ^y@2.0.0-flag%gcc@10.3.0-myflag arch=linux-ubuntu20.04-zen2\r\n>>> x.satisfies(spack.spec.Spec('%gcc@10.3.0'))\r\nTrue\r\n>>> x.satisfies(spack.spec.Spec('^y@2.0.0'))\r\nTrue\r\n```\r\n\r\nThis is because Spack special-cases \"concrete versions\", where it arbitrarily switches interpretation of the meaning of `x.y.z` as the closed-open range `[x.y.z, x.y.z+1)` to the exact version `x.y.z`.\r\n\r\nIMHO Spack should not do this, and uniformly interpret `x.y.z` as a range.\r\n\r\nIf I understand correctly this behavior was put in place just to support packages with weird numbering schemes `1.0`, `1.0.1`, `...`, `1.0.4`, `1.1`, `...`.\r\n\r\nBut this is not a good justification, cause in those packages we can simply work around the issue with ranges too, such as:\r\n\r\n```python\r\ndepends_on('x@1.0:1.0.0')  # only allow 1.0, not 1.0.1, ...\r\nconflicts('x@:1.0.0')  # support 1.0.1, 1.0.2, ... but not 1.0\r\n```\r\n\r\n---\r\n\r\nTo reproduce, create a repo `spack repo create example example`, put these two packages in there, and use the spack.yaml file in the same dir containing the repo:\r\n\r\n```python\r\nclass X(Package):\r\n    homepage = \"localhost\"\r\n    has_code = False\r\n\r\n    version('1.0.0')\r\n\r\n    depends_on('y')\r\n\r\n    conflicts('%gcc@10.3.0')\r\n    conflicts('^y@2.0.0')\r\n```\r\n\r\n```python\r\nclass Y(Package):\r\n    homepage = \"localhost\"\r\n    has_code = False\r\n    \r\n    version('2.0.0')\r\n    version('1.0.0')\r\n```\r\n\r\n```yaml\r\nspack:\r\n  specs:\r\n  - x\r\n  repos:\r\n  - ./example\r\n  packages:\r\n    y:\r\n      externals:\r\n      - spec: y@2.0.0-myidentifier\r\n        prefix: /path/to/somewhere\r\n  'compilers:':\r\n  - compiler:\r\n      environment: {}\r\n      extra_rpaths: []\r\n      flags: {}\r\n      modules: []\r\n      operating_system: ubuntu20.04\r\n      paths:\r\n        cc: cc\r\n        cxx: CC\r\n        f77: ftn\r\n        fc: ftn\r\n      spec: gcc@10.2.0-myidentifier\r\n      target: x86_64\r\n  - compiler:\r\n      environment: {}\r\n      extra_rpaths: []\r\n      flags: {}\r\n      modules: []\r\n      operating_system: ubuntu20.04\r\n      paths:\r\n        cc: cc\r\n        cxx: CC\r\n        f77: ftn\r\n        fc: ftn\r\n      spec: gcc@10.3.0-myidentifier\r\n      target: x86_64\r\n```\r\n\r\n### Error message\r\n\r\n.\r\n\r\n### Information on your system\r\n\r\n* **Spack:** 0.16.2-4356-2b6a8ccf29\r\n* **Python:** 3.8.11\r\n* **Platform:** linux-ubuntu20.04-zen2\r\n* **Concretizer:** clingo\r\n\r\n\r\n### General information\r\n\r\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [X] I have searched the issues of this repo and believe this is not a duplicate\r\n- [X] I have run the failing commands in debug mode and reported the output",
    "user": "haampie",
    "url": "https://api.github.com/repos/spack/spack/issues/26153",
    "updated_at": "2021-09-22 13:59:57",
    "created_at": "2021-09-22 13:53:27",
    "closed_at": "2021-09-22 13:59:56",
    "state": "closed",
    "title": "Spack arbitrarily switches interpretation of versions from closed-open range to concrete / exact version during concretization",
    "number": 26153,
    "milestone": null,
    "labels": [
        "bug",
        "triage"
    ],
    "id": 1004327226,
    "html_url": "https://github.com/spack/spack/issues/26153",
    "assignees": [],
    "comments": 2
}