{
    "body": "A friend reported trouble building py-multiqc on his mac, which set me on a wild goose chase.  He claims it builds on linux, but I'm w/out a linux system at the moment to verify.\r\n\r\nMy immediate question is, how can I usefully debug a problem with dependencies?\r\n\r\nOn a mac running 10.13.6, on `develop`, in a tree that I updated this afternoon....\r\n\r\n```console\r\n(alice)[17:02:25]spack>>./bin/spack spec py-multiqc\r\nInput spec\r\n--------------------------------\r\npy-multiqc\r\n\r\nConcretized\r\n--------------------------------\r\n==> Warning: clang@9.1.0-apple cannot build optimized binaries for \"haswell\". Using best target possible: \"x86_64\"\r\n==> Error: An unsatisfiable version constraint has been detected for spec:\r\n\r\n    python@3.7.4%clang@9.1.0-apple+bz2+ctypes+dbm+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline~shared+sqlite3+ssl~tix~tkinter~ucs4~uuid+zlib arch=darwin-highsierra-x86_64\r\n        ^bzip2@1.0.8%clang@9.1.0-apple+shared arch=darwin-highsierra-x86_64\r\n            ^diffutils@3.7%clang@9.1.0-apple arch=darwin-highsierra-x86_64\r\n                ^libiconv@1.16%clang@9.1.0-apple arch=darwin-highsierra-x86_64\r\n        ^expat\r\n        ^gdbm\r\n            ^readline\r\n                ^ncurses\r\n                    ^pkgconf@1.6.3%clang@9.1.0-apple arch=darwin-highsierra-x86_64\r\n        ^gettext@0.20.1%clang@9.1.0-apple+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-highsierra-x86_64\r\n            ^libxml2\r\n                ^xz\r\n                ^zlib@1.2.11%clang@9.1.0-apple+optimize+pic+shared arch=darwin-highsierra-x86_64\r\n            ^tar\r\n        ^libffi\r\n        ^openssl@1.0.2:\r\n            ^perl@5.14.0:\r\n        ^sqlite@3.0.8:\r\n\r\n\r\nwhile trying to concretize the partial spec:\r\n\r\n    py-backports-functools-lru-cache\r\n\r\n\r\npy-backports-functools-lru-cache requires python version 2.6.0:3.3.99, but spec asked for 3.7.4\r\n(alice)[17:02:29]spack>>\r\n``` \r\n\r\nI started off dropping calls to `pdb.set_trace()` into various bits of `spec.py` and poking around, but it's all twisty turny.  It seems that `py-matplotlib` is constrained to versions that require python2-ish, which is what drags in the `py-backports-functools-lru-cache`, but `py-matplotlib` *also* wants `py-numpy` and it seems to want python3-ish.\r\n\r\nHere's an example trying to build a spec that i picked out of the `py-multiqc` spec while poking around:\r\n\r\n```console\r\n(alice)[17:12:17]spack>>./bin/spack spec py-matplotlib@2.0.0:2.9.9\r\nInput spec\r\n--------------------------------\r\npy-matplotlib@2.0.0:2.9.9\r\n\r\nConcretized\r\n--------------------------------\r\n==> Warning: clang@9.1.0-apple cannot build optimized binaries for \"haswell\". Using best target possible: \"x86_64\"\r\n==> Error: An unsatisfiable version constraint has been detected for spec:\r\n\r\n    python@3.7.4%clang@9.1.0-apple+bz2+ctypes+dbm+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline~shared+sqlite3+ssl~tix~tkinter~ucs4~uuid+zlib arch=darwin-highsierra-x86_64\r\n        ^bzip2@1.0.8%clang@9.1.0-apple+shared arch=darwin-highsierra-x86_64\r\n            ^diffutils@3.7%clang@9.1.0-apple arch=darwin-highsierra-x86_64\r\n                ^libiconv@1.16%clang@9.1.0-apple arch=darwin-highsierra-x86_64\r\n        ^expat\r\n        ^gdbm\r\n            ^readline\r\n                ^ncurses\r\n                    ^pkgconf@1.6.3%clang@9.1.0-apple arch=darwin-highsierra-x86_64\r\n        ^gettext@0.20.1%clang@9.1.0-apple+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-highsierra-x86_64\r\n            ^libxml2\r\n                ^xz\r\n                ^zlib@1.2.11%clang@9.1.0-apple+optimize+pic+shared arch=darwin-highsierra-x86_64\r\n            ^tar\r\n        ^libffi\r\n        ^openssl@1.0.2:\r\n            ^perl@5.14.0:\r\n        ^sqlite@3.0.8:\r\n\r\n\r\nwhile trying to concretize the partial spec:\r\n\r\n    py-backports-functools-lru-cache\r\n\r\n\r\npy-backports-functools-lru-cache requires python version 2.6.0:3.3.99, but spec asked for 3.7.4\r\n```\r\n\r\nIs there some way to trace the progress of concretization?\r\n\r\nIs there some way to see the dependency graph as it stands when the error happened?\r\n\r\nIs there some way to see where the \"spec asked for 3.7.4\", because the input certainly didn't.\r\n\r\n**Thanks**, as always.\r\n\r\n",
    "user": "hartzell",
    "url": "https://api.github.com/repos/spack/spack/issues/13711",
    "updated_at": "2019-11-14 22:26:45",
    "created_at": "2019-11-13 01:07:21",
    "closed_at": "2019-11-14 22:26:45",
    "state": "closed",
    "title": "Installation issue: py-multiqc -- help debugging concretization/dependency quandary",
    "number": 13711,
    "milestone": null,
    "labels": [
        "build-error"
    ],
    "id": 521892859,
    "html_url": "https://github.com/spack/spack/issues/13711",
    "assignees": [
        "scheibelp"
    ],
    "comments": 8
}