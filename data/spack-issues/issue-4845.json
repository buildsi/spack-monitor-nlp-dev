{
    "body": "Currently, there are some hard-coded dependencies that don't make sense to me.\r\n\r\n1. `py-sphinxconrtrib-websupport` is only a dependency from 1.6 onward:\r\n\r\n    > 1.6b3\r\n    > \r\n    > 3588: No compact (p tag) html output in the i18n document build even when html_compact_lists is True.\r\n    > The make latexpdf from 1.6b1 (for GNU/Linux and Mac OS, using latexmk) aborted earlier in case of LaTeX errors than was the case with 1.5 series, due to hard-coded usage of --halt-on-error option. (refs 3695)\r\n    > [**3683: sphinx.websupport module is not provided by default**](https://github.com/sphinx-doc/sphinx/issues/3683)\r\n    > 3683: Failed to build document if builder.css_file.insert() is called\r\n    > 3714: viewcode extension not taking highlight_code='none' in account\r\n    > 3698: Moving :doc: to std domain broke backwards compatibility\r\n    > 3633: misdetect unreferenced citations\r\n\r\n2. `typing` should not be installed unless it is needed; unless it is v1.6.1 (bug).  This library comes with python 3.5.2+.\r\n\r\n    - I forget the state of affairs.  Can something like a backport library \"self-destruct\" if it shouldn't be installed (aka fail out saying \"bad dependency backport not necessary\") or is the policy to just rage duplicate these?  I've seen quite a few others, e.g. enum34.\r\n\r\n3. 1.6.2 is out :smile:\r\n\r\nSo I'd like to patch with\r\n\r\n```py\r\n # Sphinx 1.6 introduces modularity\r\n depends_on('py-sphinxcontrib-websupport', when='@1.6:',\r\n            type=('build', 'run'))\r\n# Build dep for 1.6.1 all python (bug), see:\r\n# https://github.com/sphinx-doc/sphinx/pull/3789\r\ndepends_on('py-typing', when='@1.6.1', type=('build', 'run'))\r\ndepends_on('py-typing', when='@1.6.2:^python@2.7:3.4',\r\n           type=('build', 'run'))\r\n```\r\n\r\nAnd add `version('1.6.2', 'a5f613e2b807c1f8c6cdd985a3d909f1')`, but I'm not sure what's going on with 1 and 2 (why `websupport` is gone now and how things move from `sphinx` to `sphinxcontrib`)...",
    "user": "svenevs",
    "url": "https://api.github.com/repos/spack/spack/issues/4845",
    "updated_at": "2017-07-23 14:44:13",
    "created_at": "2017-07-21 13:53:15",
    "closed_at": "2017-07-23 14:44:13",
    "state": "closed",
    "title": "is py-sphinx being treated correctly?",
    "number": 4845,
    "milestone": null,
    "labels": [],
    "id": 244675637,
    "html_url": "https://github.com/spack/spack/issues/4845",
    "assignees": [],
    "comments": 3
}