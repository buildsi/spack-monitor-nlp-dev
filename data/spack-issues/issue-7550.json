{
    "body": "In order to minimize unnecessary duplication and solve other logistical issues with certain package combinations, we (Fermilab, as packagers / distributors and software providers for the HEP community) need to be able to have a package which is built with a particular compiler / flag combination and/or dependencies but which does not confer those dependencies on packages which depend upon it. Examples would be executable-only packages (compilers themselves, or code generators such as XST), or C-only libraries such as FFTW or SQLite. A GCC-7.3/C++17 package which uses / links against FFTW can happily do so, even when FFTW was built with the native GCC, and both the concretization / build procedure and module activation system should be able to deal with this.\r\n\r\nRelated: we also need to be able to specify \"NULL\" packages ie. neither needing nor depending on a compiler (e.g. data-only packages), binary-only packages (third-party pre-compiled packages for deployment) and packages with runtime dependency specifications but no source to build (\"umbrella\" packages).\r\n\r\nHave I misread the documentation, and any or all of this is already possible with suitable configuration?",
    "user": "chissg",
    "url": "https://api.github.com/repos/spack/spack/issues/7550",
    "updated_at": "2021-04-29 16:59:22",
    "created_at": "2018-03-21 20:47:00",
    "closed_at": "None",
    "state": "open",
    "title": "Feature request: allow specified relaxation of compiler dependency rules for build and runtime",
    "number": 7550,
    "milestone": null,
    "labels": [
        "feature",
        "compilers"
    ],
    "id": 307411868,
    "html_url": "https://github.com/spack/spack/issues/7550",
    "assignees": [],
    "comments": 9
}