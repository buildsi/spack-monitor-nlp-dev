{
    "body": "Hi all,\r\n\r\nthe spack documentation states that installing a Python package in the site-packages directory of the Python installation directory should be possible:\r\n\r\n> Spack\u2019s installation model assumes that each package will live in its own install prefix. However, certain packages are typically installed within the directory hierarchy of other packages. For example, modules in interpreted languages like Python are typically installed in the $prefix/lib/python-2.7/site-packages directory.\r\n> \r\n> Spack has support for this type of installation as well. In Spack, a package that can live inside the prefix of another package is called an extension. Suppose you have Python installed like so:\r\n\r\nHow can this be done ? I would like to avoid having separate installation directories for Python packages. Further more I would like to avoid having module files for Python packages. If a user load a Python module, he expects to have access to all Python packages within that installation without having to load another module.\r\n\r\nWhen I try to install any Python package, it creates a separate installation directory, creates a module file that sets PYTHONPATH.\r\n\r\nBest regards\r\n\r\nSam",
    "user": "samfux84",
    "url": "https://api.github.com/repos/spack/spack/issues/4311",
    "updated_at": "2017-05-23 05:33:03",
    "created_at": "2017-05-22 11:25:18",
    "closed_at": "2017-05-23 05:33:03",
    "state": "closed",
    "title": "How to install a Python package in the site-packages directory instead of separate prefix ?",
    "number": 4311,
    "milestone": null,
    "labels": [
        "python",
        "extensions"
    ],
    "id": 230365025,
    "html_url": "https://github.com/spack/spack/issues/4311",
    "assignees": [],
    "comments": 4
}