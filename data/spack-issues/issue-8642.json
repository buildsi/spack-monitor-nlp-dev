{
    "body": "Hi,\r\n\r\nto use (a sequential version of) the MKL with R when building it with GCC (and GFortran), it seems necessary to link to three shared MKL libraries: mkl_gf_lp64, mkl_core and mkl_sequential (see https://cran.r-project.org/doc/manuals/r-release/R-admin.html#MKL and https://software.intel.com/en-us/articles/using-intel-mkl-with-r para. B).\r\nThe intel-mkl package in Spack does expose the latter two, but not the first (mkl_gf_lp64). Instead, it only provides mkl_intel_lp64 (or mkl_intel_ilp64 when requesting the ilp64 variant). The difference seems to be relevant when GFortran is involved in the build process, see https://software.intel.com/en-us/forums/intel-math-kernel-library/topic/558132.\r\nUnfortunately, this does not raise any immediate (fatal) errors (only some hints) during compile time, but the resulting R installation is not linking to the MKL, falling back to the internal BLAS/LAPACK implementation instead:\r\n\r\nCurrent spack behavior (selected/shortened output):\r\n\r\n```\r\n$ spack install -v r@3.5.0 +X +external-lapack ^intel-mkl\r\n==> Installing r\r\n==> Executing phase: 'configure'\r\n==> '/path/to/configure' '--prefix=/path/to/gcc/r' '--libdir=/path/to/rlib' '--enable-R-shlib' '--enable-BLAS-shlib' '--enable-R-framework=no' '--with-tcl-config=/path/to/tclConfig.sh' '--with-tk-config=/path/to/tkConfig.sh' '--with-blas=/path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_intel_lp64.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_sequential.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_core.so /usr/lib64/libpthread.so /usr/lib64/libm.so /usr/lib64/libdl.so' '--with-lapack' '--with-x'\r\n...\r\nchecking for dgemm_ in /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_intel_lp64.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_sequential.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_core.so /usr/lib64/libpthread.so /usr/lib64/libm.so /usr/lib64/libdl.so... yes\r\nchecking whether double complex BLAS can be used... no\r\nchecking iconv.h usability... yes\r\n...\r\nR is now configured for x86_64-pc-linux-gnu\r\nExternal libraries:        readline, curl\r\nOptions enabled:           shared R library, shared BLAS, R profiling\r\n```\r\n\r\nand calling sessionInfo() in R:\r\n```\r\n> sessionInfo()\r\nBLAS: /path/to/r/rlib/R/lib/libRblas.so\r\nLAPACK: /path/to/r/rlib/R/lib/libRlapack.so\r\n```\r\n\r\nA hacky patch to the R package\r\n\r\n```python\r\n        if '+external-lapack' in spec:\r\n            if 'intel-mkl' in spec:\r\n                config_args.extend([\r\n                    '--with-blas={0}{1} {0}{2} {0}{3}'.format(spec['intel-mkl'].prefix.compilers_and_libraries.linux.mkl.lib.intel64, '/libmkl_gf_lp64.so', '/libmkl_core.so', '/libmkl_sequential.so'),\r\n                    '--with-lapack'\r\n                ])\r\n\r\n            else:\r\n                config_args.extend([\r\n                    '--with-blas={0}'.format(spec['blas'].libs),\r\n                    '--with-lapack'\r\n                ])\r\n```\r\n\r\nleads to:\r\n```\r\n$ spack install -v r@3.5.0 +X +external-lapack ^intel-mkl\r\n==> Installing r\r\n==> Executing phase: 'configure'\r\n==> '/path/to/configure' '--prefix=/path/to/gcc/r' '--libdir=/path/to/rlib' '--enable-R-shlib' '--enable-BLAS-shlib' '--enable-R-framework=no' '--with-tcl-config=/path/to/tclConfig.sh' '--with-tk-config=/path/to/tkConfig.sh' '--with-blas=/path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_gf_lp64.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_core.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_sequential.so' '--with-lapack' '--with-x'\r\n...\r\nchecking for dgemm_ in /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_gf_lp64.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_core.so /path/to/mkl/compilers_and_libraries/linux/mkl/lib/intel64/libmkl_sequential.so... yes\r\nchecking whether double complex BLAS can be used... yes\r\nchecking whether the BLAS is complete... yes\r\nchecking for dpstrf_... no\r\nchecking for dpstrf_ in -llapack... no\r\nchecking iconv.h usability... yes\r\n...\r\nR is now configured for x86_64-pc-linux-gnu\r\nExternal libraries:        readline, BLAS(generic), curl\r\nOptions enabled:           shared R library, shared BLAS, R profiling\r\n```\r\n\r\nand\r\n\r\n```\r\n> sessionInfo()\r\n`BLAS/LAPACK: /path/to/mkl/compilers_and_libraries_YEAR.X.XXX/linux/mkl/lib/intel64_lin/libmkl_gf_lp64.so\r\n```\r\n\r\nI think this should probably be handled by the intel-mkl package (possibly generally providing mkl_gf_lp64 instead of mkl_intel_lp64 when GCC/GFortran are used?), but if this breaks other packages/configurations, an R specific solution might be preferred.\r\n\r\nI'm happy to provide additional input/information if needed.\r\n\r\nThanks,\r\nJohannes\r\n",
    "user": "javdg",
    "url": "https://api.github.com/repos/spack/spack/issues/8642",
    "updated_at": "2019-07-12 03:22:38",
    "created_at": "2018-07-04 08:05:54",
    "closed_at": "2019-07-12 03:22:38",
    "state": "closed",
    "title": "Linking R with MKL does currently not work (needs mkl_gf_lp64)",
    "number": 8642,
    "milestone": null,
    "labels": [
        "blas-lapack-scalapack",
        "intel"
    ],
    "id": 338171030,
    "html_url": "https://github.com/spack/spack/issues/8642",
    "assignees": [],
    "comments": 4
}