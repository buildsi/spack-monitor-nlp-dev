{
    "body": "From a build system point of view, this was a relatively tame release. However, the xextproto issue from <=6.08 is back in this release.\r\n\r\nHere I'm doing the minimal step of enabling the xextproto include path hack for >=6.22. Alternate options are to...\r\n\r\n- Enable it for every ROOT version. It does not really harm, even though it's not always necessary.\r\n- Cross-check if current version of spack can live without the evil unsetting of the SPACK_INCLUDE_DIRS environment variable altogether, freeing us from all those include path hacks.\r\n    * AFAIK, spack's usage of -I / -isystem has changed recently, and it was the original cause of all those include path problems. So with recent spack versions, the root package's convoluted manual include path setup may not be necessary anymore.\r\n    * To check this, I need to know in which circumstances those include paths problems would manifest before those tricks were introduced. I think @gartung was the author of the original bugfix that unset SPACK_INCLUDE_DIRS, so he might remember a failing test scenario that I can exercise.",
    "user": "HadrienG2",
    "url": "https://api.github.com/repos/spack/spack/issues/17459",
    "updated_at": "2020-07-27 08:58:58",
    "created_at": "2020-07-10 13:43:56",
    "closed_at": "2020-07-26 15:08:54",
    "state": "closed",
    "title": "[root] Add version 6.22",
    "number": 17459,
    "milestone": null,
    "labels": [
        "new-version"
    ],
    "id": 654793496,
    "html_url": "https://github.com/spack/spack/pull/17459",
    "assignees": [],
    "comments": 5
}