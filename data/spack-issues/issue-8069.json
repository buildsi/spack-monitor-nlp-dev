{
    "body": "Work in progress: see below\r\n\r\n~To actually enable the c++ implementation, these flags need to be set:\r\nPROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp\r\nPROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION_VERSION=2\r\n[Reason, I think](https://github.com/google/protobuf/blob/ed4321d1cb33199984118d801956822842771e7e/python/google/protobuf/internal/api_implementation.py#L69)~\r\nEDIT: nope. The c++ stuff gets picked up or not [here](https://github.com/google/protobuf/blob/ed4321d1cb33199984118d801956822842771e7e/python/google/protobuf/internal/api_implementation.py#L40)\r\n\r\n~However, I can't figure out how to do that. I'm not seeing any way to set additional runtime environment variables in the docs (I might have missed them). Even if I found those, if I `spack activate py-protobuf` and then `module load python-[...]` but don't `module load py-protobuf-[...]`, that doesn't seem like it will pick up the flags?~",
    "user": "mcneish1",
    "url": "https://api.github.com/repos/spack/spack/issues/8069",
    "updated_at": "2018-05-10 16:06:08",
    "created_at": "2018-05-09 00:45:55",
    "closed_at": "2018-05-10 01:52:39",
    "state": "closed",
    "title": "Add 3.5.2; Add optional cpp implementation enable for py-protobuf",
    "number": 8069,
    "milestone": null,
    "labels": [
        "new-version"
    ],
    "id": 321393373,
    "html_url": "https://github.com/spack/spack/pull/8069",
    "assignees": [],
    "comments": 6
}