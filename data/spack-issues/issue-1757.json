{
    "body": "Hello friends!\n\nSpack has trouble recognizing this url as a tar.gz file: \n`http://www.ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2.tgz.v2.0.5`\n\nIt says it \"cannot deduce\" the filetype. That phrase led me here: [lib/spack/spack/url.py:164](https://github.com/LLNL/spack/blob/f59653ac2c9b20ec5954d90fda019c7652644ac9/lib/spack/spack/url.py#L164)\n\nIt looks like `url.download_file_extension` enforces some sanity around the extension. My question is, what is my best bet for dealing with packages that have uncivilized extensions like \".tgz.v2.0.5\"? Is it appropriate to look for `tgz` _near_ the end of the path? That's sortof a weird criterion...\n\nAnyhow, feedback is welcome. Here is a reproducer package:\n\n``` python\nfrom spack import *\n\n\nclass WgribCrazyUrl(Package):\n    \"\"\"WGRIB is a program to manipulate, inventory and decode GRIB files\"\"\"\n\n    homepage = \"http://www.cpc.ncep.noaa.gov/products/wesley/wgrib.html\"\n    url      = \"http://www.ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2.tgz.v2.0.5\"\n\n    version('2.0.5', '84029e969b5b37e1ba791d0572895133')\n\n    parallel = False\n\n    def install(self, spec, prefix):\n        gmake(\"FC=fcc CC=cc\")\n\n        install_tree('bin', prefix.bin)\n        install_tree('lib', prefix.lib)\n        install_tree('include', prefix.include)\n        install_tree('man/man1', prefix.share_man1)\n\n        install('wgrib2/wgrib2', prefix.bin)\n```\n",
    "user": "robertdfrench",
    "url": "https://api.github.com/repos/spack/spack/issues/1757",
    "updated_at": "2016-10-06 05:45:32",
    "created_at": "2016-09-12 23:10:15",
    "closed_at": "2016-10-06 05:45:02",
    "state": "closed",
    "title": "Wild and Crazy URLs",
    "number": 1757,
    "milestone": null,
    "labels": [
        "bug",
        "fetching"
    ],
    "id": 176507995,
    "html_url": "https://github.com/spack/spack/issues/1757",
    "assignees": [],
    "comments": 3
}