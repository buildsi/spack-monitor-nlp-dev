{
    "body": "This PR was necessity to make pArpack work on the cluster instead of throwing an error\r\n```\r\nAt line 68 of file <blabla>/arpack-ng-3.5.0/PARPACK/UTIL/MPI/pdvout.f\r\nFortran runtime error: Bad unit number in statement\r\n```\r\n\r\nTheoretically one can control Fortran COMMON variables from C/C++,\r\nbut I was NOT successfull with\r\n```\r\nextern \"C\" {\r\n  extern struct {\r\n     int logfil, ndigit,....;\r\n  } debug_;\r\n}\r\nint main (int argc, char *argv[])\r\n  {\r\n    debug_.logfil=6;\r\n  }\r\n```\r\nas it gave `EXC_BAD_ACCESS` and debugger also complained that\r\n```\r\nMultiple external symbols found for 'debug_'\r\n```\r\nprobably because both `libparpack.2.dylib` and `libarpack.2.dylib`\r\nwill contain the `_debug_` symbol.\r\n\r\nAs far as I understand Fortran COMMON are NOT initialized by default and one has\r\nto use a BLOCK DATA Subprogram to initialize them.\r\n\r\nThe complete discussion and hints on other ways to solve this problem is here https://github.com/opencollab/arpack-ng/issues/82#issuecomment-378263361",
    "user": "davydden",
    "url": "https://api.github.com/repos/spack/spack/issues/7662",
    "updated_at": "2019-05-02 07:05:43",
    "created_at": "2018-04-03 09:17:20",
    "closed_at": "2019-05-02 07:05:43",
    "state": "closed",
    "title": "arpack: disable terminal output",
    "number": 7662,
    "milestone": null,
    "labels": [
        "don't-merge-yet",
        "patch",
        "update-package"
    ],
    "id": 310755956,
    "html_url": "https://github.com/spack/spack/pull/7662",
    "assignees": [],
    "comments": 1
}