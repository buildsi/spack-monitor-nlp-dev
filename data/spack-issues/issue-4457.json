{
    "body": "Since I make changes to our Spack configuration files so frequently, I like to track them with git and store them on our GitLab server. Up until now, I've stored my configuration files in `~/.spack`. However, we are getting to the point where multiple sys admins need to maintain the same site installation of Spack. Each one of these sys admins would have to maintain an identical set of configuration files in their home directories. I want to move our configuration files to `$SPACK_ROOT/etc/spack` to make it easier to ensure that everyone is on the same page. The problem is that this directory is within the Spack git repo and contains other directories. I don't want any of my configuration files to be tracked by Spack's git repo, and I don't want any of Spack's files to be tracked by my configuration git repo. Can anyone think of a way to do this? The only idea I've come up with would be to move the `$SPACK_ROOT/etc/spack` configuration hierarchy to `$SPACK_ROOT/etc/spack/site` so that we can ignore everything in that directory in Spack's `.gitignore`.",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/4457",
    "updated_at": "2017-08-05 18:18:20",
    "created_at": "2017-06-08 19:42:57",
    "closed_at": "2017-08-05 18:18:20",
    "state": "closed",
    "title": "Tracking configuration files with git",
    "number": 4457,
    "milestone": null,
    "labels": [
        "configuration",
        "git"
    ],
    "id": 234635296,
    "html_url": "https://github.com/spack/spack/issues/4457",
    "assignees": [],
    "comments": 5
}