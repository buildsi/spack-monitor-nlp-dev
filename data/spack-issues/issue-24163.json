{
    "body": "On macOS, the system git returns:\r\n```console\r\n$ git --version\r\ngit version 2.24.3 (Apple Git-128)\r\n```\r\nBecause of this, builds that fetch from git can fail with:\r\n```console\r\n$ spack --debug install libtool@develop\r\n...\r\nTraceback (most recent call last):\r\n  File \"/Users/Adam/spack/lib/spack/spack/build_environment.py\", line 921, in _setup_pkg_and_run\r\n    return_value = function(pkg, kwargs)\r\n  File \"/Users/Adam/spack/lib/spack/spack/installer.py\", line 1691, in build_process\r\n    pkg.do_patch()\r\n  File \"/Users/Adam/spack/lib/spack/spack/package.py\", line 1408, in do_patch\r\n    self.do_stage()\r\n  File \"/Users/Adam/spack/lib/spack/spack/package.py\", line 1393, in do_stage\r\n    self.do_fetch(mirror_only)\r\n  File \"/Users/Adam/spack/lib/spack/spack/package.py\", line 1372, in do_fetch\r\n    self.stage.fetch(mirror_only, err_msg=err_msg)\r\n  File \"/Users/Adam/spack/lib/spack/spack/util/pattern.py\", line 23, in __call__\r\n    return [getattr(item, self.name)(*args, **kwargs)\r\n  File \"/Users/Adam/spack/lib/spack/spack/util/pattern.py\", line 23, in <listcomp>\r\n    return [getattr(item, self.name)(*args, **kwargs)\r\n  File \"/Users/Adam/spack/lib/spack/spack/stage.py\", line 490, in fetch\r\n    self.fetcher.fetch()\r\n  File \"/Users/Adam/spack/lib/spack/spack/fetch_strategy.py\", line 73, in wrapper\r\n    return fun(self, *args, **kwargs)\r\n  File \"/Users/Adam/spack/lib/spack/spack/fetch_strategy.py\", line 838, in fetch\r\n    git = self.git\r\n  File \"/Users/Adam/spack/lib/spack/spack/fetch_strategy.py\", line 793, in git\r\n    if self.git_version >= Version('1.7.2'):\r\n  File \"/Users/Adam/spack/lib/spack/spack/fetch_strategy.py\", line 784, in git_version\r\n    return Version(vstring)\r\n  File \"/Users/Adam/spack/lib/spack/spack/version.py\", line 165, in __init__\r\n    raise ValueError(\"Bad characters in version string: %s\" % string)\r\nValueError: Bad characters in version string: 2.24.3 (Apple Git-128)\r\n```\r\nThis PR uses the same regex we use in our `git` package for external package detection. I don't think there's an easy way to use the `determine_version` function directly and avoid circular imports, but I haven't tried.",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/24163",
    "updated_at": "2021-06-06 07:48:31",
    "created_at": "2021-06-05 22:05:40",
    "closed_at": "2021-06-05 23:30:28",
    "state": "closed",
    "title": "Fix git_version on macOS",
    "number": 24163,
    "milestone": null,
    "labels": [
        "macOS",
        "fetching",
        "git",
        "bugfix"
    ],
    "id": 912469249,
    "html_url": "https://github.com/spack/spack/pull/24163",
    "assignees": [],
    "comments": 0
}