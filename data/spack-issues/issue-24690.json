{
    "body": "With [`sphinx.ext.autodoc`](https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html), Sphinx will silently ignore target references that it can't resolve. Sphinx has a [nitpicky mode](https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-nitpicky) that instead raises a warning about these broken references. After enabling this, I found hundreds of broken references.\r\n\r\nWhat this PR tries to do:\r\n* Enable nitpicky mode to prevent broken references via documentation tests\r\n* Fix existing broken references\r\n* Add [`sphinx.ext.intersphinx`](https://www.sphinx-doc.org/en/master/usage/extensions/intersphinx.html) to resolve builtin types\r\n\r\nWhat this PR does not try to do:\r\n* There may still be many incorrectly documented functions. These can be fixed in a separate PR. Maybe when we drop Python 2 support and go crazy with mypy?\r\n* There should be (almost) no functional changes. Some classes were added to `__all__` so that base classes could be resolved correctly.\r\n\r\nThis is a follow-up to #1576 where we first added documentation testing. This PR greatly expands Sphinx's ability to detect problems with the docs, specifically in the API docs.",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/24690",
    "updated_at": "2021-07-16 15:31:28",
    "created_at": "2021-07-03 22:20:56",
    "closed_at": "2021-07-16 15:30:57",
    "state": "closed",
    "title": "API Docs: fix broken reference targets",
    "number": 24690,
    "milestone": null,
    "labels": [
        "compilers",
        "documentation",
        "modules",
        "fetching",
        "build-environment",
        "locking",
        "tests",
        "commands",
        "environments",
        "directives",
        "binary-packages",
        "utilities",
        "stage",
        "build-systems",
        "architecture"
    ],
    "id": 936335786,
    "html_url": "https://github.com/spack/spack/pull/24690",
    "assignees": [],
    "comments": 20
}