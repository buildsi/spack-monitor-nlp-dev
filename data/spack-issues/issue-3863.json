{
    "body": "I find that `spack spec` is very slow for complex package dependencies.\r\n\r\nTo ensure that I get a self-consistent set of installed packages, I create an \"umbrella package\" that lists all my desired package as dependencies, and then install this package (see `https://github.com/eschnett/spack/tree/eschnett/cactusext`). This also helps a lot with installing packages on MacOS, where one semi-randomly has to choose either `gcc` or `clang` as compiler to make packages build, and I don't want to list these choices on every command line.\r\n\r\nA simple `time spack spec cactusext` takes a long time:\r\n```\r\nreal\t1m45.546s\r\nuser\t1m42.092s\r\nsys\t0m2.347s\r\n```\r\nThis concretizes 127 packages; a lot of these are Python packages pulled in automatically as dependencies for the visualization package `py-yt`, as well as other low-level packages pulled in as dependencies of `lmod`.\r\n\r\nThis issue was raised earlier in #676, which is now closed.\r\n\r\nI understand that it can be, in principle, a very difficult problem to find a matching set of versions and variants. However, I strongly suspect that this isn't the case here -- here, mostly dependency packages need to be added, and certain variants enabled. The only backtracking I see would come from `openssl` where the most recent version isn't allowed by certain other packages.",
    "user": "eschnett",
    "url": "https://api.github.com/repos/spack/spack/issues/3863",
    "updated_at": "2017-04-19 15:39:03",
    "created_at": "2017-04-17 14:11:32",
    "closed_at": "2017-04-19 15:39:03",
    "state": "closed",
    "title": "`spack spec` is very slow",
    "number": 3863,
    "milestone": null,
    "labels": [
        "duplicate",
        "concretization",
        "performance"
    ],
    "id": 222139912,
    "html_url": "https://github.com/spack/spack/issues/3863",
    "assignees": [],
    "comments": 3
}