{
    "body": "Many Spack packages raise exceptions that check for conditions on the variants beyond what the standard concretizer is capable of.  In that case, what exception should the package raise?  I see a lot of variant below.\r\n\r\nMore generally, what are the guidelines for what exceptions should be raised under what conditions?\r\n\r\n```\r\n$ grep raise */package.py\r\nabinit/package.py:        :raises RuntimeError: in case of inconsistencies\r\nabinit/package.py:            raise RuntimeError(error.format(variant='scalapack'))\r\nabinit/package.py:            raise RuntimeError(error.format(variant='elpa'))\r\nadios/package.py:        :raises RuntimeError: in case of inconsistencies\r\nadios/package.py:            raise RuntimeError(msg)\r\nadol-c/package.py:                raise InstallError(\r\nboost/package.py:            raise RuntimeError(\"At least one of {singlethreaded, \" +\r\nboost/package.py:                raise RuntimeError(\"Cannot build both single and \" +\r\ncddlib/package.py:        raise InstallError(\"Unsupported version %s\" % str(version))\r\ncgal/package.py:            # other build type will raise an error at configure time\r\ncharm/package.py:            raise InstallError(\r\ncharm/package.py:            raise InstallError(\r\ncharm/package.py:                raise InstallError(\"Cannot combine +smp with +multicore\")\r\ncharm/package.py:                raise InstallError(\r\ncmake/package.py:        :raises RuntimeError: in case of inconsistencies\r\ncmake/package.py:            raise RuntimeError(msg)\r\ncmor/package.py:            raise RuntimeError(msg)\r\nconduit/package.py:                raise RuntimeError(msg)\r\ndealii/package.py:                raise RuntimeError('The ' + p + ' variant requires +mpi')\r\nemacs/package.py:                raise InstallError(\"toolkit must be in (gtk, athena), not %s\" %\r\nenvironment-modules/package.py:            raise InstallError('Failed to locate ' + tcl_config_name)\r\nespresso/package.py:            raise RuntimeError(error.format(variant='scalapack'))\r\nespresso/package.py:            raise RuntimeError(error.format(variant='elpa'))\r\nfftw/package.py:                    raise InstallError(\"Apple's clang does not support OpenMP\")\r\nfixesproto/package.py:    issues raised by application interaction with core protocol mechanisms\r\nfoam-extend/package.py:            raise RuntimeError('{0} is not a supported compiler \\\r\nfoam-extend/package.py:                raise RuntimeError('OS, compiler combination not\\\r\nfoam-extend/package.py:                raise RuntimeError('OS, compiler combination not\\\r\nfoam-extend/package.py:            raise RuntimeError('{0} {1} is not a \\\r\ngraphviz/package.py:                raise SpackException(\r\nh5hut/package.py:            raise RuntimeError(\r\nhdf5-blosc/package.py:                raise RuntimeError(\"HDF5 Blosc plugin check failed\")\r\nhdf5/package.py:        :raises RuntimeError: in case of inconsistencies\r\nhdf5/package.py:            raise RuntimeError(msg)\r\nhdf5/package.py:            raise RuntimeError(msg)\r\nhdf5/package.py:                raise RuntimeError(\"HDF5 install check failed\")\r\nintel-mkl/package.py:            raise InstallError(\"No MPI found for scalapack\")\r\nintel-parallel-studio/package.py:            raise InstallError(\"No MPI found for scalapack\")\r\njulia/package.py:                raise InstallError(\r\nlikwid/package.py:            raise RuntimeError('{0} is not a supported compiler \\\r\nllvm/package.py:                raise SpackException(\r\nllvm/package.py:                raise SpackException(\r\nmetis/package.py:            raise InstallError('METIS@:4 does not support the following '\r\nmfem/package.py:            raise InstallError('mfem+mpi must be built with +hypre ' +\r\nmfem/package.py:            raise InstallError('mfem+suite-sparse must be built with ' +\r\nmfem/package.py:            raise InstallError('To work around CMake bug with clang, must ' +\r\nmfem/package.py:            raise InstallError('MFEM does not support SuperLU_DIST for ' +\r\nmfem/package.py:            raise InstallError('MFEM does not support NetCDF for versions' +\r\nmpich/package.py:            raise InstallError(\r\nmumps/package.py:            raise RuntimeError(\r\nmvapich2/package.py:            raise RuntimeError(\" %s : 'slurm' cannot be activated \\\r\nmvapich2/package.py:            raise RuntimeError('network variants are mutually exclusive \\\r\nmvapich2/package.py:            raise InstallError('Mvapich2 requires both C and Fortran ',\r\nncl/package.py:            raise InstallError('NCL package requires both '\r\nncl/package.py:                    raise InstallError('Failed to delete file %s: %s' % (\r\nnetcdf/package.py:            raise TypeError('NetCDF variant values max[dims|vars] must be '\r\nnetcdf/package.py:            raise RuntimeError('Invalid spec. Package netcdf requires '\r\nopenblas/package.py:            raise InstallError(\r\nopenblas/package.py:            raise InstallError(\r\nopencv/package.py:                raise InstallError('Cannot find libpython')\r\nopencv/package.py:                raise InstallError('Cannot find python include directory')\r\nopenmpi/package.py:            raise InstallError(\r\npetsc/package.py:                raise RuntimeError('\\n'.join(errors))\r\npgi/package.py:            raise RuntimeError(msg)\r\npy-matplotlib/package.py:                raise InstallError('Could not find matplotlibrc')\r\npython/package.py:                raise ValueError(\r\npython/package.py:                    raise RuntimeError('Cannot locate python executable')\r\npython/package.py:                raise RuntimeError('Cannot locate python executable')\r\nr-praise/package.py:class RPraise(RPackage):\r\nr-praise/package.py:    \"\"\"Build friendly R packages that praise their users if they have done\r\nr-praise/package.py:    homepage = \"https://github.com/gaborcsardi/praise\"\r\nr-praise/package.py:    url      = \"https://cran.r-project.org/src/contrib/praise_1.0.0.tar.gz\"\r\nr-testthat/package.py:    depends_on('r-praise', type=('build', 'run'))\r\nspectrum-mpi/package.py:        raise InstallError('IBM MPI is not installable; it is vendor supplied')\r\nsundials/package.py:                raise RuntimeError(msg)\r\nsuperlu-mt/package.py:            raise RuntimeError(msg)\r\nsuperlu-mt/package.py:            raise RuntimeError(msg)\r\ntbb/package.py:            raise InstallError('Only TBB 4.4.4 and above build with GCC 6.1!')\r\ntrilinos/package.py:            raise RuntimeError('The superlu-dist variant can only be used' +\r\ntrilinos/package.py:            raise RuntimeError('The superlu-dist and superlu variant' +\r\nturbomole/package.py:            raise InstallError('Can not have both SMP and MPI enabled in the '\r\nveclibfort/package.py:            raise InstallError('vecLibFort can be installed on macOS only')\r\nvim/package.py:                    raise InstallError(\r\nvim/package.py:                    raise InstallError(\r\nzoltan/package.py:            raise RuntimeError(('Cannot build Zoltan v{0} with +fortran and '\r\n```\r\n",
    "user": "citibeth",
    "url": "https://api.github.com/repos/spack/spack/issues/3121",
    "updated_at": "2018-04-14 10:28:13",
    "created_at": "2017-02-10 16:14:14",
    "closed_at": "None",
    "state": "open",
    "title": "What Exceptions Should Spack Packages Raise?",
    "number": 3121,
    "milestone": null,
    "labels": [
        "documentation",
        "impact-low"
    ],
    "id": 206837354,
    "html_url": "https://github.com/spack/spack/issues/3121",
    "assignees": [
        "alalazo"
    ],
    "comments": 4
}