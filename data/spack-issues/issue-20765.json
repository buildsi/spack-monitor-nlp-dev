{
    "body": "This is a reboot of #4545 \r\n\r\nSome Python packages depend on non-Python dependencies. For example, `py-pillow` depends on several imaging libraries. When building these Python packages, Python uses whatever compiler it was built with. Since we filter the compiler wrappers out of the Python installation, this means that we are not using Spack's compiler wrappers when installing Python packages, and hence we are not RPATHing dependencies. Even worse, some packages like `py-torch` will use a mix of `CC` and the compiler Python was built with, meaning that some parts of the build can find dependencies while others can't.\r\n\r\nPreviously, we were building with:\r\n```\r\n$ python setup.py build\r\n$ python setup.py install --prefix=...\r\n```\r\nNow, we build with:\r\n```\r\n$ python setup.py build_py\r\n$ python setup.py build_ext --parallel=... --include-dirs=... --library-dirs=... --rpath=...\r\n$ python setup.py build_clib\r\n$ python setup.py build_scripts\r\n$ python setup.py install --prefix=...\r\n```\r\n@robertu94 @mjwoods @trws @skosukhin ",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/20765",
    "updated_at": "2021-10-26 01:17:20",
    "created_at": "2021-01-09 18:10:49",
    "closed_at": "2021-01-27 18:20:37",
    "state": "closed",
    "title": "PythonPackage: add RPATHs, parallel builds",
    "number": 20765,
    "milestone": null,
    "labels": [
        "python",
        "rpath",
        "build-systems"
    ],
    "id": 782658190,
    "html_url": "https://github.com/spack/spack/pull/20765",
    "assignees": [
        "scheibelp"
    ],
    "comments": 20
}