{
    "body": "This PR applies a trivial refactoring technique (extract a method from a class) to `spec.py`. The aim is to prepare the stage for bigger refactoring later on, in case they are needed, and give a more modular structure to the code.\r\n\r\nThe rationale is to extract from the `Spec` class methods that don't modify `self` and return a value as a result of the call. In certain cases, like `concretized`, changing the code from:\r\n```python\r\nspec = ...\r\ns = spec.concretized()  # Returns a new object\r\nspec.concretize()  # Modifies self\r\n```\r\nto:\r\n```python\r\nspec = ...\r\ns = concretized(spec)  # Returns a new object\r\nspec.concretize()  # Modifies self\r\n```\r\nmimics what built-in do for `l.sort()` vs. `s = sorted(l)`.\r\n\r\nIn principle extracting methods this way should ease mocking in unit tests, even though - to be fair - it's not probably the case for the four methods extracted here.\r\n\r\nThe long-term idea is that, whenever we feel like time has come to split `spec.py` into smaller pieces, it should be easy to re-organize the code as a sub-package:\r\n```console\r\nspec\r\n\u251c\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 exceptions.py\r\n\u251c\u2500\u2500 format.py # This 'import .spec' and contains `tree`, `colorized`, maybe `format`\r\n\u2514\u2500\u2500 spec.py  # Core classes, like Spec.\r\n\u2514\u2500\u2500 ...\r\n```\r\nand still maintain the same interface to the clients that `import spack.spec`.\r\n\r\n##### Modifications in details\r\n- [x] removed method `Spec.get_dependency` as it was used only one time in another method of `Spec`\r\n- [x] removed method `Spec._install_status` for the same reason as above\r\n- [x] made `Spec.concretized` a free-standing function\r\n- [x] made `Spec.constrained` a free-standing function\r\n- [x] made `Spec.colorized` a free-standing function\r\n- [x] made `Spec.tree` a free-standing function\r\n- [x] extended docstrings in the process\r\n",
    "user": "alalazo",
    "url": "https://api.github.com/repos/spack/spack/issues/5264",
    "updated_at": "2018-08-14 14:09:54",
    "created_at": "2017-09-01 17:17:48",
    "closed_at": "2018-08-14 14:09:51",
    "state": "closed",
    "title": "Minor refactoring of spec.py",
    "number": 5264,
    "milestone": null,
    "labels": [
        "refactoring"
    ],
    "id": 254702292,
    "html_url": "https://github.com/spack/spack/pull/5264",
    "assignees": [],
    "comments": 5
}