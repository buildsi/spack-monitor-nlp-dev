{
    "body": "I've noticed some unexpected behavior if an environment (or rather its view) contains two packages that have file conflicts, but do not conflict themselves. More specifically, `metis` and `scotch^+metis` both provide `include/metis.h` but do not conflict otherwise - it's perfectly possible  to add both to an environment and install it, without Spack complaining at all.\r\n\r\nHowever, the files are _not_ directly compatible and while METIS' `metis.h` should be useable with `scotchmetis` (that's the recommended way by Scotch), the converse is not true and SCOTCH's `metis.h` does not contain all functions METIS offers, rendering METIS impaired.\r\n\r\nAdditionally, if you remove `scotch` from the environment afterwards, the conflicting files will be deleted and any install command afterwards will error like this:\r\n```\r\n===> Error: /mypathtospack/var/spack/environments/myenv/.spack-env/include/metis.h is not a link tree!\r\n```\r\nThis seems to be a result of spack assuming that these files should exist if `metis` were installed properly. The situation is identical between `parmetis` and `spack` with their respective overlap.\r\n\r\nRepro:\r\n```\r\nspack env create myenv\r\nspack env activate myenv\r\nspack add metis parmetis scotch\r\nspack install\r\n```",
    "user": "ChrisTX",
    "url": "https://api.github.com/repos/spack/spack/issues/12482",
    "updated_at": "2019-08-20 19:31:00",
    "created_at": "2019-08-20 12:14:11",
    "closed_at": "None",
    "state": "open",
    "title": "File conflicts can occur in views if the conflicting packages do not cause concretization errors",
    "number": 12482,
    "milestone": null,
    "labels": [
        "bug",
        "impact-medium"
    ],
    "id": 482823828,
    "html_url": "https://github.com/spack/spack/issues/12482",
    "assignees": [
        "scheibelp"
    ],
    "comments": 0
}