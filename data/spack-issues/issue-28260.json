{
    "body": "### Steps to reproduce\n\nAttempting to re-concretize an environment with the v0.17.1 clingo solver with\r\n\r\n```console\r\nspack concretize --reuse\r\n```\r\n\r\nfails at [`spack.solver.asp.SpackSolverSetup.define_variant_values`](https://github.com/spack/spack/blob/b23bd81cd9dbccb536778a9e7bd8a05954ce3300/lib/spack/spack/solver/asp.py#L1603) due to a type comparison error while sorting the [`variant_values_from_specs`](https://github.com/spack/spack/blob/b23bd81cd9dbccb536778a9e7bd8a05954ce3300/lib/spack/spack/solver/asp.py#L657) if an installed reuse candidate and new spec candidates have values that cannot be natively compared for the sort (eg, a `bool` and `str` value). Specifically, the [kokkos-kernels `eti` variant](https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/kokkos-kernels/package.py#L50-L61) seems to have both an `\"auto\"` (string type) value and apparently a `bool` value option (under some circumstances not clearly known to me) which cannot be directly compared natively with `obj.__lt__`\r\n\r\nAs a work-around, I've changed [`spack.solver.asp.SpackSolverSetup.define_variant_values`](https://github.com/spack/spack/blob/b23bd81cd9dbccb536778a9e7bd8a05954ce3300/lib/spack/spack/solver/asp.py#L1603) to sort only on the first element of the tuples in the set:\r\n\r\n```diff\r\ndiff --git a/lib/spack/spack/solver/asp.py b/lib/spack/spack/solver/asp.py\r\nindex 957f363960..d8e5c7e338 100644\r\n--- a/lib/spack/spack/solver/asp.py\r\n+++ b/lib/spack/spack/solver/asp.py\r\n@@ -1600,7 +1600,7 @@ def define_variant_values(self):\r\n         \"\"\"\r\n         # Tell the concretizer about possible values from specs we saw in\r\n         # spec_clauses()\r\n-        for pkg, variant, value in sorted(self.variant_values_from_specs):\r\n+        for pkg, variant, value in sorted(self.variant_values_from_specs, key=lambda x: x[0]):\r\n             self.gen.fact(fn.variant_possible_value(pkg, variant, value))\r\n \r\n     def _facts_from_concrete_spec(self, spec, possible):\r\n```\r\n\r\nthough I'm not sure if this is safe or appropriate. What is the purpose of using `sorted()` here and is it necessary for this set to be sorted in a specific way beyond the first two keys in each member tuple of `variant_values_from_specs`?\n\n### Error message\n\n```console\r\nspack -vd --stacktrace concretize --reuse -f\r\n```\r\n\r\n```console\r\n[PID=3602254] Traceback (most recent call last):\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/util/parallel.py\", line 53, in __call__\r\n    value = self.func(*args, **kwargs)\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/environment/environment.py\", line 2057, in _concretize_task\r\n    return _concretize_from_constraints(spec_constraints, tests, reuse)\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/environment/environment.py\", line 2035, in _concretize_from_constraints\r\n    return s.concretized(tests=tests, reuse=reuse)\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/spec.py\", line 2692, in concretized\r\n    clone.concretize(tests=tests, reuse=reuse)\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/spec.py\", line 2648, in concretize\r\n    self._new_concretize(tests, reuse=reuse)\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/spec.py\", line 2619, in _new_concretize\r\n    result = spack.solver.asp.solve([self], tests=tests, reuse=reuse)\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/solver/asp.py\", line 2054, in solve\r\n    setup, specs, dump, models, timers, stats, tests, reuse \r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/solver/asp.py\", line 552, in solve\r\n    solver_setup.setup(self, specs, tests=tests, reuse=reuse)\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/solver/asp.py\", line 1752, in setup\r\n    self.define_variant_values()\r\n  File \"/autofs/nccs-svm1_home2/belhorn/development/olcf-spack-environments/spack/lib/spack/spack/solver/asp.py\", line 1603, in define_variant_values\r\n    for pkg, variant, value in sorted(self.variant_values_from_specs):\r\nTypeError: '<' not supported between instances of 'str' and 'bool'\r\n```\r\n\n\n### Information on your system\n\n$ spack debug report\r\n* **Spack:** 0.17.1\r\n* **Python:** 3.6.8\r\n* **Platform:** linux-rhel8-zen2\r\n* **Concretizer:** clingo\n\n### General information\n\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\n- [X] I have searched the issues of this repo and believe this is not a duplicate\n- [X] I have run the failing commands in debug mode and reported the output",
    "user": "mpbelhorn",
    "url": "https://api.github.com/repos/spack/spack/issues/28260",
    "updated_at": "2022-02-17 07:50:50",
    "created_at": "2022-01-05 16:49:39",
    "closed_at": "2022-02-17 07:50:50",
    "state": "closed",
    "title": "ASP solver unable to sort variant_values_from_specs when variant can have both bool and str values",
    "number": 28260,
    "milestone": null,
    "labels": [
        "bug",
        "concretization",
        "impact-medium"
    ],
    "id": 1094549317,
    "html_url": "https://github.com/spack/spack/issues/28260",
    "assignees": [
        "tgamblin",
        "alalazo"
    ],
    "comments": 5
}