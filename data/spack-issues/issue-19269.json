{
    "body": "As mentioned on the [nvidia documentation page](https://developer.nvidia.com/cublas):\r\n\r\n> Using cuBLAS, applications automatically benefit from regular performance improvements and new GPU architectures. The cuBLAS library is included in both the NVIDIA HPC SDK and the CUDA Toolkit.\r\n\r\nSince CUDA provides cuBLAS, I think it might be worth explicitly adding this to the package file so it could be used as a virtual dependency.  The versions of cublas provided by cuda are taken from the 'Release Notes' section of the archived documentation here: https://docs.nvidia.com/cuda/archive/\r\n\r\nTo be honest I'm not sure if this PR is 'correct'. The documentation mentions virtual dependencies in the context of multiple packages providing the same dependency (e.g. MPI), but in this case it's one package providing multiple dependencies (since CUDA [contains a **lot** of individual components](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#cuda-major-component-versions)).\r\n\r\nActually this is a broader question: in situations like this, where the package you're defining is a toolkit comprising a lot of individual components, should you try to list all of the contained tools as providers?",
    "user": "RobertRosca",
    "url": "https://api.github.com/repos/spack/spack/issues/19269",
    "updated_at": "2022-03-02 23:02:19",
    "created_at": "2020-10-12 14:19:16",
    "closed_at": "None",
    "state": "open",
    "title": "Specify that cuda provides cublas",
    "number": 19269,
    "milestone": null,
    "labels": [
        "blas-lapack-scalapack",
        "virtual-dependencies",
        "cuda"
    ],
    "id": 719418678,
    "html_url": "https://github.com/spack/spack/pull/19269",
    "assignees": [],
    "comments": 12
}