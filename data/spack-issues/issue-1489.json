{
    "body": "I'm working on a CentOS Linux system that spack thinks is `macos.`  I can't seem to build most packages that I try -- possibly due to this misidentification:\n\n```\n% cat /etc/os-release \nNAME=\"CentOS Linux\"\nVERSION=\"7 (Core)\"\nID=\"centos\"\nID_LIKE=\"rhel fedora\"\nVERSION_ID=\"7\"\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:centos:centos:7\"\nHOME_URL=\"https://www.centos.org/\"\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\n\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\nREDHAT_SUPPORT_PRODUCT=\"centos\"\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\n```\n\n```\n% spack compiler info intel@16.0.3\nintel@16.0.3:\n    cc  = /projects/opt/intel/compilers/compilers_and_libraries_2016.3.210/linux/bin/intel64/icc\n    cxx = /projects/opt/intel/compilers/compilers_and_libraries_2016.3.210/linux/bin/intel64/icpc\n    f77 = /projects/opt/intel/compilers/compilers_and_libraries_2016.3.210/linux/bin/intel64/ifort\n    fc  = /projects/opt/intel/compilers/compilers_and_libraries_2016.3.210/linux/bin/intel64/ifort\n    modules  = []\n    operating system  = macos\n```\n\nYou can see that the operating system is identified as **macos**.  The `arch` command reports the same:\n\n```\n% spack arch\ndarwin-macos-x86_64\n```\n\nWhen I try to compile a package (`metis` in the example below), the build fails because the compiler runtime libraries are not found.  \n\n```\n% spack install --dirty -v metis%intel@16.0.3\n...\n[100%] Linking C executable cmpfillin\nld: warning: libimf.so, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: warning: libsvml.so, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: warning: libirng.so, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: warning: libimf.so, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: warning: libintlc.so.5, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: warning: libsvml.so, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: warning: libirng.so, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: warning: libintlc.so.5, needed by ../libmetis/libmetis.so, not found (try using -rpath or -rpath-link)\nld: graphchk: hidden symbol `__intel_cpu_feature_indicator_x' in /projects/opt/intel/compilers/compilers_and_libraries_2016.3.210/linux/ipp/../compiler/lib/intel64/libirc.a(cpu_feature_disp.o) is referenced by DSO\nld: final link failed: Bad value\nld: mpmetis: hidden symbol `__intel_cpu_feature_indicator_x' in /projects/opt/intel/compilers/compilers_and_libraries_2016.3.210/linux/ipp/../compiler/lib/intel64/libirc.a(cpu_feature_disp.o) is referenced by DSO\nld: final link failed: Bad value\nmake[2]: *** [programs/graphchk] Error 1\n```\n\nThe above error may or may not be caused by OS misidentification. However, it is my understanding that the `--dirty` option should preserve the full environment (including `LD_LIBRARY_PATH`) and  I can cut&paste the cmake/make commands from spack-build.out and the build works fine. This is why I'm thinking the os identification may be causing my trouble. (I'm using the develop branch from Aug. 9.)\n\nThoughts?\n",
    "user": "KineticTheory",
    "url": "https://api.github.com/repos/spack/spack/issues/1489",
    "updated_at": "2016-10-11 14:46:40",
    "created_at": "2016-08-10 14:46:30",
    "closed_at": "2016-10-11 14:46:40",
    "state": "closed",
    "title": "Spack identifies my Linux CentOS as macos",
    "number": 1489,
    "milestone": null,
    "labels": [],
    "id": 170435663,
    "html_url": "https://github.com/spack/spack/issues/1489",
    "assignees": [],
    "comments": 5
}