{
    "body": "Closes #2926\r\n\r\nThis PR combines the following commands:\r\n```\r\nspack url-parse\r\nspack urls\r\n```\r\ninto a single command with subcommands:\r\n```\r\nspack url parse\r\nspack url list\r\nspack url test\r\n```\r\n\r\n### What are these commands and why do I care?\r\n\r\nThese commands aren't commonly used by Spack users, but are absolutely essential for developers to debug Spack's URL parsing support. This includes automatic name detection in `spack create` and version extraction and substitution in commands like `spack fetch`, `spack versions`, `spack checksum`, `spack info`, and `spack create`. Let's look at some examples:\r\n\r\n### spack url parse\r\n\r\nYou are developing a package but you noticed that the version wasn't detected properly. Let's look at #2840 as an example. To determine what is going wrong, you would run:\r\n```\r\n$ spack url parse https://github.com/tpaviot/oce/archive/OCE-0.18.tar.gz\r\n==> Parsing URL: https://github.com/tpaviot/oce/archive/OCE-0.18.tar.gz\r\n\r\n==> Matched version regex  5: r'github.com/[^/]+/[^/]+/archive/(?:release-)?v?(\\\\w+(?:[.-]\\\\w+)*)$'\r\n==> Matched  name   regex  4: r'github.com/[^/]+/([^/]+)/archive'\r\n\r\n==> Detected:\r\n    https://github.com/tpaviot/oce/archive/OCE-0.18.tar.gz\r\n                               ---         ~~~~~~~~\r\n    name:    oce\r\n    version: OCE-0.18\r\n\r\n==> Substituting version 9.9.9b:\r\n    https://github.com/tpaviot/oce/archive/OCE-0.18.tar.gz\r\n                               ---         ~~~~~~~~\r\n```\r\nThis command tells you which regexes were used to determine the name of the package and the version. It also shows you what it would look like if we substituted a different version into this URL, as is done every time you fetch something. If given the `--spider` option, it spiders the web for more versions.\r\n\r\nAs you can see, we did a terrible job matching OCE. I plan on fixing this and several other low-hanging fruit in a separate PR once this is merged.\r\n\r\n### spack url list\r\n\r\nThis command lists every URL in every package in Spack. If given the `--color` and `--extrapolation` flags, it also colors the part of the string that it detected to be the name and version. I added `--incorrect-name` and `--incorrect-version` flags to only print URLs that were not being parsed correctly. This is how one identifies said low-hanging fruit.\r\n\r\n### spack url test\r\n\r\nThis command prints a summary that tells us how good of a job we are doing. It also prints the regular expressions that were matched and how commonly they were matched. I know you're all curious to see what kind of a report card we are getting, so here it is:\r\n```\r\n$ spack url test\r\n==> Generating a summary of URL parsing in Spack...\r\n\r\n    Total URLs found:          1145\r\n    Names correctly parsed:    1022/1145 (89.26%)\r\n    Versions correctly parsed: 1049/1145 (91.62%)\r\n\r\n==> Statistics on name regular expresions:\r\n\r\n    Index  Count  Regular Expresion\r\n      1:     11   r'github.com/[^/]+/[^/]+/releases/download/2.2/(.*)-2.2$'\r\n      2:     16   r'/([^/]+)/(tarball|zipball)/'\r\n      3:      6   r'/([^/]+)[_.-](bin|dist|stable|src|sources)[_.-]0'\r\n      4:    112   r'github.com/[^/]+/([^/]+)/archive'\r\n      5:      1   r'[^/]+/([^/]+)/repository/archive'\r\n      6:      4   r'([^/]+)/download.php'\r\n      7:    953   r'([^/]+)[_.-]v?5.1.1'\r\n      8:     36   r'([^/]+)2.10.1'\r\n     10:      1   r'/([^/]+)0.20.1'\r\n\r\n==> Statistics on version regular expresions:\r\n\r\n    Index  Count  Regular Expresion\r\n      0:      8   r'github.com/.+/(?:zip|tar)ball/v?((\\\\d+\\\\.)+\\\\d+)$'\r\n      1:      1   r'github.com/.+/(?:zip|tar)ball/.*-((\\\\d+\\\\.)+\\\\d+)$'\r\n      4:      1   r'github.com/[^/]+/yorick/archive/y_(\\\\d+(?:_\\\\d+)*)$'\r\n      5:    110   r'github.com/[^/]+/[^/]+/archive/(?:release-)?v?(\\\\w+(?:[.-]\\\\w+)*)$'\r\n      7:     34   r'github.com/[^/]+/[^/]+/releases/download/v?([^/]+)/.*$'\r\n      8:      1   r'\\\\?ref=(?:.*-|v)*((\\\\d+\\\\.)+\\\\d+).*$'\r\n     10:      3   r'((\\\\d+_)+\\\\d+)$'\r\n     11:      5   r'-((\\\\d+\\\\.)*\\\\d\\\\.\\\\d+-(p|rc|RC)?\\\\d+)(?:[-._](?:bin|dist|stable|src|sources))?$'\r\n     12:      2   r'-((\\\\d)+-\\\\d)'\r\n     13:    184   r'_((\\\\d+\\\\.)+\\\\d+(-(\\\\d+(\\\\.\\\\d+)?))?[a-z]?)'\r\n     14:    683   r'-((\\\\d+\\\\.)*\\\\d+)$'\r\n     15:     21   r'[-._]?v?((\\\\d+\\\\.)*\\\\d+[-._]?([a-z]|rc|RC|tp|TP?)\\\\d*)$'\r\n     17:     28   r'((\\\\d+\\\\.)*\\\\d+)$'\r\n     18:     17   r'-((\\\\d+\\\\.)+\\\\d+[a-z]?)[-._](bin|dist|stable|src|sources?)$'\r\n     20:     20   r'-v?([^-]+(-alpha|-beta)?)'\r\n     21:      7   r'_([^_]+(_alpha|_beta)?)'\r\n\r\n```\r\nOverall, not as bad as I thought. But there is still a lot that can be done to improve this. With these new debugging capabilities, I can safely and confidently add or remove regular expressions from the list and immediately see which packages were improved or broken.",
    "user": "adamjstewart",
    "url": "https://api.github.com/repos/spack/spack/issues/2938",
    "updated_at": "2017-11-12 00:57:23",
    "created_at": "2017-01-26 21:40:24",
    "closed_at": "2017-01-31 16:14:53",
    "state": "closed",
    "title": "Refactor Spack's URL parsing commands",
    "number": 2938,
    "milestone": "v0.11.0",
    "labels": [
        "refactoring",
        "url-parsing"
    ],
    "id": 203496737,
    "html_url": "https://github.com/spack/spack/pull/2938",
    "assignees": [],
    "comments": 11
}