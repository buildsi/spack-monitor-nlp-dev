{
    "body": "I'm making this a new issue since it is a basic design question, not specific to an individual package. \n\nSay there is a package Y that depends on PETSc but needs some small additions to the PETSc that gets provided (for example an added dependency on spai). Now I could copy the petsc.py (call it petsc+spai.py) and add an additional line with the extra dependency and have my users use petsc+spai.py instead of petsc.py   The drawback is that overtime fixes etc may be made in petsc.py that don't get made into my custom petsc+spai.py. \n\nSo, is there, or could there be a concept of \"including\" a previous xxx.py into a new xxx+yyy.py to use the information from both files in building the package? This way people can in a very light weight manner provide \"custom\" builds without the high overhead and danger of duplicate code. \n",
    "user": "BarrySmith",
    "url": "https://api.github.com/repos/spack/spack/issues/2007",
    "updated_at": "2016-10-27 17:15:19",
    "created_at": "2016-10-12 19:05:33",
    "closed_at": "2016-10-12 22:31:04",
    "state": "closed",
    "title": "Extending a preexisting package ",
    "number": 2007,
    "milestone": null,
    "labels": [
        "xSDK"
    ],
    "id": 182607471,
    "html_url": "https://github.com/spack/spack/issues/2007",
    "assignees": [],
    "comments": 13
}