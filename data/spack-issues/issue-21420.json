{
    "body": "PR is for #21413, I'm still not sure if this is a good idea but the changes were simple enough that I just made them here anyway to illustrate what I meant.\r\n\r\nThis adds a `--sourceable` flag to `spack env activate` that gets passed through to the `shell_modifications` function. When the flag is on any references to the users current environment get removed and replaced with environment variables.\r\n\r\nFor example, the standard output is:\r\n\r\n```bash\r\nexport SPACK_ENV=/home/roscar/tmp/example-environment;\r\nalias despacktivate='spack env deactivate';\r\nif [ -z ${SPACK_OLD_PS1+x} ]; then\r\n    if [ -z ${PS1+x} ]; then\r\n        PS1='$$$$';\r\n    fi;\r\n    export SPACK_OLD_PS1=\"${PS1}\";\r\nfi;\r\nexport PS1=\"[example-environment] ${PS1}\";\r\nexport PATH=/home/roscar/tmp/example-environment/.spack-env/view/bin:/home/roscar/work/github.com/RobertRosca/spack/bin:/home/roscar/.zinit/plugins/ajeetdsouza---zoxide:/home/roscar/.poetry/bin:/home/roscar/.zinit/plugins/sharkdp---fd/fd:/home/roscar/.zinit/plugins/junegunn---fzf-bin:/home/roscar/.scripts:/home/roscar/.zinit/polaris/bin:/home/roscar/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl;\r\nexport PKG_CONFIG_PATH=/home/roscar/tmp/example-environment/.spack-env/view/share/pkgconfig:/home/roscar/tmp/example-environment/.spack-env/view/lib64/pkgconfig:/home/roscar/tmp/example-environment/.spack-env/view/lib/pkgconfig;\r\nexport CMAKE_PREFIX_PATH=/home/roscar/tmp/example-environment/.spack-env/view;\r\nexport MANPATH=/home/roscar/tmp/example-environment/.spack-env/view/share/man:/home/roscar/tmp/example-environment/.spack-env/view/man;\r\nexport C_INCLUDE_PATH=/home/roscar/tmp/example-environment/.spack-env/view/include;\r\nexport INCLUDE=/home/roscar/tmp/example-environment/.spack-env/view/include;\r\nexport CPLUS_INCLUDE_PATH=/home/roscar/tmp/example-environment/.spack-env/view/include;\r\nexport LIBRARY_PATH=/home/roscar/tmp/example-environment/.spack-env/view/lib64:/home/roscar/tmp/example-environment/.spack-env/view/lib;\r\nexport LD_LIBRARY_PATH=/home/roscar/tmp/example-environment/.spack-env/view/lib64:/home/roscar/tmp/example-environment/.spack-env/view/lib;\r\nexport ACLOCAL_PATH=/home/roscar/tmp/example-environment/.spack-env/view/share/aclocal;\r\n```\r\n\r\nAnd with the `--sourceable` flag:\r\n\r\n```bash\r\n\u276f spack env activate --sh -v -p --sourceable ./example-environment\r\nexport SPACK_ENV=/home/roscar/tmp/example-environment;\r\nalias despacktivate='spack env deactivate';\r\nif [ -z ${SPACK_OLD_PS1+x} ]; then\r\n    if [ -z ${PS1+x} ]; then\r\n        PS1='$$$$';\r\n    fi;\r\n    export SPACK_OLD_PS1=\"${PS1}\";\r\nfi;\r\nexport PS1=\"[example-environment] ${PS1}\";\r\nexport C_INCLUDE_PATH=/home/roscar/tmp/example-environment/.spack-env/view/include:$C_INCLUDE_PATH;\r\nexport MANPATH=/home/roscar/tmp/example-environment/.spack-env/view/share/man:/home/roscar/tmp/example-environment/.spack-env/view/man:$MANPATH;\r\nexport CMAKE_PREFIX_PATH=/home/roscar/tmp/example-environment/.spack-env/view:$CMAKE_PREFIX_PATH;\r\nexport LIBRARY_PATH=/home/roscar/tmp/example-environment/.spack-env/view/lib64:/home/roscar/tmp/example-environment/.spack-env/view/lib:$LIBRARY_PATH;\r\nexport ACLOCAL_PATH=/home/roscar/tmp/example-environment/.spack-env/view/share/aclocal:$ACLOCAL_PATH;\r\nexport PATH=/home/roscar/tmp/example-environment/.spack-env/view/bin:$PATH;\r\nexport PKG_CONFIG_PATH=/home/roscar/tmp/example-environment/.spack-env/view/share/pkgconfig:/home/roscar/tmp/example-environment/.spack-env/view/lib64/pkgconfig:/home/roscar/tmp/example-environment/.spack-env/view/lib/pkgconfig:$PKG_CONFIG_PATH;\r\nexport INCLUDE=/home/roscar/tmp/example-environment/.spack-env/view/include:$INCLUDE;\r\nexport LD_LIBRARY_PATH=/home/roscar/tmp/example-environment/.spack-env/view/lib64:/home/roscar/tmp/example-environment/.spack-env/view/lib:$LD_LIBRARY_PATH;\r\nexport CPLUS_INCLUDE_PATH=/home/roscar/tmp/example-environment/.spack-env/view/include:$CPLUS_INCLUDE_PATH;\r\n```\r\n\r\nThis means you can do `spack env activate --sh -v -p ./example-environment > activate` and any users can run `source activate` to activate the environment, without having to load spack or run `spack env activate`. Only major issue is that `spack env deactivate` requires the full spack shell integration, so a workaround for that would be needed.\r\n\r\nMay also be useful to have a module file generation flag, as generating module files for environments seems like a useful feature to me as well, but maybe that doesn't fit in with the way environments are meant to be used.\r\n\r\n- [x] Rough implementation of changes to `shell_modifications`\r\n- [x] Propagate arguments through to CLI call function and subparser\r\n- [ ] Try to implement a sourceable `deactivate` script\r\n- [ ] Add tests\r\n- [ ] Module file generation? ",
    "user": "RobertRosca",
    "url": "https://api.github.com/repos/spack/spack/issues/21420",
    "updated_at": "2021-06-22 23:55:16",
    "created_at": "2021-02-01 14:56:59",
    "closed_at": "None",
    "state": "open",
    "title": "WIP: Add --with-env-vars flag to `spack env activate --sh`",
    "number": 21420,
    "milestone": null,
    "labels": [
        "environments"
    ],
    "id": 798428784,
    "html_url": "https://github.com/spack/spack/pull/21420",
    "assignees": [],
    "comments": 3
}