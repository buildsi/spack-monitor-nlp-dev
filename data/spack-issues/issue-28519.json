{
    "body": "This PR is just a feasibility test to see if I was able to get something working and to ask you if it is something that, after polishing it, can be interesting as a feature.\r\n\r\n### Extra cmake flags as part of the spec (with `cmakeflags`)\r\n\r\nIt allows the user to inject cmake variables to the configure call, without the need of altering the spack package.\r\n\r\n```bash\r\nspack spec -I zlib-ng cmakeflags=\"-Dexample1:BOOL=off -Dexample2=/dev/null\"\r\nInput spec\r\n--------------------------------\r\n -   zlib-ng cmakeflags=-Dexample1:BOOL=off -Dexample2=/dev/null\r\n\r\nConcretized\r\n--------------------------------\r\n -   zlib-ng@2.0.0%apple-clang@13.0.0~compat~ipo+opt build_type=RelWithDebInfo cmakeflags=-Dexample1:BOOL=off -Dexample2=/dev/null arch=darwin-bigsur-skylake\r\n[+]      ^cmake@3.22.1%apple-clang@13.0.0~doc+ncurses+openssl+ownlibs~qt build_type=Release arch=darwin-bigsur-skylake\r\n```\r\n\r\n\r\nIn the last line of this snippet it is possible to see that `'-Dexample1:BOOL=off'` and `'-Dexample2=/dev/null'` have been appended after other cmake variables set by the package.\r\n```bash\r\nspack -v install -u build zlib-ng cmakeflags=\"-Dexample1:BOOL=off -Dexample2=/dev/null\"\r\n[+] /usr/local (external cmake-3.22.1-3yfazipg7szx4t73zptknkgy743cskm2)\r\n==> Installing zlib-ng-2.0.0-ruzgko2kk5i6mqdwwat2ses5hsyl4bfs\r\n==> No binary for zlib-ng-2.0.0-ruzgko2kk5i6mqdwwat2ses5hsyl4bfs found: installing from source\r\n/Users/ialberto/spack/lib/spack/spack/target.py:137: UserWarning: microarchitecture specific optimizations are not supported yet on mixed compiler toolchains [check apple-clang@13.0.0 for further details]\r\n  warnings.warn(msg.format(compiler))\r\n==> Using cached archive: /Users/ialberto/spack/var/spack/cache/_source-cache/archive/86/86993903527d9b12fc543335c19c1d33a93797b3d4d37648b5addae83679ecd8.tar.gz\r\n==> No patches needed for zlib-ng\r\n==> zlib-ng: Executing phase: 'cmake'\r\n==> [2022-01-20-09:33:37.391038] 'cmake' '-G' 'Unix Makefiles' '-DCMAKE_INSTALL_PREFIX:STRING=/Users/ialberto/spack/opt/spack/darwin-bigsur-skylake/apple-clang-13.0.0/zlib-ng-2.0.0-ruzgko2kk5i6mqdwwat2ses5hsyl4bfs' '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' '-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON' '-DCMAKE_FIND_FRAMEWORK:STRING=LAST' '-DCMAKE_FIND_APPBUNDLE:STRING=LAST' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-DCMAKE_INSTALL_RPATH:STRING=/Users/ialberto/spack/opt/spack/darwin-bigsur-skylake/apple-clang-13.0.0/zlib-ng-2.0.0-ruzgko2kk5i6mqdwwat2ses5hsyl4bfs/lib;/Users/ialberto/spack/opt/spack/darwin-bigsur-skylake/apple-clang-13.0.0/zlib-ng-2.0.0-ruzgko2kk5i6mqdwwat2ses5hsyl4bfs/lib64' '-DCMAKE_PREFIX_PATH:STRING=' '-DZLIB_COMPAT:BOOL=OFF' '-DWITH_OPTIM:BOOL=ON' '-Dexample1:BOOL=off' '-Dexample2=/dev/null' '/var/folders/c9/v21gts9n7rs9cycnxcdzr__80000gn/T/ialberto/spack-stage/spack-stage-zlib-ng-2.0.0-ruzgko2kk5i6mqdwwat2ses5hsyl4bfs/spack-src'\r\n```\r\n\r\n### Why can this be interesting?\r\nBecause it will help to not \"clutter\" the spack package with all the variants possible and keep there just the interesting ones for the \"public\". At the same time, it will be possible for an advanced user to inject cmake parameters \"for internal use\" without altering the spack package (which is a bit hacky).\r\n\r\n### A use-case\r\nWe have our package built by the CI via spack, but in order to test things on our system we need to enable specific cmake behavior via internal variables which are not meant to be \"exposed\" via the public package.\r\n\r\n### WIP\r\nClearly it is just a feasibility test. I opened this PR to ask your feedback/interest before working on it. Suggestion about how to correctly add this feature are welcome.",
    "user": "albestro",
    "url": "https://api.github.com/repos/spack/spack/issues/28519",
    "updated_at": "2022-01-26 09:12:41",
    "created_at": "2022-01-20 08:44:00",
    "closed_at": "None",
    "state": "open",
    "title": "proposal: `cmakeflags` (similar to `cxxflags`, but for cmake arguments)",
    "number": 28519,
    "milestone": null,
    "labels": [
        "directives",
        "build-systems"
    ],
    "id": 1109018496,
    "html_url": "https://github.com/spack/spack/pull/28519",
    "assignees": [],
    "comments": 1
}