{
    "body": "[COSTA](https://github.com/eth-cscs/COSTA) is a communication-optimal, highly-optimised algorithm for redistributing and transposing matrices that are potentially distributed across multiple MPI processes. It implements scalapack routines for matrix scale & transpose operations (`sub(C) = alpha * sub(A)^T + beta * C`, provided by `pxtran(u)`) and data redistribution (`sub(C) = sub(A)`, provided by `pxgemr2d`). Unlike previous redistribution algorithms, COSTA will also propose the relabelling of MPI ranks that minimizes the data reshuffling cost, leaving to users to decide if they want to use it. \r\n\r\nWhat makes COSTA more general than scalapack routines is that it is not limited only to block-cyclic data distributions, but can deal with completely arbitrary and irregular matrix distributions and can be easily generalized for n-dimensional tensors. \r\n\r\nThanks to its scalapack wrappers, scalapack users do not need to change their code in order to use COSTA: it is enough to link your library to COSTA before linking to scalapack and all `pxtran, pxtranu` and `pxgemr2d` routines will automatically be using the COSTA algorithm.\r\n\r\nThis work is published in the **Proceedings of the International Conference on High Performance Computing (ISC21)** and is available under the following links:\r\n- **published version:** https://link.springer.com/chapter/10.1007/978-3-030-78713-4_12\r\n- **arxiv preprint:** https://arxiv.org/abs/2106.06601\r\n",
    "user": "kabicm",
    "url": "https://api.github.com/repos/spack/spack/issues/28727",
    "updated_at": "2022-02-04 17:02:33",
    "created_at": "2022-02-02 14:56:25",
    "closed_at": "2022-02-04 17:02:33",
    "state": "closed",
    "title": "Adding new package: COSTA",
    "number": 28727,
    "milestone": null,
    "labels": [
        "new-version",
        "new-package",
        "dependencies",
        "maintainers",
        "new-variant"
    ],
    "id": 1122028384,
    "html_url": "https://github.com/spack/spack/pull/28727",
    "assignees": [],
    "comments": 2
}