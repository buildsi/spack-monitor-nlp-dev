{
    "body": "### Steps to reproduce\n\nI have no idea how to engineer an easy example that you can reproduce, I'm mostly opening an issue with a ref to #6228 and some information for users who find themselves in this situation (cannot deactivate something that is not installed) for how to try and repair things (including future me...creating a new spack is my usual fix but I decided to figure it out this time).  Some quick notes:\r\n\r\n1. TL;DR: `spack activate` / `spack deactivate` hard-fail when missing entries in `extensions.yaml` are found, the error message can be improved.  Additionally, if possible, a failed `spack activate` should undo whatever it began activating.\r\n2. You can absolutely close this as #wontfix since I don't think the `activate` / `deactivate` workflow is particularly encouraged (outside of spack envs / views).\r\n3. In this scenario, something broke with my python activations -- `spack deactivate` refused to move forward on deactivating `opencv` because it could not find a hash for `py-torchvision`.  I had uninstalled `py-torchvision`, but forgot to deactivate it first which is what lands you in this scenario (my recollection is this is true for any package activation, `spack uninstall` without `spack deactivate` will get you here).\r\n4. So I just uninstalled `opencv` to reinstall the new version I needed hoping I would be able to fix things after the fact.\r\n\r\n```console\r\n$ spack activate /7xv5vz7nmai5kr3rwq26yx5rjjvvj37s                                                                                         \r\n==> Error: Spec se2pfc5cgexttlfe2w4zmzqljc2rjm35 not found in /opt/spack/opt/spack/linux-fedora34-haswell/gcc-11.0.1/opencv-4.5.2-se2pfc5cgexttlfe2w4zmzqljc2rjm35\r\n```\r\n\r\nThe spec `se2pfc5cgexttlfe2w4zmzqljc2rjm35` was the old `opencv` install I had to abandon. I was able to find the source of the error message\r\n\r\nhttps://github.com/spack/spack/blob/c17f8d938e224c2952cc94d9d86193ca94f10388/lib/spack/spack/directory_layout.py#L520-L529\r\n\r\nA user wanting to discover what file to repair may add\r\n\r\n```diff\r\n  if dag_hash not in by_hash:\r\n+     import pdb\r\n+     pdb.set_trace()\r\n      raise InvalidExtensionSpecError(\r\n          \"Spec %s not found in %s\" % (dag_hash, prefix))\r\n```\r\n\r\nand re-run the failing `spack activate` or `spack deactivate` command with the debugger, e.g., `spack --pdb activate /7xv5vz7nmai5kr3rwq26yx5rjjvvj37s`.  It will start `spack` and pause, type `continue` and hit enter and eventually it will hit your `set_trace()`.  You can then print the `path` variable (`p path`) to locate the file that is broken, and then `ctrl+d` will close the debugger.\r\n\r\nFor my purposes, initially to test, I simply commented out the affected hashes (`py-torchvision` and the old `opencv`) in the yaml file in `opt/spack/linux-fedora34-haswell/gcc-11.0.1/python-3.8.12-lxlhv7wo5wsdrshqvqb237um6eqoszig/.spack/extensions.yaml`.  After repairing everything, since those packages are indeed no longer installed (**AND** I manually deleted the symbolic links in my python install), I deleted the entries.\r\n\r\n**Observation**: if `spack` encounters hashes in an `extensions.yaml` that are not found in its install, this is probably a good opportunity to at least inform the user which file is broken.  It could be included in the current exception being raised.\r\n\r\nThe next time we run `spack activate`:\r\n\r\n```console\r\n$ spack activate /7xv5vz7nmai5kr3rwq26yx5rjjvvj37s                                                                                         \r\n==> Activating extension opencv@4.5.2%gcc@11.0.1~1394~ade~android_mediandk~android_native_camera~apps~aravis~avfoundation+calib3d~cap_ios~carotene~clp+contrib+core~cpufeatures~cubl\r\nas+cuda+cudnn~cufft~directx+dnn~dshow+eigen~fast-math+features2d+ffmpeg+flann~freetype~gapi+gdal~gdcm~gphoto2~gstreamer~gtk~gtk_2_x~halide+highgui~hpx~imgcode_pfm+imgcodec_hdr~imgc\r\nodec_pxm~imgcodec_sunraster+imgcodecs+imgproc~inf_engine+ipo+ipp+itt~jasper~java~java_bindings_generator+jpeg~js~js_bindings_generator+lapack+librealsense~mfx+ml~msmf~msmf_dxva~ngr\r\naph+nonfree~nvcuvid~objc~objc_bindings_generator+objdetect~onnx~opencl~opencl_d3d11_nv~opencl_svm~openclamdblas~openclamdfft+openexr+opengl+openjpeg+openmp~openni~openni2~openvx+ph\r\noto~plaidml+png~powerpc+protobuf~pthreads_pf~pvapi~python2+python3+python_bindings_generator~python_tests+qt~quirc+shared+stitching+tbb~tengine+tiff~ts~ueye~v4l~va~va_intel+video+v\r\nideoio~vtk+vulcan~webp~win32ui~world~ximea~xine build_type=RelWithDebInfo cuda_arch=61 arch=linux-fedora34-haswell/7xv5vz7 for python@3.8.12%gcc@11.0.1+bz2+ctypes+dbm~debug+libxml2\r\n+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix+tkinter~ucs4+uuid+zlib patches=0d98e93189bc278fbc37a50ed7f183bd8aaf249a8e1670a465f0db6bb4f8cf87,f2fd06\r\n0afc4b4618fe8104c4c5d771f36dc55b1db5a4623785a4ea707ec72fb4 arch=linux-fedora34-haswell/lxlhv7w                                                                                      \r\n==> Activating extension py-numpy@1.21.4%gcc@11.0.1+blas+lapack patches=873745d7b547857fcfec9cae90b09c133b42a4f0c23b6c2d84cf37e2dd816604 arch=linux-fedora34-haswell/hlzivpz for pyt\r\nhon@3.8.12%gcc@11.0.1+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix+tkinter~ucs4+uuid+zlib patches=0d98e93189bc278fbc37a\r\n50ed7f183bd8aaf249a8e1670a465f0db6bb4f8cf87,f2fd060afc4b4618fe8104c4c5d771f36dc55b1db5a4623785a4ea707ec72fb4 arch=linux-fedora34-haswell/lxlhv7w\r\n==> py-numpy@1.21.4%gcc@11.0.1+blas+lapack patches=873745d7b547857fcfec9cae90b09c133b42a4f0c23b6c2d84cf37e2dd816604 arch=linux-fedora34-haswell/hlzivpz is already installed in pyth\r\non@3.8.12%gcc@11.0.1+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix+tkinter~ucs4+uuid+zlib patches=0d98e93189bc278fbc37a5\r\n0ed7f183bd8aaf249a8e1670a465f0db6bb4f8cf87,f2fd060afc4b4618fe8104c4c5d771f36dc55b1db5a4623785a4ea707ec72fb4 arch=linux-fedora34-haswell/lxlhv7w\r\n==> Error: [Errno 17] File exists: '/opt/spack/opt/spack/linux-fedora34-haswell/gcc-11.0.1/opencv-4.5.2-7xv5vz7nmai5kr3rwq26yx5rjjvvj37s/share/licenses/opencv4/ippicv-EULA.txt' -> \r\n'/opt/spack/opt/spack/linux-fedora34-haswell/gcc-11.0.1/python-3.8.12-lxlhv7wo5wsdrshqvqb237um6eqoszig/share/licenses/opencv4/ippicv-EULA.txt'\r\n```\r\n\r\nI had manually deleted `cv2` from `site-packages`, but in this case there were more files that needed to be deleted.  The behavior of `spack activate` here will continue to iteratively break itself, since what happens is it starts creating all of the links it can and then when it finds a conflict, error out.  **If there is a straightforward way to do this, `spack` should undo the symlinks it just created when an `activate` fails somewhere in the middle.**  That sounds rather difficult to implement, though...\r\n\r\nSo since the purpose of this report is to just coach people on how to fix things from a broken state, as you continue to try and `spack activate` it will be reporting to you which files are blocking you.  So delete all of them, then try again.  More errors, so delete everything again + the new errors, then try again.  In my case, from the `python` root, for killing all of `opencv` failed activations, I ended up with this list:\r\n\r\n```console\r\n$ pwd\r\n/opt/spack/opt/spack/linux-fedora34-haswell/gcc-11.0.1/python-3.8.12-lxlhv7wo5wsdrshqvqb237um6eqoszig\r\n\r\n# DANGER: do not blindly copy-paste commands from the internet...\r\n$ rm -rf lib/python3.8/site-packages/cv2 share/opencv4 share/licenses/opencv4 bin/setup_vars_opencv4.sh include/opencv4 lib64/libopencv_* lib64/cmake/opencv4 lib64/opencv4\r\n```\r\n\r\nand at last `spack activate` was able to proceed.  It should be obvious, but this behavior is not officially condoned by spack, and you playing executioner can cause unknown problems -- **be aware that you may further break things if you are too aggressive deleting things**.  You can find symbolic links using `find -L . -type l`, if you end up deleting things you shouldn't have you just broke a different package.  Since, at the end of the day, though, you're already in a broken state that may require just deleting `spack` and restarting, well ... the choice is yours.\r\n\r\nHopefully this is helpful to somebody someday, but do feel free to close this or focus it to what is reasonably solvable.  It's late, but I wanted to put the walkthrough up else it may never go up :no_mouth:\n\n### Error message\n\n_No response_\n\n### Information on your system\n\n* **Spack:** 0.17.0-564-04bed42831\r\n* **Python:** 3.9.9\r\n* **Platform:** linux-fedora34-haswell\r\n* **Concretizer:** clingo\r\n\r\nSomewhat old, also with a fair number of local changes (new and modified packages, not much touching spack core).\n\n### General information\n\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\n- [X] I have searched the issues of this repo and believe this is not a duplicate\n- [X] I have run the failing commands in debug mode and reported the output",
    "user": "svenevs",
    "url": "https://api.github.com/repos/spack/spack/issues/29196",
    "updated_at": "2022-02-25 05:27:28",
    "created_at": "2022-02-25 05:27:28",
    "closed_at": "None",
    "state": "open",
    "title": "can spack deactivate / activate failures be undone by spack?",
    "number": 29196,
    "milestone": null,
    "labels": [
        "bug",
        "triage"
    ],
    "id": 1150059453,
    "html_url": "https://github.com/spack/spack/issues/29196",
    "assignees": [],
    "comments": 0
}