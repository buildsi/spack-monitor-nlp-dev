{
    "body": "I'd like to be able to pipe the output of `spack find ...` into other commands, but the colorization gets in the way, as do the compiler headers.\n\nMy naive use case was to play with `spack view`, linking all of the things that I've built with _%gcc@5.4.0_ but not _%gcc@4.8.5_ and only one of the several perls I have installed and `grep -v ...` a couple of things.\n### colorization\n\nI thought perhaps short output might not be colored or .... but it seems like `color=True` is hardwired in _lib/spack/spack/cmd/__init__.py_.\n\n[This](http://www.commandlinefu.com/commands/view/3584/remove-color-codes-special-characters-with-sed) (thanks Google!) works but is not very appealing\n\n```\nspack find | sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\"\n```\n\nI could imagine adding a --no_color option to the find subcommand, or teaching the find subcommand to not colorize the output if it's writing to a pipe (not writing to a tty).\n\nWould that be generally useful?\n### compiler headers\n\nRather than have a header separating the packages by compiler, it seems like would be useful to have a way to just include them in the spec: `tcl@8.6.5%gcc@5.4.0`, which is what is useful for e.g. `spec view add`.\n### Useful?\n\nPerhaps if it detects that it's writing to a pipe (not a tty) it could drop the headers and produce a single uncolored line with compiler info as part of the spec.  Options that produce multi word output (e.g. `-l`) would continue to (people can `perl -lane ...` it or whatever strikes their fancy).\n\nIf this seems useful and someone will mentor my Python, I'm happy to take a swing at it.\n",
    "user": "hartzell",
    "url": "https://api.github.com/repos/spack/spack/issues/1369",
    "updated_at": "2017-07-31 19:58:35",
    "created_at": "2016-07-25 23:39:01",
    "closed_at": "2017-07-31 19:57:48",
    "state": "closed",
    "title": "Provide a \"pipe-able\" spack find output format.",
    "number": 1369,
    "milestone": null,
    "labels": [
        "color"
    ],
    "id": 167490143,
    "html_url": "https://github.com/spack/spack/issues/1369",
    "assignees": [],
    "comments": 3
}