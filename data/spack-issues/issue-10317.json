{
    "body": "This is presumable already available in Spack. I'm just having a hard time understanding how to implement it. So I apologize ahead of time if this isn't an appropriate ticket. However, I have a use case which is relevant to Core packages in lmod that I want to get your advice on.\r\n\r\nSay I want to treat singularity or java-jdk as a core module. I figured out how to do that using white / black listing in the modules.yaml.\r\n\r\nIn the case of singularity, I want to move singularity images to a desired location within the lmod software stack, then generate a lua files underneath the core singularity which simply points to the container path. Idea being that I could organize singularity files under a hierarchical lmod structure. The issue is I'm not clear on how I can just move the file or generate an appropriate lua file using spack as the methods all appear to be oriented around autoreconf and actual builds. I guess I need the flexibility to do essentially less than that. I can do it manually, but once I update or delete the lmod tree, I lose my manually generated lua files. \r\n\r\nSimilarly for java-jdk. I want to take a build directory or even a compiled jar file, place it into a location with within the software stack for java-jdk and generate a lua file that just references the location of the file or root folder.\r\n",
    "user": "mforde84",
    "url": "https://api.github.com/repos/spack/spack/issues/10317",
    "updated_at": "2019-01-19 18:23:05",
    "created_at": "2019-01-11 20:06:40",
    "closed_at": "2019-01-14 22:20:34",
    "state": "closed",
    "title": "Lmod Core packages",
    "number": 10317,
    "milestone": null,
    "labels": [
        "feature",
        "modules"
    ],
    "id": 398434367,
    "html_url": "https://github.com/spack/spack/issues/10317",
    "assignees": [
        "alalazo"
    ],
    "comments": 12
}