{
    "body": "This issue has been reported by @haampie on Slack\r\n\r\n### Steps to reproduce\r\n\r\nApply the following diff:\r\n```diff\r\ndiff --git a/var/spack/repos/builtin/packages/hdf5/package.py b/var/spack/repos/builtin/packages/hdf5/package.py\r\nindex 48c05308cc..cfbfca6db2 100644\r\n--- a/var/spack/repos/builtin/packages/hdf5/package.py\r\n+++ b/var/spack/repos/builtin/packages/hdf5/package.py\r\n@@ -90,6 +90,8 @@ class Hdf5(CMakePackage):\r\n     depends_on('szip', when='+szip')\r\n     depends_on('zlib@1.1.2:')\r\n \r\n+\r\n+    depends_on('zlib tls=mbedtls +shared +optimize')\r\n     # The compiler wrappers (h5cc, h5fc, etc.) run 'pkg-config'.\r\n     depends_on('pkgconfig', type='run')\r\n \r\ndiff --git a/var/spack/repos/builtin/packages/zlib/package.py b/var/spack/repos/builtin/packages/zlib/package.py\r\nindex 7ca45d4215..0dd246dd75 100644\r\n--- a/var/spack/repos/builtin/packages/zlib/package.py\r\n+++ b/var/spack/repos/builtin/packages/zlib/package.py\r\n@@ -2,7 +2,7 @@\r\n # Spack Project Developers. See the top-level COPYRIGHT file for details.\r\n #\r\n # SPDX-License-Identifier: (Apache-2.0 OR MIT)\r\n-\r\n+import sys\r\n \r\n # Although zlib comes with a configure script, it does not use Autotools\r\n # The AutotoolsPackage causes zlib to fail to build with PGI\r\n@@ -27,6 +27,26 @@ class Zlib(Package):\r\n             description='Enables the build of shared libraries.')\r\n     variant('optimize', default=True,\r\n             description='Enable -O2 for a more optimized lib')\r\n+    default_tls = 'openssl'\r\n+    if sys.platform == 'darwin':\r\n+        default_tls = 'secure_transport'\r\n+\r\n+    # TODO: add dependencies for other possible TLS backends\r\n+    values_tls = [\r\n+        # 'amissl',\r\n+        # 'bearssl',\r\n+        'gnutls',\r\n+        'mbedtls',\r\ndiff --git a/var/spack/repos/builtin/packages/hdf5/package.py b/var/spack/repos/builtin/packages/hdf5/package.py\r\nindex 48c05308cc..cfbfca6db2 100644\r\n--- a/var/spack/repos/builtin/packages/hdf5/package.py\r\n+++ b/var/spack/repos/builtin/packages/hdf5/package.py\r\n@@ -90,6 +90,8 @@ class Hdf5(CMakePackage):\r\n     depends_on('szip', when='+szip')\r\n     depends_on('zlib@1.1.2:')\r\n \r\n+\r\n+    depends_on('zlib tls=mbedtls +shared +optimize')\r\n     # The compiler wrappers (h5cc, h5fc, etc.) run 'pkg-config'.\r\n     depends_on('pkgconfig', type='run')\r\n \r\ndiff --git a/var/spack/repos/builtin/packages/zlib/package.py b/var/spack/repos/builtin/packages/zlib/package.py\r\nindex 7ca45d4215..0dd246dd75 100644\r\n--- a/var/spack/repos/builtin/packages/zlib/package.py\r\n+++ b/var/spack/repos/builtin/packages/zlib/package.py\r\n@@ -2,7 +2,7 @@\r\n # Spack Project Developers. See the top-level COPYRIGHT file for details.\r\n #\r\n # SPDX-License-Identifier: (Apache-2.0 OR MIT)\r\n-\r\n+import sys\r\n \r\n # Although zlib comes with a configure script, it does not use Autotools\r\n # The AutotoolsPackage causes zlib to fail to build with PGI\r\n@@ -27,6 +27,26 @@ class Zlib(Package):\r\n             description='Enables the build of shared libraries.')\r\n     variant('optimize', default=True,\r\n             description='Enable -O2 for a more optimized lib')\r\n+    default_tls = 'openssl'\r\n+    if sys.platform == 'darwin':\r\n+        default_tls = 'secure_transport'\r\n+\r\n+    # TODO: add dependencies for other possible TLS backends\r\n+    values_tls = [\r\n+        # 'amissl',\r\n+        # 'bearssl',\r\n+        'gnutls',\r\n+        'mbedtls',\r\n+        # 'mesalink',\r\n+        'nss',\r\n+        'openssl',\r\n+        # 'rustls',\r\n+        # 'schannel',\r\n+        'secure_transport',\r\n+        # 'wolfssl',\r\n+    ]\r\n+\r\n+    variant('tls', default=default_tls, description='TLS backend', values=values_tls, multi=True)\r\n \r\n     patch('w_patch.patch', when=\"@1.2.11%cce\")\r\n \r\n```\r\nto e13e697067d004107655bc206ac18e9191abf26c and then:\r\n```\r\n spack install zlib tls=openssl ~shared ~optimize\r\n==> Installing zlib-1.2.11-yxtja5d7dmt25hgt7vd4bxu7diiqc6ee\r\n==> No binary for zlib-1.2.11-yxtja5d7dmt25hgt7vd4bxu7diiqc6ee found: installing from source\r\n==> Using cached archive: /home/culpo/PycharmProjects/spack/var/spack/cache/_source-cache/archive/c3/c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1.tar.gz\r\n==> No patches needed for zlib\r\n==> zlib: Executing phase: 'install'\r\n==> zlib: Successfully installed zlib-1.2.11-yxtja5d7dmt25hgt7vd4bxu7diiqc6ee\r\n  Fetch: 0.00s.  Build: 0.77s.  Total: 0.78s.\r\n[+] /home/culpo/PycharmProjects/spack/opt/spack/linux-ubuntu20.04-icelake/gcc-9.3.0/zlib-1.2.11-yxtja5d7dmt25hgt7vd4bxu7diiqc6ee\r\n```\r\n\r\n### Error message\r\n\r\nThere's no error message, but:\r\n```\r\n$ spack solve -I --reuse hdf5~mpi\r\n==> Best of 10 considered solutions.\r\n==> Optimization Criteria:\r\n  Priority  Criterion                                            Installed  ToBuild\r\n  1         number of packages to build (vs. reuse)                      -        3\r\n  2         deprecated versions used                                     0        0\r\n  3         version weight                                               0        0\r\n  4         number of non-default variants (roots)                       0        0\r\n  5         preferred providers for roots                                0        0\r\n  6         default values of variants not being used (roots)            0        0\r\n  7         number of non-default variants (non-roots)                   2        0\r\n  8         preferred providers (non-roots)                              0        0\r\n  9         compiler mismatches                                          0        0\r\n  10        OS mismatches                                                0        0\r\n  11        non-preferred OS's                                           0        0\r\n  12        version badness                                              0        0\r\n  13        default values of variants not being used (non-roots)        0        0\r\n  14        non-preferred compilers                                      0        0\r\n  15        target mismatches                                            0        0\r\n  16        non-preferred targets                                        0        0\r\n\r\n -   hdf5@1.10.7%gcc@9.3.0~cxx~fortran~hl~ipo~java~mpi+shared~szip~threadsafe+tools api=default build_type=RelWithDebInfo arch=linux-ubuntu20.04-icelake\r\n -       ^cmake@3.21.2%gcc@9.3.0~doc+ncurses+openssl+ownlibs~qt build_type=Release arch=linux-ubuntu20.04-icelake\r\n -       ^pkgconf@1.8.0%gcc@9.3.0 arch=linux-ubuntu20.04-icelake\r\n[+]      ^zlib@1.2.11%gcc@9.3.0~optimize+pic~shared tls=openssl arch=linux-ubuntu20.04-icelake\r\n```\r\nis reusing a spec that doesn't meet the specifications.\r\n\r\n### Information on your system\r\n\r\n* **Spack:** 0.16.3-5278-e13e697067\r\n* **Python:** 3.8.10\r\n* **Platform:** linux-ubuntu20.04-icelake\r\n* **Concretizer:** clingo\r\n\r\n\r\n### General information\r\n\r\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [X] I have searched the issues of this repo and believe this is not a duplicate\r\n- [X] I have run the failing commands in debug mode and reported the output",
    "user": "alalazo",
    "url": "https://api.github.com/repos/spack/spack/issues/27237",
    "updated_at": "2021-11-05 16:52:45",
    "created_at": "2021-11-05 10:24:24",
    "closed_at": "2021-11-05 16:52:45",
    "state": "closed",
    "title": "Reusing specs doesn't respect variant constraints",
    "number": 27237,
    "milestone": null,
    "labels": [
        "bug",
        "impact-medium"
    ],
    "id": 1045669437,
    "html_url": "https://github.com/spack/spack/issues/27237",
    "assignees": [
        "haampie",
        "tgamblin",
        "alalazo",
        "becker33"
    ],
    "comments": 6
}