{
    "body": "Adding the type \"build\" to a dependency with another type results in a change in the hash. Adding a \"build\" type only dependency instead doesn't affect the hash.\r\n\r\n### Steps to reproduce the issue\r\n\r\nChange the `xz` package adding a:\r\n```python\r\ndepends_on('zlib', type='link')\r\n```\r\nand check the dag hash and dependency types by:\r\n```console\r\n$ spack spec -lt xz\r\nInput spec\r\n--------------------------------\r\n[    ]  xz\r\nConcretized\r\n--------------------------------\r\nry7x4qn  [    ]  xz@5.2.5%gcc@10.1.0~pic arch=linux-ubuntu18.04-broadwell\r\nkepdmuv  [ l  ]      ^zlib@1.2.11%gcc@10.1.0+optimize+pic+shared arch=linux-ubuntu18.04-broadwell\r\n```\r\n\r\nNow modify the directive above into:\r\n```python\r\ndepends_on('zlib')\r\n```\r\nThis results in:\r\n```console\r\n$ spack spec -lt xz\r\nInput spec\r\n--------------------------------\r\n[    ]  xz\r\nConcretized\r\n--------------------------------\r\neaa3ko3  [    ]  xz@5.2.5%gcc@10.1.0~pic arch=linux-ubuntu18.04-broadwell\r\nkepdmuv  [bl  ]      ^zlib@1.2.11%gcc@10.1.0+optimize+pic+shared arch=linux-ubuntu18.04-broadwell\r\n```\r\n\r\n### Error Message\r\n\r\nNo error message, but an unexpected behavior.\r\n\r\n### Information on your system\r\n\r\n* **Spack:** 0.16.0-1128-39a429b2a3\r\n* **Python:** 3.8.5\r\n* **Platform:** linux-ubuntu18.04-broadwell\r\n* **Concretizer:** original\r\n\r\n### Additional information\r\n\r\nThis diff seems to make the hash computation invariant with respect to build type edges, regardless of other types that may be applied to the same edge:\r\n```diff\r\ndiff --git a/lib/spack/spack/spec.py b/lib/spack/spack/spec.py\r\nindex 06767d6c7d..4d0550add1 100644\r\n--- a/lib/spack/spack/spec.py\r\n+++ b/lib/spack/spack/spec.py\r\n@@ -1633,13 +1633,18 @@ def to_node_dict(self, hash=ht.dag_hash):\r\n \r\n         deps = self.dependencies_dict(deptype=hash.deptype)\r\n         if deps:\r\n-            d['dependencies'] = syaml.syaml_dict([\r\n+            sorted_items = [x for x in sorted(deps.items())]\r\n+            entries = [\r\n                 (name,\r\n                  syaml.syaml_dict([\r\n                      ('hash', dspec.spec._cached_hash(hash)),\r\n-                     ('type', sorted(str(s) for s in dspec.deptypes))])\r\n-                 ) for name, dspec in sorted(deps.items())\r\n-            ])\r\n+                     ('type', sorted(str(s) for s in dspec.deptypes\r\n+                                     if str(s) in hash.deptype)\r\n+                      )])\r\n+                 ) for name, dspec in sorted_items\r\n+            ]\r\n+            dependency_dictionary = syaml.syaml_dict(entries)\r\n+            d['dependencies'] = dependency_dictionary\r\n```\r\nIt makes a lot of tests fail though, so further modifications may be needed.\r\n\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [x] I have run the failing commands in debug mode and reported the output\r\n",
    "user": "alalazo",
    "url": "https://api.github.com/repos/spack/spack/issues/21491",
    "updated_at": "2022-01-06 12:53:07",
    "created_at": "2021-02-04 18:32:22",
    "closed_at": "None",
    "state": "open",
    "title": "Build type dependencies enter \"partially\" in DAG hash",
    "number": 21491,
    "milestone": null,
    "labels": [
        "bug",
        "concretization",
        "hashes",
        "impact-low"
    ],
    "id": 801535758,
    "html_url": "https://github.com/spack/spack/issues/21491",
    "assignees": [
        "tgamblin",
        "alalazo"
    ],
    "comments": 1
}