{
    "body": "I noticed when I run Spack that a `python` process is always using 100% CPU, even when it's spawning compilers.  Is Spack spin-waiting when it spawns subprocesses?  Or is it just being credited 100% because the things it spawned are busy?  If the former, is there another way to get the same effect without spin-waiting?\r\n```\r\n 5251 me  20   0  301876  85656    828 R 100.0  0.7   8:12.86 python                       \r\n30194 me  20   0  257428 130076  10328 R 100.0  1.1   0:04.93 cc1plus                      \r\n13944 me 20   0  158252   2692   1532 R   0.7  0.0   0:05.12 top                          \r\n```\r\n",
    "user": "citibeth",
    "url": "https://api.github.com/repos/spack/spack/issues/2304",
    "updated_at": "2017-11-22 09:42:05",
    "created_at": "2016-11-11 03:30:02",
    "closed_at": "2017-11-22 09:42:05",
    "state": "closed",
    "title": "Does Spack hog a core?",
    "number": 2304,
    "milestone": null,
    "labels": [
        "question",
        "performance"
    ],
    "id": 188677152,
    "html_url": "https://github.com/spack/spack/issues/2304",
    "assignees": [],
    "comments": 2
}