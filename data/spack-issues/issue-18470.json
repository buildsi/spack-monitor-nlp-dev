{
    "body": "<!--*Please add a concise summary of your suggestion here.*-->\r\n\r\n### Rationale\r\n\r\nNot sure whether this makes sense or not, but I feel like I'd like to load the dependencies for a spack package, including the 'gcc' it was built with, and then go to a completely independent git checkout of the software and build it (making use of the spack libs and compiler just loaded).  This didn't quite work because `f95` is magically present in the spack build environment, but not actually provided just by loading `gcc`.\r\n\r\nShould this work?  Or is there some other magical way to get this effect?\r\n\r\nThis is on today's `devel` branch, for example.\r\n\r\n<!--*Is your feature request related to a problem? Please describe it!*-->\r\n\r\n### Description\r\n\r\n<!--*Describe the solution you'd like and the alternatives you have considered.*-->\r\n\r\n\r\n### Additional information\r\n<!--*Add any other context about the feature request here.*-->\r\n\r\n\r\n### General information\r\n\r\n- [ ] I have run `spack --version` and reported the version of Spack\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n\r\n\r\n\r\n<!--If you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack!\r\n-->",
    "user": "michaelkarlcoleman",
    "url": "https://api.github.com/repos/spack/spack/issues/18470",
    "updated_at": "2020-09-03 20:44:30",
    "created_at": "2020-09-02 20:55:23",
    "closed_at": "2020-09-03 01:26:42",
    "state": "closed",
    "title": "f95 should be provided by gcc package?",
    "number": 18470,
    "milestone": null,
    "labels": [
        "feature"
    ],
    "id": 691414335,
    "html_url": "https://github.com/spack/spack/issues/18470",
    "assignees": [],
    "comments": 2
}