{
    "body": "I created a small environment containing only `hpctoolkit` and using the `x86_64` architecture for all targets in the `packages` section.  Here is the `spack.yaml` defining my environment:\r\n\r\n```yaml\r\nspack:\r\n  packages:\r\n    all:\r\n      target: [x86_64]\r\n  specs:\r\n  - hpctoolkit %gcc@7.4.0 os=ubuntu18.04\r\n  view: false\r\n```\r\n\r\nWhen I tried to concretize that environment, the command failed with the following stack trace:\r\n\r\n```console\r\n==> [2020-02-05-08:52:15.800194] Imported concretize from built-in commands\r\n==> [2020-02-05-08:52:15.801124] Imported concretize from built-in commands\r\n==> [2020-02-05-08:52:15.801615] WRITE LOCK: /data/scott/Documents/spack/ECP-2020/repro_tmp/env1/.spack-env/transaction_lock[0:0] [Acquiring]\r\n==> [2020-02-05-08:52:15.801802] WRITE LOCK: /data/scott/Documents/spack/ECP-2020/repro_tmp/env1/.spack-env/transaction_lock[0:0] [Acquired]\r\n==> [2020-02-05-08:52:15.806123] Reading config file /data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack.yaml\r\n==> [2020-02-05-08:52:15.808586] Reading config file /data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/etc/spack/defaults/repos.yaml\r\n==> [2020-02-05-08:52:15.933426] WRITE LOCK: /data/scott/Documents/spack/ECP-2020/repro_tmp/env1/.spack-env/transaction_lock[0:0] [Released]\r\nTraceback (most recent call last):\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/bin/spack\", line 64, in <module>\r\n    sys.exit(spack.main.main())\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/main.py\", line 752, in main\r\n    return _invoke_command(command, parser, args, unknown)\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/main.py\", line 486, in _invoke_command\r\n    return_val = command(parser, args)\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/cmd/concretize.py\", line 22, in concretize\r\n    concretized_specs = env.concretize(force=args.force)\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/environment.py\", line 948, in concretize\r\n    return self._concretize_separately()\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/environment.py\", line 1016, in _concretize_separately\r\n    concrete = _concretize_from_constraints(uspec_constraints)\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/environment.py\", line 1554, in _concretize_from_constraints\r\n    return s.concretized()\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 2300, in concretized\r\n    clone.concretize()\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 2150, in concretize\r\n    user_spec_deps=user_spec_deps),\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 2628, in normalize\r\n    visited, all_spec_deps, provider_index, tests)\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 2554, in _normalize_helper\r\n    dep = self._evaluate_dependency_conditions(dep_name)\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 2377, in _evaluate_dependency_conditions\r\n    if self.satisfies(when_spec, strict=True):\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 2881, in satisfies\r\n    if not self.architecture.satisfies(other.architecture, strict):\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 360, in satisfies\r\n    return self._satisfies_target(other.target, strict=strict)\r\n  File \"/data/scott/Documents/spack/ECP-2020/repro_tmp/env1/spack/lib/spack/spack/spec.py\", line 383, in _satisfies_target\r\n    min_ok = self_target.microarchitecture >= t_min if t_min else True\r\nAttributeError: 'NoneType' object has no attribute 'microarchitecture'\r\n```\r\n\r\nIf I change the environment to put the architecture directly in the abstract spec string, however, it concretizes fine.  Here's the `spack.yaml` that works:\r\n\r\n```yaml\r\nspack:\r\n  specs:\r\n  - hpctoolkit %gcc@7.4.0 arch=linux-ubuntu18.04-x86_64\r\n  view: false\r\n```\r\n\r\nThis is happening on Ubuntu 18.04, here's some system information:\r\n\r\n```\r\n$ uname -a\r\nLinux beast 4.15.0-76-generic #86-Ubuntu SMP Fri Jan 17 17:24:28 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n$ cat /etc/lsb-release \r\nDISTRIB_ID=Ubuntu\r\nDISTRIB_RELEASE=18.04\r\nDISTRIB_CODENAME=bionic\r\nDISTRIB_DESCRIPTION=\"Ubuntu 18.04.4 LTS\"\r\n```\r\n\r\nI'm not sure whether this is an bug in spack core, or in the hpctoolkit package, or one of it's dependencies.  Please let me know if more information is needed.",
    "user": "scottwittenburg",
    "url": "https://api.github.com/repos/spack/spack/issues/14754",
    "updated_at": "2020-03-07 12:58:34",
    "created_at": "2020-02-05 16:07:29",
    "closed_at": "2020-03-07 12:58:34",
    "state": "closed",
    "title": "Error concretizing environment containing only hpctoolkit",
    "number": 14754,
    "milestone": null,
    "labels": [
        "bug",
        "impact-low"
    ],
    "id": 560472316,
    "html_url": "https://github.com/spack/spack/issues/14754",
    "assignees": [
        "alalazo"
    ],
    "comments": 2
}