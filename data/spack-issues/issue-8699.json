{
    "body": "Fixes https://github.com/spack/spack/issues/8637\r\n\r\nThis updates `spack mirror create` to include all patches (including patches specified by dependents on children) in the mirror that is created.\r\n\r\nThis also updates the `spack mirror` command to add all packages in the concretized DAG (where originally it only added the package specified by the user). This is required in order to collect patches that are specified by dependents: e.g. if X->Y and X requires a patch on Y called Pxy, then Pxy will only be discovered if you create a mirror with X.\r\n\r\nA more ambitious approach would attempt to consolidate the behavior of `spack fetch` and `spack mirror` (e.g. it may be desirable for `spack fetch` to also download all patches), but this requires more consideration:\r\n\r\n* The current `mirror.create` logic circumvents all caching/mirroring and directly fetches from the default source \r\n* If the fetching phase were updated to include patches, then additional refactoring is required to keep track of patches: patches are not managed like package sources or resources - for example they are not maintained as part of `Package.stage` - they are downloaded and applied at the same time in `Patch.apply`.\r\n\r\nSo I think the current state of the PR is a good compromise.\r\n\r\nTODOs:\r\n\r\n- [ ] Add an option to `spack mirror` to enable mirroring the whole DAG (right now it always downloads the whole DAG)",
    "user": "scheibelp",
    "url": "https://api.github.com/repos/spack/spack/issues/8699",
    "updated_at": "2018-08-16 02:42:14",
    "created_at": "2018-07-13 00:16:25",
    "closed_at": "2018-08-16 02:42:14",
    "state": "closed",
    "title": "[WIP] Add patches to mirrors",
    "number": 8699,
    "milestone": null,
    "labels": [
        "mirrors",
        "patch"
    ],
    "id": 340839835,
    "html_url": "https://github.com/spack/spack/pull/8699",
    "assignees": [],
    "comments": 2
}