{
    "body": "I have currently two versions of perl installed:\r\n\r\n```sh\r\n$ spack find -dv perl\r\n==> 2 installed packages.\r\n-- linux-ubuntu12.04-x86_64 / gcc@6.4.0 -------------------------\r\n    perl@5.24.1+cpanm+shared\r\n        ^gdbm@1.13\r\n            ^readline@7.0\r\n                ^ncurses@6.0 patches=4110a40613b800da2b2888c352b64c75a82809d48341061e4de5861e8b28423f,f84b2708a42777aadcc7f502a261afe10ca5646a51c1ef8b5e60d2070d926b57 ~symlinks\r\n\r\n    perl@5.24.1+cpanm+shared\r\n        ^gdbm@1.13\r\n            ^readline@7.0\r\n                ^ncurses@6.0~symlinks\r\n```\r\n\r\nThe second one was installed manually some time ago, the first one was installed as a dependency when trying to install `r^gettext~libxml2`. Is there a way to find out why, instead of reusing the existing installation?\r\n\r\nI tried to examine `spack spec r^gettext~libxml2`, but that got me even more confused, because the concretized perl dependency seems to be the second one (i.e. the one installed first, manually):\r\n\r\n```\r\n^perl@5.24.1%gcc@6.4.0+cpanm+shared arch=linux-ubuntu12.04-x86_64\r\n```",
    "user": "dlukes",
    "url": "https://api.github.com/repos/spack/spack/issues/5839",
    "updated_at": "2017-11-01 08:45:10",
    "created_at": "2017-10-20 07:08:46",
    "closed_at": "2017-11-01 00:54:57",
    "state": "closed",
    "title": "Why does spack install new version of package instead of using existing one?",
    "number": 5839,
    "milestone": null,
    "labels": [],
    "id": 267082341,
    "html_url": "https://github.com/spack/spack/issues/5839",
    "assignees": [
        "scheibelp"
    ],
    "comments": 6
}